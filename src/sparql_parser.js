// exports
exports.SparqlParser = {};
var SparqlParser = exports.SparqlParser;

SparqlParser.parser = (function(){
  /* Generated by PEG.js 0.6.2 (http://pegjs.majda.cz/). */
  
  var result = {
    /*
     * Parses the input with a generated parser. If the parsing is successfull,
     * returns a value explicitly or implicitly specified by the grammar from
     * which the parser was generated (see |PEG.buildParser|). If the parsing is
     * unsuccessful, throws |PEG.parser.SyntaxError| describing the error.
     */
    parse: function(input, startRule) {
      var parseFunctions = {
        "ANON": parse_ANON,
        "AdditiveExpression": parse_AdditiveExpression,
        "Aggregate": parse_Aggregate,
        "ArgList": parse_ArgList,
        "AskQuery": parse_AskQuery,
        "BLANK_NODE_LABEL": parse_BLANK_NODE_LABEL,
        "BaseDecl": parse_BaseDecl,
        "BindingValue": parse_BindingValue,
        "BindingsClause": parse_BindingsClause,
        "BlankNode": parse_BlankNode,
        "BlankNodePropertyList": parse_BlankNodePropertyList,
        "BooleanLiteral": parse_BooleanLiteral,
        "BrackettedExpression": parse_BrackettedExpression,
        "BuiltInCall": parse_BuiltInCall,
        "COMMENT": parse_COMMENT,
        "Clear": parse_Clear,
        "Collection": parse_Collection,
        "ConditionalAndExpression": parse_ConditionalAndExpression,
        "ConditionalOrExpression": parse_ConditionalOrExpression,
        "Constraint": parse_Constraint,
        "ConstructQuery": parse_ConstructQuery,
        "ConstructTemplate": parse_ConstructTemplate,
        "ConstructTriples": parse_ConstructTriples,
        "Create": parse_Create,
        "DECIMAL": parse_DECIMAL,
        "DECIMAL_NEGATIVE": parse_DECIMAL_NEGATIVE,
        "DECIMAL_POSITIVE": parse_DECIMAL_POSITIVE,
        "DOCUMENT": parse_DOCUMENT,
        "DOUBLE": parse_DOUBLE,
        "DOUBLE_NEGATIVE": parse_DOUBLE_NEGATIVE,
        "DOUBLE_POSITIVE": parse_DOUBLE_POSITIVE,
        "DatasetClause": parse_DatasetClause,
        "DefaultGraphClause": parse_DefaultGraphClause,
        "DeleteClause": parse_DeleteClause,
        "DeleteData": parse_DeleteData,
        "DeleteWhere": parse_DeleteWhere,
        "DescribeQuery": parse_DescribeQuery,
        "Drop": parse_Drop,
        "ECHAR": parse_ECHAR,
        "EXPONENT": parse_EXPONENT,
        "ExistsFunc": parse_ExistsFunc,
        "ExpressionList": parse_ExpressionList,
        "Filter": parse_Filter,
        "FunctionCall": parse_FunctionCall,
        "GraphGraphPattern": parse_GraphGraphPattern,
        "GraphNode": parse_GraphNode,
        "GraphPatternNotTriples": parse_GraphPatternNotTriples,
        "GraphRef": parse_GraphRef,
        "GraphRefAll": parse_GraphRefAll,
        "GraphTerm": parse_GraphTerm,
        "GroupClause": parse_GroupClause,
        "GroupCondition": parse_GroupCondition,
        "GroupGraphPattern": parse_GroupGraphPattern,
        "GroupGraphPatternSub": parse_GroupGraphPatternSub,
        "GroupOrUnionGraphPattern": parse_GroupOrUnionGraphPattern,
        "HavingClause": parse_HavingClause,
        "INTEGER": parse_INTEGER,
        "INTEGER_NEGATIVE": parse_INTEGER_NEGATIVE,
        "INTEGER_POSITIVE": parse_INTEGER_POSITIVE,
        "IRI_REF": parse_IRI_REF,
        "IRIref": parse_IRIref,
        "IRIrefOrFunction": parse_IRIrefOrFunction,
        "InsertClause": parse_InsertClause,
        "InsertData": parse_InsertData,
        "LANGTAG": parse_LANGTAG,
        "LimitClause": parse_LimitClause,
        "LimitOffsetClauses": parse_LimitOffsetClauses,
        "Load": parse_Load,
        "MinusGraphPattern": parse_MinusGraphPattern,
        "Modify": parse_Modify,
        "MultiplicativeExpression": parse_MultiplicativeExpression,
        "NIL": parse_NIL,
        "NamedGraphClause": parse_NamedGraphClause,
        "NotExistsFunc": parse_NotExistsFunc,
        "NumericLiteral": parse_NumericLiteral,
        "NumericLiteralNegative": parse_NumericLiteralNegative,
        "NumericLiteralPositive": parse_NumericLiteralPositive,
        "NumericLiteralUnsigned": parse_NumericLiteralUnsigned,
        "ObjectList": parse_ObjectList,
        "OffsetClause": parse_OffsetClause,
        "OptionalGraphPattern": parse_OptionalGraphPattern,
        "OrderClause": parse_OrderClause,
        "OrderCondition": parse_OrderCondition,
        "PNAME_LN": parse_PNAME_LN,
        "PNAME_NS": parse_PNAME_NS,
        "PN_CHARS": parse_PN_CHARS,
        "PN_CHARS_BASE": parse_PN_CHARS_BASE,
        "PN_CHARS_U": parse_PN_CHARS_U,
        "PN_LOCAL": parse_PN_LOCAL,
        "PN_PREFIX": parse_PN_PREFIX,
        "PathAlternative": parse_PathAlternative,
        "PathElt": parse_PathElt,
        "PathEltOrInverse": parse_PathEltOrInverse,
        "PathMod": parse_PathMod,
        "PathNegatedPropertySet": parse_PathNegatedPropertySet,
        "PathOneInPropertySet": parse_PathOneInPropertySet,
        "PathPrimary": parse_PathPrimary,
        "PathSequence": parse_PathSequence,
        "PrefixDecl": parse_PrefixDecl,
        "PrefixedName": parse_PrefixedName,
        "PrimaryExpression": parse_PrimaryExpression,
        "Prologue": parse_Prologue,
        "PropertyList": parse_PropertyList,
        "PropertyListNotEmpty": parse_PropertyListNotEmpty,
        "PropertyListNotEmptyPath": parse_PropertyListNotEmptyPath,
        "PropertyListPath": parse_PropertyListPath,
        "QuadData": parse_QuadData,
        "QuadPattern": parse_QuadPattern,
        "Quads": parse_Quads,
        "QuadsNotTriples": parse_QuadsNotTriples,
        "Query": parse_Query,
        "RDFLiteral": parse_RDFLiteral,
        "RegexExpression": parse_RegexExpression,
        "RelationalExpression": parse_RelationalExpression,
        "SPARQL": parse_SPARQL,
        "STRING_LITERAL1": parse_STRING_LITERAL1,
        "STRING_LITERAL2": parse_STRING_LITERAL2,
        "STRING_LITERAL_LONG1": parse_STRING_LITERAL_LONG1,
        "STRING_LITERAL_LONG2": parse_STRING_LITERAL_LONG2,
        "SelectClause": parse_SelectClause,
        "SelectQuery": parse_SelectQuery,
        "ServiceGraphPattern": parse_ServiceGraphPattern,
        "SolutionModifier": parse_SolutionModifier,
        "String": parse_String,
        "SubSelect": parse_SubSelect,
        "TURTLE": parse_TURTLE,
        "TriplesBlock": parse_TriplesBlock,
        "TriplesNode": parse_TriplesNode,
        "TriplesSameSubject": parse_TriplesSameSubject,
        "TriplesTemplate": parse_TriplesTemplate,
        "UnaryExpression": parse_UnaryExpression,
        "Update": parse_Update,
        "Update1": parse_Update1,
        "UsingClause": parse_UsingClause,
        "VAR1": parse_VAR1,
        "VAR2": parse_VAR2,
        "VARNAME": parse_VARNAME,
        "Var": parse_Var,
        "VarOrIRIref": parse_VarOrIRIref,
        "VarOrTerm": parse_VarOrTerm,
        "Verb": parse_Verb,
        "VerbPath": parse_VerbPath,
        "WS": parse_WS,
        "WhereClause": parse_WhereClause,
        "base": parse_base,
        "directive": parse_directive,
        "prefixID": parse_prefixID,
        "statement": parse_statement
      };
      
      if (startRule !== undefined) {
        if (parseFunctions[startRule] === undefined) {
          throw new Error("Invalid rule name: " + quote(startRule) + ".");
        }
      } else {
        startRule = "DOCUMENT";
      }
      
      var pos = 0;
      var reportMatchFailures = true;
      var rightmostMatchFailuresPos = 0;
      var rightmostMatchFailuresExpected = [];
      var cache = {};
      
      function padLeft(input, padding, length) {
        var result = input;
        
        var padLength = length - input.length;
        for (var i = 0; i < padLength; i++) {
          result = padding + result;
        }
        
        return result;
      }
      
      function escape(ch) {
        var charCode = ch.charCodeAt(0);
        
        if (charCode <= 0xFF) {
          var escapeChar = 'x';
          var length = 2;
        } else {
          var escapeChar = 'u';
          var length = 4;
        }
        
        return '\\' + escapeChar + padLeft(charCode.toString(16).toUpperCase(), '0', length);
      }
      
      function quote(s) {
        /*
         * ECMA-262, 5th ed., 7.8.4: All characters may appear literally in a
         * string literal except for the closing quote character, backslash,
         * carriage return, line separator, paragraph separator, and line feed.
         * Any character may appear in the form of an escape sequence.
         */
        return '"' + s
          .replace(/\\/g, '\\\\')            // backslash
          .replace(/"/g, '\\"')              // closing quote character
          .replace(/\r/g, '\\r')             // carriage return
          .replace(/\n/g, '\\n')             // line feed
          .replace(/[\x80-\uFFFF]/g, escape) // non-ASCII characters
          + '"';
      }
      
      function matchFailed(failure) {
        if (pos < rightmostMatchFailuresPos) {
          return;
        }
        
        if (pos > rightmostMatchFailuresPos) {
          rightmostMatchFailuresPos = pos;
          rightmostMatchFailuresExpected = [];
        }
        
        rightmostMatchFailuresExpected.push(failure);
      }
      
      function parse_DOCUMENT() {
        var cacheKey = 'DOCUMENT@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var result2 = parse_SPARQL();
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result1 = parse_TURTLE();
          if (result1 !== null) {
            var result0 = result1;
          } else {
            var result0 = null;;
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_SPARQL() {
        var cacheKey = 'SPARQL@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var result2 = parse_Query();
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result1 = parse_Update();
          if (result1 !== null) {
            var result0 = result1;
          } else {
            var result0 = null;;
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_Query() {
        var cacheKey = 'Query@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = parse_Prologue();
        if (result3 !== null) {
          var result8 = parse_SelectQuery();
          if (result8 !== null) {
            var result4 = result8;
          } else {
            var result7 = parse_ConstructQuery();
            if (result7 !== null) {
              var result4 = result7;
            } else {
              var result6 = parse_DescribeQuery();
              if (result6 !== null) {
                var result4 = result6;
              } else {
                var result5 = parse_AskQuery();
                if (result5 !== null) {
                  var result4 = result5;
                } else {
                  var result4 = null;;
                };
              };
            };
          }
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(p, q) {
                return {token: 'query',
                        kind: 'query',
                        prologue: p,
                        units: [q]};
          })(result1[0], result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[2] Query");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_Prologue() {
        var cacheKey = 'Prologue@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result8 = parse_BaseDecl();
        var result3 = result8 !== null ? result8 : '';
        if (result3 !== null) {
          var result4 = [];
          var result7 = parse_WS();
          while (result7 !== null) {
            result4.push(result7);
            var result7 = parse_WS();
          }
          if (result4 !== null) {
            var result5 = [];
            var result6 = parse_PrefixDecl();
            while (result6 !== null) {
              result5.push(result6);
              var result6 = parse_PrefixDecl();
            }
            if (result5 !== null) {
              var result1 = [result3, result4, result5];
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(b, pfx) {
                return { token: 'prologue',
                         base: b,
                         prefixes: pfx }
          })(result1[0], result1[2])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[3] Prologue");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_BaseDecl() {
        var cacheKey = 'BaseDecl@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = [];
        var result19 = parse_WS();
        while (result19 !== null) {
          result3.push(result19);
          var result19 = parse_WS();
        }
        if (result3 !== null) {
          if (input.substr(pos, 1) === "B") {
            var result18 = "B";
            pos += 1;
          } else {
            var result18 = null;
            if (reportMatchFailures) {
              matchFailed("\"B\"");
            }
          }
          if (result18 !== null) {
            var result4 = result18;
          } else {
            if (input.substr(pos, 1) === "b") {
              var result17 = "b";
              pos += 1;
            } else {
              var result17 = null;
              if (reportMatchFailures) {
                matchFailed("\"b\"");
              }
            }
            if (result17 !== null) {
              var result4 = result17;
            } else {
              var result4 = null;;
            };
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === "A") {
              var result16 = "A";
              pos += 1;
            } else {
              var result16 = null;
              if (reportMatchFailures) {
                matchFailed("\"A\"");
              }
            }
            if (result16 !== null) {
              var result5 = result16;
            } else {
              if (input.substr(pos, 1) === "a") {
                var result15 = "a";
                pos += 1;
              } else {
                var result15 = null;
                if (reportMatchFailures) {
                  matchFailed("\"a\"");
                }
              }
              if (result15 !== null) {
                var result5 = result15;
              } else {
                var result5 = null;;
              };
            }
            if (result5 !== null) {
              if (input.substr(pos, 1) === "S") {
                var result14 = "S";
                pos += 1;
              } else {
                var result14 = null;
                if (reportMatchFailures) {
                  matchFailed("\"S\"");
                }
              }
              if (result14 !== null) {
                var result6 = result14;
              } else {
                if (input.substr(pos, 1) === "s") {
                  var result13 = "s";
                  pos += 1;
                } else {
                  var result13 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"s\"");
                  }
                }
                if (result13 !== null) {
                  var result6 = result13;
                } else {
                  var result6 = null;;
                };
              }
              if (result6 !== null) {
                if (input.substr(pos, 1) === "E") {
                  var result12 = "E";
                  pos += 1;
                } else {
                  var result12 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"E\"");
                  }
                }
                if (result12 !== null) {
                  var result7 = result12;
                } else {
                  if (input.substr(pos, 1) === "e") {
                    var result11 = "e";
                    pos += 1;
                  } else {
                    var result11 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"e\"");
                    }
                  }
                  if (result11 !== null) {
                    var result7 = result11;
                  } else {
                    var result7 = null;;
                  };
                }
                if (result7 !== null) {
                  var result8 = [];
                  var result10 = parse_WS();
                  while (result10 !== null) {
                    result8.push(result10);
                    var result10 = parse_WS();
                  }
                  if (result8 !== null) {
                    var result9 = parse_IRI_REF();
                    if (result9 !== null) {
                      var result1 = [result3, result4, result5, result6, result7, result8, result9];
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(i) {
                registerDefaultPrefix(i);
          
                base = {};
                base.token = 'base';
                base.value = i;
          
                return base;
          })(result1[6])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[4] BaseDecl");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_PrefixDecl() {
        var cacheKey = 'PrefixDecl@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = [];
        var result28 = parse_WS();
        while (result28 !== null) {
          result3.push(result28);
          var result28 = parse_WS();
        }
        if (result3 !== null) {
          if (input.substr(pos, 1) === "P") {
            var result27 = "P";
            pos += 1;
          } else {
            var result27 = null;
            if (reportMatchFailures) {
              matchFailed("\"P\"");
            }
          }
          if (result27 !== null) {
            var result4 = result27;
          } else {
            if (input.substr(pos, 1) === "p") {
              var result26 = "p";
              pos += 1;
            } else {
              var result26 = null;
              if (reportMatchFailures) {
                matchFailed("\"p\"");
              }
            }
            if (result26 !== null) {
              var result4 = result26;
            } else {
              var result4 = null;;
            };
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === "R") {
              var result25 = "R";
              pos += 1;
            } else {
              var result25 = null;
              if (reportMatchFailures) {
                matchFailed("\"R\"");
              }
            }
            if (result25 !== null) {
              var result5 = result25;
            } else {
              if (input.substr(pos, 1) === "r") {
                var result24 = "r";
                pos += 1;
              } else {
                var result24 = null;
                if (reportMatchFailures) {
                  matchFailed("\"r\"");
                }
              }
              if (result24 !== null) {
                var result5 = result24;
              } else {
                var result5 = null;;
              };
            }
            if (result5 !== null) {
              if (input.substr(pos, 1) === "E") {
                var result23 = "E";
                pos += 1;
              } else {
                var result23 = null;
                if (reportMatchFailures) {
                  matchFailed("\"E\"");
                }
              }
              if (result23 !== null) {
                var result6 = result23;
              } else {
                if (input.substr(pos, 1) === "e") {
                  var result22 = "e";
                  pos += 1;
                } else {
                  var result22 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"e\"");
                  }
                }
                if (result22 !== null) {
                  var result6 = result22;
                } else {
                  var result6 = null;;
                };
              }
              if (result6 !== null) {
                if (input.substr(pos, 1) === "F") {
                  var result21 = "F";
                  pos += 1;
                } else {
                  var result21 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"F\"");
                  }
                }
                if (result21 !== null) {
                  var result7 = result21;
                } else {
                  if (input.substr(pos, 1) === "f") {
                    var result20 = "f";
                    pos += 1;
                  } else {
                    var result20 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"f\"");
                    }
                  }
                  if (result20 !== null) {
                    var result7 = result20;
                  } else {
                    var result7 = null;;
                  };
                }
                if (result7 !== null) {
                  if (input.substr(pos, 1) === "I") {
                    var result19 = "I";
                    pos += 1;
                  } else {
                    var result19 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"I\"");
                    }
                  }
                  if (result19 !== null) {
                    var result8 = result19;
                  } else {
                    if (input.substr(pos, 1) === "i") {
                      var result18 = "i";
                      pos += 1;
                    } else {
                      var result18 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"i\"");
                      }
                    }
                    if (result18 !== null) {
                      var result8 = result18;
                    } else {
                      var result8 = null;;
                    };
                  }
                  if (result8 !== null) {
                    if (input.substr(pos, 1) === "X") {
                      var result17 = "X";
                      pos += 1;
                    } else {
                      var result17 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"X\"");
                      }
                    }
                    if (result17 !== null) {
                      var result9 = result17;
                    } else {
                      if (input.substr(pos, 1) === "x") {
                        var result16 = "x";
                        pos += 1;
                      } else {
                        var result16 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"x\"");
                        }
                      }
                      if (result16 !== null) {
                        var result9 = result16;
                      } else {
                        var result9 = null;;
                      };
                    }
                    if (result9 !== null) {
                      var result10 = [];
                      var result15 = parse_WS();
                      while (result15 !== null) {
                        result10.push(result15);
                        var result15 = parse_WS();
                      }
                      if (result10 !== null) {
                        var result11 = parse_PNAME_NS();
                        if (result11 !== null) {
                          var result12 = [];
                          var result14 = parse_WS();
                          while (result14 !== null) {
                            result12.push(result14);
                            var result14 = parse_WS();
                          }
                          if (result12 !== null) {
                            var result13 = parse_IRI_REF();
                            if (result13 !== null) {
                              var result1 = [result3, result4, result5, result6, result7, result8, result9, result10, result11, result12, result13];
                            } else {
                              var result1 = null;
                              pos = savedPos1;
                            }
                          } else {
                            var result1 = null;
                            pos = savedPos1;
                          }
                        } else {
                          var result1 = null;
                          pos = savedPos1;
                        }
                      } else {
                        var result1 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(p, l) {
          
                registerPrefix(p,l);
          
                prefix = {};
                prefix.token = 'prefix';
                prefix.prefix = p;
                prefix.local = l;
          
                return prefix;
          })(result1[8], result1[10])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[5] PrefixDecl");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_TURTLE() {
        var cacheKey = 'TURTLE@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var result1 = [];
        var result3 = parse_statement();
        while (result3 !== null) {
          result1.push(result3);
          var result3 = parse_statement();
        }
        var result2 = result1 !== null
          ? (function(sts) {
                  return sts;
              })(result1)
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_statement() {
        var cacheKey = 'statement@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos2 = pos;
        var savedPos3 = pos;
        var result14 = [];
        var result21 = parse_WS();
        while (result21 !== null) {
          result14.push(result21);
          var result21 = parse_WS();
        }
        if (result14 !== null) {
          var result15 = parse_directive();
          if (result15 !== null) {
            var result16 = [];
            var result20 = parse_WS();
            while (result20 !== null) {
              result16.push(result20);
              var result20 = parse_WS();
            }
            if (result16 !== null) {
              if (input.substr(pos, 1) === ".") {
                var result17 = ".";
                pos += 1;
              } else {
                var result17 = null;
                if (reportMatchFailures) {
                  matchFailed("\".\"");
                }
              }
              if (result17 !== null) {
                var result18 = [];
                var result19 = parse_WS();
                while (result19 !== null) {
                  result18.push(result19);
                  var result19 = parse_WS();
                }
                if (result18 !== null) {
                  var result12 = [result14, result15, result16, result17, result18];
                } else {
                  var result12 = null;
                  pos = savedPos3;
                }
              } else {
                var result12 = null;
                pos = savedPos3;
              }
            } else {
              var result12 = null;
              pos = savedPos3;
            }
          } else {
            var result12 = null;
            pos = savedPos3;
          }
        } else {
          var result12 = null;
          pos = savedPos3;
        }
        var result13 = result12 !== null
          ? (function(d) {
                  return d;
              })(result12[1])
          : null;
        if (result13 !== null) {
          var result11 = result13;
        } else {
          var result11 = null;
          pos = savedPos2;
        }
        if (result11 !== null) {
          var result0 = result11;
        } else {
          var savedPos0 = pos;
          var savedPos1 = pos;
          var result6 = [];
          var result10 = parse_WS();
          while (result10 !== null) {
            result6.push(result10);
            var result10 = parse_WS();
          }
          if (result6 !== null) {
            var result7 = parse_TriplesBlock();
            if (result7 !== null) {
              var result8 = [];
              var result9 = parse_WS();
              while (result9 !== null) {
                result8.push(result9);
                var result9 = parse_WS();
              }
              if (result8 !== null) {
                var result4 = [result6, result7, result8];
              } else {
                var result4 = null;
                pos = savedPos1;
              }
            } else {
              var result4 = null;
              pos = savedPos1;
            }
          } else {
            var result4 = null;
            pos = savedPos1;
          }
          var result5 = result4 !== null
            ? (function(ts) {
                    return ts;
                })(result4[1])
            : null;
          if (result5 !== null) {
            var result3 = result5;
          } else {
            var result3 = null;
            pos = savedPos0;
          }
          if (result3 !== null) {
            var result0 = result3;
          } else {
            var result2 = parse_WS();
            if (result2 !== null) {
              var result1 = [];
              while (result2 !== null) {
                result1.push(result2);
                var result2 = parse_WS();
              }
            } else {
              var result1 = null;
            }
            if (result1 !== null) {
              var result0 = result1;
            } else {
              var result0 = null;;
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_directive() {
        var cacheKey = 'directive@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var result2 = parse_prefixID();
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result1 = parse_base();
          if (result1 !== null) {
            var result0 = result1;
          } else {
            var result0 = null;;
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_base() {
        var cacheKey = 'base@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = [];
        var result8 = parse_WS();
        while (result8 !== null) {
          result3.push(result8);
          var result8 = parse_WS();
        }
        if (result3 !== null) {
          if (input.substr(pos, 5) === "@base") {
            var result4 = "@base";
            pos += 5;
          } else {
            var result4 = null;
            if (reportMatchFailures) {
              matchFailed("\"@base\"");
            }
          }
          if (result4 !== null) {
            var result7 = parse_WS();
            if (result7 !== null) {
              var result5 = [];
              while (result7 !== null) {
                result5.push(result7);
                var result7 = parse_WS();
              }
            } else {
              var result5 = null;
            }
            if (result5 !== null) {
              var result6 = parse_IRI_REF();
              if (result6 !== null) {
                var result1 = [result3, result4, result5, result6];
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(i) {
                registerDefaultPrefix(i);
          
                base = {};
                base.token = 'base';
                base.value = i;
          
                return base;
          })(result1[3])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_prefixID() {
        var cacheKey = 'prefixID@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = [];
        var result13 = parse_WS();
        while (result13 !== null) {
          result3.push(result13);
          var result13 = parse_WS();
        }
        if (result3 !== null) {
          if (input.substr(pos, 7) === "@prefix") {
            var result4 = "@prefix";
            pos += 7;
          } else {
            var result4 = null;
            if (reportMatchFailures) {
              matchFailed("\"@prefix\"");
            }
          }
          if (result4 !== null) {
            var result12 = parse_WS();
            if (result12 !== null) {
              var result5 = [];
              while (result12 !== null) {
                result5.push(result12);
                var result12 = parse_WS();
              }
            } else {
              var result5 = null;
            }
            if (result5 !== null) {
              var result11 = parse_PN_PREFIX();
              var result6 = result11 !== null ? result11 : '';
              if (result6 !== null) {
                if (input.substr(pos, 1) === ":") {
                  var result7 = ":";
                  pos += 1;
                } else {
                  var result7 = null;
                  if (reportMatchFailures) {
                    matchFailed("\":\"");
                  }
                }
                if (result7 !== null) {
                  var result8 = [];
                  var result10 = parse_WS();
                  while (result10 !== null) {
                    result8.push(result10);
                    var result10 = parse_WS();
                  }
                  if (result8 !== null) {
                    var result9 = parse_IRI_REF();
                    if (result9 !== null) {
                      var result1 = [result3, result4, result5, result6, result7, result8, result9];
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(p, l) {
          
                registerPrefix(p,l);
          
                prefix = {};
                prefix.token = 'prefix';
                prefix.prefix = p;
                prefix.local = l;
          
                return prefix;
          })(result1[3], result1[6])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_SelectQuery() {
        var cacheKey = 'SelectQuery@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = parse_SelectClause();
        if (result3 !== null) {
          var result4 = [];
          var result16 = parse_WS();
          while (result16 !== null) {
            result4.push(result16);
            var result16 = parse_WS();
          }
          if (result4 !== null) {
            var result5 = [];
            var result15 = parse_DatasetClause();
            while (result15 !== null) {
              result5.push(result15);
              var result15 = parse_DatasetClause();
            }
            if (result5 !== null) {
              var result6 = [];
              var result14 = parse_WS();
              while (result14 !== null) {
                result6.push(result14);
                var result14 = parse_WS();
              }
              if (result6 !== null) {
                var result7 = parse_WhereClause();
                if (result7 !== null) {
                  var result8 = [];
                  var result13 = parse_WS();
                  while (result13 !== null) {
                    result8.push(result13);
                    var result13 = parse_WS();
                  }
                  if (result8 !== null) {
                    var result9 = parse_SolutionModifier();
                    if (result9 !== null) {
                      var result10 = [];
                      var result12 = parse_WS();
                      while (result12 !== null) {
                        result10.push(result12);
                        var result12 = parse_WS();
                      }
                      if (result10 !== null) {
                        var result11 = parse_BindingsClause();
                        if (result11 !== null) {
                          var result1 = [result3, result4, result5, result6, result7, result8, result9, result10, result11];
                        } else {
                          var result1 = null;
                          pos = savedPos1;
                        }
                      } else {
                        var result1 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(s, gs, w, sm) {
          
                var dataset = {'named':[], 'default':[]};
                for(var i=0; i<gs.length; i++) {
                    var g = gs[i];
                    if(g.kind === 'default') {
                        dataset['default'].push(g.graph);
                    } else {
                        dataset['named'].push(g.graph)
                    }
                }
          
          
                if(dataset['named'].length === 0 && dataset['default'].length === 0) {
                    dataset['default'].push({token:'uri', 
                                             prefix:null, 
                                             suffix:null, 
                                             value:'https://github.com/antoniogarrote/rdfstore-js#default_graph'});
                }
          
                var query = {};
                query.kind = 'select';
                query.token = 'executableunit'
                query.dataset = dataset;
                query.projection = s.vars;
                query.modifier = s.modifier;
                query.pattern = w
                
                if(sm!=null && sm.limit!=null) {
                    query.limit = sm.limit;
                }
                if(sm!=null && sm.offset!=null) {
                    query.offset = sm.offset;
                }
                if(sm!=null && (sm.order!=null && sm.order!="")) {
                    query.order = sm.order;
                }
                if(sm!=null && sm.group!=null) {
                    query.group = sm.group;
                }
          
                return query
          })(result1[0], result1[2], result1[4], result1[6])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[6] SelectQuery");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_SubSelect() {
        var cacheKey = 'SubSelect@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var result1 = parse_SelectClause();
        if (result1 !== null) {
          var result2 = parse_WhereClause();
          if (result2 !== null) {
            var result3 = parse_SolutionModifier();
            if (result3 !== null) {
              var result0 = [result1, result2, result3];
            } else {
              var result0 = null;
              pos = savedPos0;
            }
          } else {
            var result0 = null;
            pos = savedPos0;
          }
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[7] SubSelect");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_SelectClause() {
        var cacheKey = 'SelectClause@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = [];
        var result113 = parse_WS();
        while (result113 !== null) {
          result3.push(result113);
          var result113 = parse_WS();
        }
        if (result3 !== null) {
          if (input.substr(pos, 1) === "S") {
            var result112 = "S";
            pos += 1;
          } else {
            var result112 = null;
            if (reportMatchFailures) {
              matchFailed("\"S\"");
            }
          }
          if (result112 !== null) {
            var result4 = result112;
          } else {
            if (input.substr(pos, 1) === "s") {
              var result111 = "s";
              pos += 1;
            } else {
              var result111 = null;
              if (reportMatchFailures) {
                matchFailed("\"s\"");
              }
            }
            if (result111 !== null) {
              var result4 = result111;
            } else {
              var result4 = null;;
            };
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === "E") {
              var result110 = "E";
              pos += 1;
            } else {
              var result110 = null;
              if (reportMatchFailures) {
                matchFailed("\"E\"");
              }
            }
            if (result110 !== null) {
              var result5 = result110;
            } else {
              if (input.substr(pos, 1) === "e") {
                var result109 = "e";
                pos += 1;
              } else {
                var result109 = null;
                if (reportMatchFailures) {
                  matchFailed("\"e\"");
                }
              }
              if (result109 !== null) {
                var result5 = result109;
              } else {
                var result5 = null;;
              };
            }
            if (result5 !== null) {
              if (input.substr(pos, 1) === "L") {
                var result108 = "L";
                pos += 1;
              } else {
                var result108 = null;
                if (reportMatchFailures) {
                  matchFailed("\"L\"");
                }
              }
              if (result108 !== null) {
                var result6 = result108;
              } else {
                if (input.substr(pos, 1) === "l") {
                  var result107 = "l";
                  pos += 1;
                } else {
                  var result107 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"l\"");
                  }
                }
                if (result107 !== null) {
                  var result6 = result107;
                } else {
                  var result6 = null;;
                };
              }
              if (result6 !== null) {
                if (input.substr(pos, 1) === "E") {
                  var result106 = "E";
                  pos += 1;
                } else {
                  var result106 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"E\"");
                  }
                }
                if (result106 !== null) {
                  var result7 = result106;
                } else {
                  if (input.substr(pos, 1) === "e") {
                    var result105 = "e";
                    pos += 1;
                  } else {
                    var result105 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"e\"");
                    }
                  }
                  if (result105 !== null) {
                    var result7 = result105;
                  } else {
                    var result7 = null;;
                  };
                }
                if (result7 !== null) {
                  if (input.substr(pos, 1) === "C") {
                    var result104 = "C";
                    pos += 1;
                  } else {
                    var result104 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"C\"");
                    }
                  }
                  if (result104 !== null) {
                    var result8 = result104;
                  } else {
                    if (input.substr(pos, 1) === "c") {
                      var result103 = "c";
                      pos += 1;
                    } else {
                      var result103 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"c\"");
                      }
                    }
                    if (result103 !== null) {
                      var result8 = result103;
                    } else {
                      var result8 = null;;
                    };
                  }
                  if (result8 !== null) {
                    if (input.substr(pos, 1) === "T") {
                      var result102 = "T";
                      pos += 1;
                    } else {
                      var result102 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"T\"");
                      }
                    }
                    if (result102 !== null) {
                      var result9 = result102;
                    } else {
                      if (input.substr(pos, 1) === "t") {
                        var result101 = "t";
                        pos += 1;
                      } else {
                        var result101 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"t\"");
                        }
                      }
                      if (result101 !== null) {
                        var result9 = result101;
                      } else {
                        var result9 = null;;
                      };
                    }
                    if (result9 !== null) {
                      var result10 = [];
                      var result100 = parse_WS();
                      while (result100 !== null) {
                        result10.push(result100);
                        var result100 = parse_WS();
                      }
                      if (result10 !== null) {
                        var savedPos6 = pos;
                        if (input.substr(pos, 1) === "D") {
                          var result99 = "D";
                          pos += 1;
                        } else {
                          var result99 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"D\"");
                          }
                        }
                        if (result99 !== null) {
                          var result76 = result99;
                        } else {
                          if (input.substr(pos, 1) === "d") {
                            var result98 = "d";
                            pos += 1;
                          } else {
                            var result98 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"d\"");
                            }
                          }
                          if (result98 !== null) {
                            var result76 = result98;
                          } else {
                            var result76 = null;;
                          };
                        }
                        if (result76 !== null) {
                          if (input.substr(pos, 1) === "I") {
                            var result97 = "I";
                            pos += 1;
                          } else {
                            var result97 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"I\"");
                            }
                          }
                          if (result97 !== null) {
                            var result77 = result97;
                          } else {
                            if (input.substr(pos, 1) === "i") {
                              var result96 = "i";
                              pos += 1;
                            } else {
                              var result96 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"i\"");
                              }
                            }
                            if (result96 !== null) {
                              var result77 = result96;
                            } else {
                              var result77 = null;;
                            };
                          }
                          if (result77 !== null) {
                            if (input.substr(pos, 1) === "S") {
                              var result95 = "S";
                              pos += 1;
                            } else {
                              var result95 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"S\"");
                              }
                            }
                            if (result95 !== null) {
                              var result78 = result95;
                            } else {
                              if (input.substr(pos, 1) === "s") {
                                var result94 = "s";
                                pos += 1;
                              } else {
                                var result94 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\"s\"");
                                }
                              }
                              if (result94 !== null) {
                                var result78 = result94;
                              } else {
                                var result78 = null;;
                              };
                            }
                            if (result78 !== null) {
                              if (input.substr(pos, 1) === "T") {
                                var result93 = "T";
                                pos += 1;
                              } else {
                                var result93 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\"T\"");
                                }
                              }
                              if (result93 !== null) {
                                var result79 = result93;
                              } else {
                                if (input.substr(pos, 1) === "t") {
                                  var result92 = "t";
                                  pos += 1;
                                } else {
                                  var result92 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\"t\"");
                                  }
                                }
                                if (result92 !== null) {
                                  var result79 = result92;
                                } else {
                                  var result79 = null;;
                                };
                              }
                              if (result79 !== null) {
                                if (input.substr(pos, 1) === "I") {
                                  var result91 = "I";
                                  pos += 1;
                                } else {
                                  var result91 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\"I\"");
                                  }
                                }
                                if (result91 !== null) {
                                  var result80 = result91;
                                } else {
                                  if (input.substr(pos, 1) === "i") {
                                    var result90 = "i";
                                    pos += 1;
                                  } else {
                                    var result90 = null;
                                    if (reportMatchFailures) {
                                      matchFailed("\"i\"");
                                    }
                                  }
                                  if (result90 !== null) {
                                    var result80 = result90;
                                  } else {
                                    var result80 = null;;
                                  };
                                }
                                if (result80 !== null) {
                                  if (input.substr(pos, 1) === "N") {
                                    var result89 = "N";
                                    pos += 1;
                                  } else {
                                    var result89 = null;
                                    if (reportMatchFailures) {
                                      matchFailed("\"N\"");
                                    }
                                  }
                                  if (result89 !== null) {
                                    var result81 = result89;
                                  } else {
                                    if (input.substr(pos, 1) === "n") {
                                      var result88 = "n";
                                      pos += 1;
                                    } else {
                                      var result88 = null;
                                      if (reportMatchFailures) {
                                        matchFailed("\"n\"");
                                      }
                                    }
                                    if (result88 !== null) {
                                      var result81 = result88;
                                    } else {
                                      var result81 = null;;
                                    };
                                  }
                                  if (result81 !== null) {
                                    if (input.substr(pos, 1) === "C") {
                                      var result87 = "C";
                                      pos += 1;
                                    } else {
                                      var result87 = null;
                                      if (reportMatchFailures) {
                                        matchFailed("\"C\"");
                                      }
                                    }
                                    if (result87 !== null) {
                                      var result82 = result87;
                                    } else {
                                      if (input.substr(pos, 1) === "c") {
                                        var result86 = "c";
                                        pos += 1;
                                      } else {
                                        var result86 = null;
                                        if (reportMatchFailures) {
                                          matchFailed("\"c\"");
                                        }
                                      }
                                      if (result86 !== null) {
                                        var result82 = result86;
                                      } else {
                                        var result82 = null;;
                                      };
                                    }
                                    if (result82 !== null) {
                                      if (input.substr(pos, 1) === "T") {
                                        var result85 = "T";
                                        pos += 1;
                                      } else {
                                        var result85 = null;
                                        if (reportMatchFailures) {
                                          matchFailed("\"T\"");
                                        }
                                      }
                                      if (result85 !== null) {
                                        var result83 = result85;
                                      } else {
                                        if (input.substr(pos, 1) === "t") {
                                          var result84 = "t";
                                          pos += 1;
                                        } else {
                                          var result84 = null;
                                          if (reportMatchFailures) {
                                            matchFailed("\"t\"");
                                          }
                                        }
                                        if (result84 !== null) {
                                          var result83 = result84;
                                        } else {
                                          var result83 = null;;
                                        };
                                      }
                                      if (result83 !== null) {
                                        var result75 = [result76, result77, result78, result79, result80, result81, result82, result83];
                                      } else {
                                        var result75 = null;
                                        pos = savedPos6;
                                      }
                                    } else {
                                      var result75 = null;
                                      pos = savedPos6;
                                    }
                                  } else {
                                    var result75 = null;
                                    pos = savedPos6;
                                  }
                                } else {
                                  var result75 = null;
                                  pos = savedPos6;
                                }
                              } else {
                                var result75 = null;
                                pos = savedPos6;
                              }
                            } else {
                              var result75 = null;
                              pos = savedPos6;
                            }
                          } else {
                            var result75 = null;
                            pos = savedPos6;
                          }
                        } else {
                          var result75 = null;
                          pos = savedPos6;
                        }
                        if (result75 !== null) {
                          var result52 = result75;
                        } else {
                          var savedPos5 = pos;
                          if (input.substr(pos, 1) === "R") {
                            var result74 = "R";
                            pos += 1;
                          } else {
                            var result74 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"R\"");
                            }
                          }
                          if (result74 !== null) {
                            var result54 = result74;
                          } else {
                            if (input.substr(pos, 1) === "r") {
                              var result73 = "r";
                              pos += 1;
                            } else {
                              var result73 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"r\"");
                              }
                            }
                            if (result73 !== null) {
                              var result54 = result73;
                            } else {
                              var result54 = null;;
                            };
                          }
                          if (result54 !== null) {
                            if (input.substr(pos, 1) === "E") {
                              var result72 = "E";
                              pos += 1;
                            } else {
                              var result72 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"E\"");
                              }
                            }
                            if (result72 !== null) {
                              var result55 = result72;
                            } else {
                              if (input.substr(pos, 1) === "e") {
                                var result71 = "e";
                                pos += 1;
                              } else {
                                var result71 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\"e\"");
                                }
                              }
                              if (result71 !== null) {
                                var result55 = result71;
                              } else {
                                var result55 = null;;
                              };
                            }
                            if (result55 !== null) {
                              if (input.substr(pos, 1) === "D") {
                                var result70 = "D";
                                pos += 1;
                              } else {
                                var result70 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\"D\"");
                                }
                              }
                              if (result70 !== null) {
                                var result56 = result70;
                              } else {
                                if (input.substr(pos, 1) === "d") {
                                  var result69 = "d";
                                  pos += 1;
                                } else {
                                  var result69 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\"d\"");
                                  }
                                }
                                if (result69 !== null) {
                                  var result56 = result69;
                                } else {
                                  var result56 = null;;
                                };
                              }
                              if (result56 !== null) {
                                if (input.substr(pos, 1) === "U") {
                                  var result68 = "U";
                                  pos += 1;
                                } else {
                                  var result68 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\"U\"");
                                  }
                                }
                                if (result68 !== null) {
                                  var result57 = result68;
                                } else {
                                  if (input.substr(pos, 1) === "u") {
                                    var result67 = "u";
                                    pos += 1;
                                  } else {
                                    var result67 = null;
                                    if (reportMatchFailures) {
                                      matchFailed("\"u\"");
                                    }
                                  }
                                  if (result67 !== null) {
                                    var result57 = result67;
                                  } else {
                                    var result57 = null;;
                                  };
                                }
                                if (result57 !== null) {
                                  if (input.substr(pos, 1) === "C") {
                                    var result66 = "C";
                                    pos += 1;
                                  } else {
                                    var result66 = null;
                                    if (reportMatchFailures) {
                                      matchFailed("\"C\"");
                                    }
                                  }
                                  if (result66 !== null) {
                                    var result58 = result66;
                                  } else {
                                    if (input.substr(pos, 1) === "c") {
                                      var result65 = "c";
                                      pos += 1;
                                    } else {
                                      var result65 = null;
                                      if (reportMatchFailures) {
                                        matchFailed("\"c\"");
                                      }
                                    }
                                    if (result65 !== null) {
                                      var result58 = result65;
                                    } else {
                                      var result58 = null;;
                                    };
                                  }
                                  if (result58 !== null) {
                                    if (input.substr(pos, 1) === "E") {
                                      var result64 = "E";
                                      pos += 1;
                                    } else {
                                      var result64 = null;
                                      if (reportMatchFailures) {
                                        matchFailed("\"E\"");
                                      }
                                    }
                                    if (result64 !== null) {
                                      var result59 = result64;
                                    } else {
                                      if (input.substr(pos, 1) === "e") {
                                        var result63 = "e";
                                        pos += 1;
                                      } else {
                                        var result63 = null;
                                        if (reportMatchFailures) {
                                          matchFailed("\"e\"");
                                        }
                                      }
                                      if (result63 !== null) {
                                        var result59 = result63;
                                      } else {
                                        var result59 = null;;
                                      };
                                    }
                                    if (result59 !== null) {
                                      if (input.substr(pos, 1) === "D") {
                                        var result62 = "D";
                                        pos += 1;
                                      } else {
                                        var result62 = null;
                                        if (reportMatchFailures) {
                                          matchFailed("\"D\"");
                                        }
                                      }
                                      if (result62 !== null) {
                                        var result60 = result62;
                                      } else {
                                        if (input.substr(pos, 1) === "d") {
                                          var result61 = "d";
                                          pos += 1;
                                        } else {
                                          var result61 = null;
                                          if (reportMatchFailures) {
                                            matchFailed("\"d\"");
                                          }
                                        }
                                        if (result61 !== null) {
                                          var result60 = result61;
                                        } else {
                                          var result60 = null;;
                                        };
                                      }
                                      if (result60 !== null) {
                                        var result53 = [result54, result55, result56, result57, result58, result59, result60];
                                      } else {
                                        var result53 = null;
                                        pos = savedPos5;
                                      }
                                    } else {
                                      var result53 = null;
                                      pos = savedPos5;
                                    }
                                  } else {
                                    var result53 = null;
                                    pos = savedPos5;
                                  }
                                } else {
                                  var result53 = null;
                                  pos = savedPos5;
                                }
                              } else {
                                var result53 = null;
                                pos = savedPos5;
                              }
                            } else {
                              var result53 = null;
                              pos = savedPos5;
                            }
                          } else {
                            var result53 = null;
                            pos = savedPos5;
                          }
                          if (result53 !== null) {
                            var result52 = result53;
                          } else {
                            var result52 = null;;
                          };
                        }
                        var result11 = result52 !== null ? result52 : '';
                        if (result11 !== null) {
                          var result12 = [];
                          var result51 = parse_WS();
                          while (result51 !== null) {
                            result12.push(result51);
                            var result51 = parse_WS();
                          }
                          if (result12 !== null) {
                            var savedPos4 = pos;
                            var result46 = [];
                            var result50 = parse_WS();
                            while (result50 !== null) {
                              result46.push(result50);
                              var result50 = parse_WS();
                            }
                            if (result46 !== null) {
                              var result47 = parse_Var();
                              if (result47 !== null) {
                                var result48 = [];
                                var result49 = parse_WS();
                                while (result49 !== null) {
                                  result48.push(result49);
                                  var result49 = parse_WS();
                                }
                                if (result48 !== null) {
                                  var result45 = [result46, result47, result48];
                                } else {
                                  var result45 = null;
                                  pos = savedPos4;
                                }
                              } else {
                                var result45 = null;
                                pos = savedPos4;
                              }
                            } else {
                              var result45 = null;
                              pos = savedPos4;
                            }
                            if (result45 !== null) {
                              var result21 = result45;
                            } else {
                              var savedPos3 = pos;
                              var result23 = [];
                              var result44 = parse_WS();
                              while (result44 !== null) {
                                result23.push(result44);
                                var result44 = parse_WS();
                              }
                              if (result23 !== null) {
                                if (input.substr(pos, 1) === "(") {
                                  var result24 = "(";
                                  pos += 1;
                                } else {
                                  var result24 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\"(\"");
                                  }
                                }
                                if (result24 !== null) {
                                  var result25 = [];
                                  var result43 = parse_WS();
                                  while (result43 !== null) {
                                    result25.push(result43);
                                    var result43 = parse_WS();
                                  }
                                  if (result25 !== null) {
                                    var result26 = parse_ConditionalOrExpression();
                                    if (result26 !== null) {
                                      var result27 = [];
                                      var result42 = parse_WS();
                                      while (result42 !== null) {
                                        result27.push(result42);
                                        var result42 = parse_WS();
                                      }
                                      if (result27 !== null) {
                                        if (input.substr(pos, 1) === "A") {
                                          var result41 = "A";
                                          pos += 1;
                                        } else {
                                          var result41 = null;
                                          if (reportMatchFailures) {
                                            matchFailed("\"A\"");
                                          }
                                        }
                                        if (result41 !== null) {
                                          var result28 = result41;
                                        } else {
                                          if (input.substr(pos, 1) === "a") {
                                            var result40 = "a";
                                            pos += 1;
                                          } else {
                                            var result40 = null;
                                            if (reportMatchFailures) {
                                              matchFailed("\"a\"");
                                            }
                                          }
                                          if (result40 !== null) {
                                            var result28 = result40;
                                          } else {
                                            var result28 = null;;
                                          };
                                        }
                                        if (result28 !== null) {
                                          if (input.substr(pos, 1) === "S") {
                                            var result39 = "S";
                                            pos += 1;
                                          } else {
                                            var result39 = null;
                                            if (reportMatchFailures) {
                                              matchFailed("\"S\"");
                                            }
                                          }
                                          if (result39 !== null) {
                                            var result29 = result39;
                                          } else {
                                            if (input.substr(pos, 1) === "s") {
                                              var result38 = "s";
                                              pos += 1;
                                            } else {
                                              var result38 = null;
                                              if (reportMatchFailures) {
                                                matchFailed("\"s\"");
                                              }
                                            }
                                            if (result38 !== null) {
                                              var result29 = result38;
                                            } else {
                                              var result29 = null;;
                                            };
                                          }
                                          if (result29 !== null) {
                                            var result30 = [];
                                            var result37 = parse_WS();
                                            while (result37 !== null) {
                                              result30.push(result37);
                                              var result37 = parse_WS();
                                            }
                                            if (result30 !== null) {
                                              var result31 = parse_Var();
                                              if (result31 !== null) {
                                                var result32 = [];
                                                var result36 = parse_WS();
                                                while (result36 !== null) {
                                                  result32.push(result36);
                                                  var result36 = parse_WS();
                                                }
                                                if (result32 !== null) {
                                                  if (input.substr(pos, 1) === ")") {
                                                    var result33 = ")";
                                                    pos += 1;
                                                  } else {
                                                    var result33 = null;
                                                    if (reportMatchFailures) {
                                                      matchFailed("\")\"");
                                                    }
                                                  }
                                                  if (result33 !== null) {
                                                    var result34 = [];
                                                    var result35 = parse_WS();
                                                    while (result35 !== null) {
                                                      result34.push(result35);
                                                      var result35 = parse_WS();
                                                    }
                                                    if (result34 !== null) {
                                                      var result22 = [result23, result24, result25, result26, result27, result28, result29, result30, result31, result32, result33, result34];
                                                    } else {
                                                      var result22 = null;
                                                      pos = savedPos3;
                                                    }
                                                  } else {
                                                    var result22 = null;
                                                    pos = savedPos3;
                                                  }
                                                } else {
                                                  var result22 = null;
                                                  pos = savedPos3;
                                                }
                                              } else {
                                                var result22 = null;
                                                pos = savedPos3;
                                              }
                                            } else {
                                              var result22 = null;
                                              pos = savedPos3;
                                            }
                                          } else {
                                            var result22 = null;
                                            pos = savedPos3;
                                          }
                                        } else {
                                          var result22 = null;
                                          pos = savedPos3;
                                        }
                                      } else {
                                        var result22 = null;
                                        pos = savedPos3;
                                      }
                                    } else {
                                      var result22 = null;
                                      pos = savedPos3;
                                    }
                                  } else {
                                    var result22 = null;
                                    pos = savedPos3;
                                  }
                                } else {
                                  var result22 = null;
                                  pos = savedPos3;
                                }
                              } else {
                                var result22 = null;
                                pos = savedPos3;
                              }
                              if (result22 !== null) {
                                var result21 = result22;
                              } else {
                                var result21 = null;;
                              };
                            }
                            if (result21 !== null) {
                              var result20 = [];
                              while (result21 !== null) {
                                result20.push(result21);
                                var savedPos4 = pos;
                                var result46 = [];
                                var result50 = parse_WS();
                                while (result50 !== null) {
                                  result46.push(result50);
                                  var result50 = parse_WS();
                                }
                                if (result46 !== null) {
                                  var result47 = parse_Var();
                                  if (result47 !== null) {
                                    var result48 = [];
                                    var result49 = parse_WS();
                                    while (result49 !== null) {
                                      result48.push(result49);
                                      var result49 = parse_WS();
                                    }
                                    if (result48 !== null) {
                                      var result45 = [result46, result47, result48];
                                    } else {
                                      var result45 = null;
                                      pos = savedPos4;
                                    }
                                  } else {
                                    var result45 = null;
                                    pos = savedPos4;
                                  }
                                } else {
                                  var result45 = null;
                                  pos = savedPos4;
                                }
                                if (result45 !== null) {
                                  var result21 = result45;
                                } else {
                                  var savedPos3 = pos;
                                  var result23 = [];
                                  var result44 = parse_WS();
                                  while (result44 !== null) {
                                    result23.push(result44);
                                    var result44 = parse_WS();
                                  }
                                  if (result23 !== null) {
                                    if (input.substr(pos, 1) === "(") {
                                      var result24 = "(";
                                      pos += 1;
                                    } else {
                                      var result24 = null;
                                      if (reportMatchFailures) {
                                        matchFailed("\"(\"");
                                      }
                                    }
                                    if (result24 !== null) {
                                      var result25 = [];
                                      var result43 = parse_WS();
                                      while (result43 !== null) {
                                        result25.push(result43);
                                        var result43 = parse_WS();
                                      }
                                      if (result25 !== null) {
                                        var result26 = parse_ConditionalOrExpression();
                                        if (result26 !== null) {
                                          var result27 = [];
                                          var result42 = parse_WS();
                                          while (result42 !== null) {
                                            result27.push(result42);
                                            var result42 = parse_WS();
                                          }
                                          if (result27 !== null) {
                                            if (input.substr(pos, 1) === "A") {
                                              var result41 = "A";
                                              pos += 1;
                                            } else {
                                              var result41 = null;
                                              if (reportMatchFailures) {
                                                matchFailed("\"A\"");
                                              }
                                            }
                                            if (result41 !== null) {
                                              var result28 = result41;
                                            } else {
                                              if (input.substr(pos, 1) === "a") {
                                                var result40 = "a";
                                                pos += 1;
                                              } else {
                                                var result40 = null;
                                                if (reportMatchFailures) {
                                                  matchFailed("\"a\"");
                                                }
                                              }
                                              if (result40 !== null) {
                                                var result28 = result40;
                                              } else {
                                                var result28 = null;;
                                              };
                                            }
                                            if (result28 !== null) {
                                              if (input.substr(pos, 1) === "S") {
                                                var result39 = "S";
                                                pos += 1;
                                              } else {
                                                var result39 = null;
                                                if (reportMatchFailures) {
                                                  matchFailed("\"S\"");
                                                }
                                              }
                                              if (result39 !== null) {
                                                var result29 = result39;
                                              } else {
                                                if (input.substr(pos, 1) === "s") {
                                                  var result38 = "s";
                                                  pos += 1;
                                                } else {
                                                  var result38 = null;
                                                  if (reportMatchFailures) {
                                                    matchFailed("\"s\"");
                                                  }
                                                }
                                                if (result38 !== null) {
                                                  var result29 = result38;
                                                } else {
                                                  var result29 = null;;
                                                };
                                              }
                                              if (result29 !== null) {
                                                var result30 = [];
                                                var result37 = parse_WS();
                                                while (result37 !== null) {
                                                  result30.push(result37);
                                                  var result37 = parse_WS();
                                                }
                                                if (result30 !== null) {
                                                  var result31 = parse_Var();
                                                  if (result31 !== null) {
                                                    var result32 = [];
                                                    var result36 = parse_WS();
                                                    while (result36 !== null) {
                                                      result32.push(result36);
                                                      var result36 = parse_WS();
                                                    }
                                                    if (result32 !== null) {
                                                      if (input.substr(pos, 1) === ")") {
                                                        var result33 = ")";
                                                        pos += 1;
                                                      } else {
                                                        var result33 = null;
                                                        if (reportMatchFailures) {
                                                          matchFailed("\")\"");
                                                        }
                                                      }
                                                      if (result33 !== null) {
                                                        var result34 = [];
                                                        var result35 = parse_WS();
                                                        while (result35 !== null) {
                                                          result34.push(result35);
                                                          var result35 = parse_WS();
                                                        }
                                                        if (result34 !== null) {
                                                          var result22 = [result23, result24, result25, result26, result27, result28, result29, result30, result31, result32, result33, result34];
                                                        } else {
                                                          var result22 = null;
                                                          pos = savedPos3;
                                                        }
                                                      } else {
                                                        var result22 = null;
                                                        pos = savedPos3;
                                                      }
                                                    } else {
                                                      var result22 = null;
                                                      pos = savedPos3;
                                                    }
                                                  } else {
                                                    var result22 = null;
                                                    pos = savedPos3;
                                                  }
                                                } else {
                                                  var result22 = null;
                                                  pos = savedPos3;
                                                }
                                              } else {
                                                var result22 = null;
                                                pos = savedPos3;
                                              }
                                            } else {
                                              var result22 = null;
                                              pos = savedPos3;
                                            }
                                          } else {
                                            var result22 = null;
                                            pos = savedPos3;
                                          }
                                        } else {
                                          var result22 = null;
                                          pos = savedPos3;
                                        }
                                      } else {
                                        var result22 = null;
                                        pos = savedPos3;
                                      }
                                    } else {
                                      var result22 = null;
                                      pos = savedPos3;
                                    }
                                  } else {
                                    var result22 = null;
                                    pos = savedPos3;
                                  }
                                  if (result22 !== null) {
                                    var result21 = result22;
                                  } else {
                                    var result21 = null;;
                                  };
                                }
                              }
                            } else {
                              var result20 = null;
                            }
                            if (result20 !== null) {
                              var result13 = result20;
                            } else {
                              var savedPos2 = pos;
                              var result15 = [];
                              var result19 = parse_WS();
                              while (result19 !== null) {
                                result15.push(result19);
                                var result19 = parse_WS();
                              }
                              if (result15 !== null) {
                                if (input.substr(pos, 1) === "*") {
                                  var result16 = "*";
                                  pos += 1;
                                } else {
                                  var result16 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\"*\"");
                                  }
                                }
                                if (result16 !== null) {
                                  var result17 = [];
                                  var result18 = parse_WS();
                                  while (result18 !== null) {
                                    result17.push(result18);
                                    var result18 = parse_WS();
                                  }
                                  if (result17 !== null) {
                                    var result14 = [result15, result16, result17];
                                  } else {
                                    var result14 = null;
                                    pos = savedPos2;
                                  }
                                } else {
                                  var result14 = null;
                                  pos = savedPos2;
                                }
                              } else {
                                var result14 = null;
                                pos = savedPos2;
                              }
                              if (result14 !== null) {
                                var result13 = result14;
                              } else {
                                var result13 = null;;
                              };
                            }
                            if (result13 !== null) {
                              var result1 = [result3, result4, result5, result6, result7, result8, result9, result10, result11, result12, result13];
                            } else {
                              var result1 = null;
                              pos = savedPos1;
                            }
                          } else {
                            var result1 = null;
                            pos = savedPos1;
                          }
                        } else {
                          var result1 = null;
                          pos = savedPos1;
                        }
                      } else {
                        var result1 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(mod, proj) {
               var vars = [];
                if(proj.length === 3 && proj[1]==="*") {
                    return {vars: [{token: 'variable', kind:'*'}], modifier:arrayToString(mod)};
                }
          
                for(var i=0; i< proj.length; i++) {
                    var aVar = proj[i];
          
                    if(aVar.length === 3) {
                        vars.push({token: 'variable', kind:'var', value:aVar[1]});
                    } else {
                        vars.push({token: 'variable', kind:'aliased', expression: aVar[3], alias:aVar[8]})
                    }
                }
          
                return {vars: vars, modifier:arrayToString(mod)};
          })(result1[8], result1[10])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[8] SelectClause");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_ConstructQuery() {
        var cacheKey = 'ConstructQuery@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = [];
        var result44 = parse_WS();
        while (result44 !== null) {
          result3.push(result44);
          var result44 = parse_WS();
        }
        if (result3 !== null) {
          if (input.substr(pos, 1) === "C") {
            var result43 = "C";
            pos += 1;
          } else {
            var result43 = null;
            if (reportMatchFailures) {
              matchFailed("\"C\"");
            }
          }
          if (result43 !== null) {
            var result4 = result43;
          } else {
            if (input.substr(pos, 1) === "c") {
              var result42 = "c";
              pos += 1;
            } else {
              var result42 = null;
              if (reportMatchFailures) {
                matchFailed("\"c\"");
              }
            }
            if (result42 !== null) {
              var result4 = result42;
            } else {
              var result4 = null;;
            };
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === "O") {
              var result41 = "O";
              pos += 1;
            } else {
              var result41 = null;
              if (reportMatchFailures) {
                matchFailed("\"O\"");
              }
            }
            if (result41 !== null) {
              var result5 = result41;
            } else {
              if (input.substr(pos, 1) === "o") {
                var result40 = "o";
                pos += 1;
              } else {
                var result40 = null;
                if (reportMatchFailures) {
                  matchFailed("\"o\"");
                }
              }
              if (result40 !== null) {
                var result5 = result40;
              } else {
                var result5 = null;;
              };
            }
            if (result5 !== null) {
              if (input.substr(pos, 1) === "N") {
                var result39 = "N";
                pos += 1;
              } else {
                var result39 = null;
                if (reportMatchFailures) {
                  matchFailed("\"N\"");
                }
              }
              if (result39 !== null) {
                var result6 = result39;
              } else {
                if (input.substr(pos, 1) === "n") {
                  var result38 = "n";
                  pos += 1;
                } else {
                  var result38 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"n\"");
                  }
                }
                if (result38 !== null) {
                  var result6 = result38;
                } else {
                  var result6 = null;;
                };
              }
              if (result6 !== null) {
                if (input.substr(pos, 1) === "S") {
                  var result37 = "S";
                  pos += 1;
                } else {
                  var result37 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"S\"");
                  }
                }
                if (result37 !== null) {
                  var result7 = result37;
                } else {
                  if (input.substr(pos, 1) === "s") {
                    var result36 = "s";
                    pos += 1;
                  } else {
                    var result36 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"s\"");
                    }
                  }
                  if (result36 !== null) {
                    var result7 = result36;
                  } else {
                    var result7 = null;;
                  };
                }
                if (result7 !== null) {
                  if (input.substr(pos, 1) === "T") {
                    var result35 = "T";
                    pos += 1;
                  } else {
                    var result35 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"T\"");
                    }
                  }
                  if (result35 !== null) {
                    var result8 = result35;
                  } else {
                    if (input.substr(pos, 1) === "t") {
                      var result34 = "t";
                      pos += 1;
                    } else {
                      var result34 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"t\"");
                      }
                    }
                    if (result34 !== null) {
                      var result8 = result34;
                    } else {
                      var result8 = null;;
                    };
                  }
                  if (result8 !== null) {
                    if (input.substr(pos, 1) === "R") {
                      var result33 = "R";
                      pos += 1;
                    } else {
                      var result33 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"R\"");
                      }
                    }
                    if (result33 !== null) {
                      var result9 = result33;
                    } else {
                      if (input.substr(pos, 1) === "r") {
                        var result32 = "r";
                        pos += 1;
                      } else {
                        var result32 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"r\"");
                        }
                      }
                      if (result32 !== null) {
                        var result9 = result32;
                      } else {
                        var result9 = null;;
                      };
                    }
                    if (result9 !== null) {
                      if (input.substr(pos, 1) === "U") {
                        var result31 = "U";
                        pos += 1;
                      } else {
                        var result31 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"U\"");
                        }
                      }
                      if (result31 !== null) {
                        var result10 = result31;
                      } else {
                        if (input.substr(pos, 1) === "u") {
                          var result30 = "u";
                          pos += 1;
                        } else {
                          var result30 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"u\"");
                          }
                        }
                        if (result30 !== null) {
                          var result10 = result30;
                        } else {
                          var result10 = null;;
                        };
                      }
                      if (result10 !== null) {
                        if (input.substr(pos, 1) === "C") {
                          var result29 = "C";
                          pos += 1;
                        } else {
                          var result29 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"C\"");
                          }
                        }
                        if (result29 !== null) {
                          var result11 = result29;
                        } else {
                          if (input.substr(pos, 1) === "c") {
                            var result28 = "c";
                            pos += 1;
                          } else {
                            var result28 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"c\"");
                            }
                          }
                          if (result28 !== null) {
                            var result11 = result28;
                          } else {
                            var result11 = null;;
                          };
                        }
                        if (result11 !== null) {
                          if (input.substr(pos, 1) === "T") {
                            var result27 = "T";
                            pos += 1;
                          } else {
                            var result27 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"T\"");
                            }
                          }
                          if (result27 !== null) {
                            var result12 = result27;
                          } else {
                            if (input.substr(pos, 1) === "t") {
                              var result26 = "t";
                              pos += 1;
                            } else {
                              var result26 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"t\"");
                              }
                            }
                            if (result26 !== null) {
                              var result12 = result26;
                            } else {
                              var result12 = null;;
                            };
                          }
                          if (result12 !== null) {
                            var result13 = [];
                            var result25 = parse_WS();
                            while (result25 !== null) {
                              result13.push(result25);
                              var result25 = parse_WS();
                            }
                            if (result13 !== null) {
                              var result14 = parse_ConstructTemplate();
                              if (result14 !== null) {
                                var result15 = [];
                                var result24 = parse_WS();
                                while (result24 !== null) {
                                  result15.push(result24);
                                  var result24 = parse_WS();
                                }
                                if (result15 !== null) {
                                  var result16 = [];
                                  var result23 = parse_DatasetClause();
                                  while (result23 !== null) {
                                    result16.push(result23);
                                    var result23 = parse_DatasetClause();
                                  }
                                  if (result16 !== null) {
                                    var result17 = [];
                                    var result22 = parse_WS();
                                    while (result22 !== null) {
                                      result17.push(result22);
                                      var result22 = parse_WS();
                                    }
                                    if (result17 !== null) {
                                      var result18 = parse_WhereClause();
                                      if (result18 !== null) {
                                        var result19 = [];
                                        var result21 = parse_WS();
                                        while (result21 !== null) {
                                          result19.push(result21);
                                          var result21 = parse_WS();
                                        }
                                        if (result19 !== null) {
                                          var result20 = parse_SolutionModifier();
                                          if (result20 !== null) {
                                            var result1 = [result3, result4, result5, result6, result7, result8, result9, result10, result11, result12, result13, result14, result15, result16, result17, result18, result19, result20];
                                          } else {
                                            var result1 = null;
                                            pos = savedPos1;
                                          }
                                        } else {
                                          var result1 = null;
                                          pos = savedPos1;
                                        }
                                      } else {
                                        var result1 = null;
                                        pos = savedPos1;
                                      }
                                    } else {
                                      var result1 = null;
                                      pos = savedPos1;
                                    }
                                  } else {
                                    var result1 = null;
                                    pos = savedPos1;
                                  }
                                } else {
                                  var result1 = null;
                                  pos = savedPos1;
                                }
                              } else {
                                var result1 = null;
                                pos = savedPos1;
                              }
                            } else {
                              var result1 = null;
                              pos = savedPos1;
                            }
                          } else {
                            var result1 = null;
                            pos = savedPos1;
                          }
                        } else {
                          var result1 = null;
                          pos = savedPos1;
                        }
                      } else {
                        var result1 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(t, gs, w, sm) {
                var dataset = {named:[], default:[]};
                for(var i=0; i<gs.length; i++) {
                    var g = gs[i];
                    if(g.kind === 'default') {
                        dataset['default'].push(g.graph);
                    } else {
                        dataset['named'].push(g.graph)
                    }
                }
          
          
                if(dataset['named'].length === 0 && dataset['default'].length === 0) {
                    dataset['default'].push({token:'uri', 
                                             prefix:null, 
                                             suffix:null, 
                                             value:'https://github.com/antoniogarrote/rdfstore-js#default_graph'});
                }
          
                var query = {};
                query.kind = 'construct';
                query.token = 'executableunit'
                query.dataset = dataset;
                query.template = t;
                query.pattern = w
                
                if(sm!=null && sm.limit!=null) {
                    query.limit = sm.limit;
                }
                if(sm!=null && sm.offset!=null) {
                    query.offset = sm.offset;
                }
                if(sm!=null && (sm.order!=null && sm.order!="")) {
                    query.order = sm.order;
                }
                return query
          
          })(result1[11], result1[13], result1[15], result1[17])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[9] ConstructQuery");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_DescribeQuery() {
        var cacheKey = 'DescribeQuery@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        if (input.substr(pos, 8) === "DESCRIBE") {
          var result1 = "DESCRIBE";
          pos += 8;
        } else {
          var result1 = null;
          if (reportMatchFailures) {
            matchFailed("\"DESCRIBE\"");
          }
        }
        if (result1 !== null) {
          var result10 = parse_VarOrIRIref();
          if (result10 !== null) {
            var result9 = [];
            while (result10 !== null) {
              result9.push(result10);
              var result10 = parse_VarOrIRIref();
            }
          } else {
            var result9 = null;
          }
          if (result9 !== null) {
            var result2 = result9;
          } else {
            if (input.substr(pos, 1) === "*") {
              var result8 = "*";
              pos += 1;
            } else {
              var result8 = null;
              if (reportMatchFailures) {
                matchFailed("\"*\"");
              }
            }
            if (result8 !== null) {
              var result2 = result8;
            } else {
              var result2 = null;;
            };
          }
          if (result2 !== null) {
            var result3 = [];
            var result7 = parse_DatasetClause();
            while (result7 !== null) {
              result3.push(result7);
              var result7 = parse_DatasetClause();
            }
            if (result3 !== null) {
              var result6 = parse_WhereClause();
              var result4 = result6 !== null ? result6 : '';
              if (result4 !== null) {
                var result5 = parse_SolutionModifier();
                if (result5 !== null) {
                  var result0 = [result1, result2, result3, result4, result5];
                } else {
                  var result0 = null;
                  pos = savedPos0;
                }
              } else {
                var result0 = null;
                pos = savedPos0;
              }
            } else {
              var result0 = null;
              pos = savedPos0;
            }
          } else {
            var result0 = null;
            pos = savedPos0;
          }
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[10] DescribeQuery");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_AskQuery() {
        var cacheKey = 'AskQuery@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = [];
        var result20 = parse_WS();
        while (result20 !== null) {
          result3.push(result20);
          var result20 = parse_WS();
        }
        if (result3 !== null) {
          if (input.substr(pos, 1) === "A") {
            var result19 = "A";
            pos += 1;
          } else {
            var result19 = null;
            if (reportMatchFailures) {
              matchFailed("\"A\"");
            }
          }
          if (result19 !== null) {
            var result4 = result19;
          } else {
            if (input.substr(pos, 1) === "a") {
              var result18 = "a";
              pos += 1;
            } else {
              var result18 = null;
              if (reportMatchFailures) {
                matchFailed("\"a\"");
              }
            }
            if (result18 !== null) {
              var result4 = result18;
            } else {
              var result4 = null;;
            };
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === "S") {
              var result17 = "S";
              pos += 1;
            } else {
              var result17 = null;
              if (reportMatchFailures) {
                matchFailed("\"S\"");
              }
            }
            if (result17 !== null) {
              var result5 = result17;
            } else {
              if (input.substr(pos, 1) === "s") {
                var result16 = "s";
                pos += 1;
              } else {
                var result16 = null;
                if (reportMatchFailures) {
                  matchFailed("\"s\"");
                }
              }
              if (result16 !== null) {
                var result5 = result16;
              } else {
                var result5 = null;;
              };
            }
            if (result5 !== null) {
              if (input.substr(pos, 1) === "K") {
                var result15 = "K";
                pos += 1;
              } else {
                var result15 = null;
                if (reportMatchFailures) {
                  matchFailed("\"K\"");
                }
              }
              if (result15 !== null) {
                var result6 = result15;
              } else {
                if (input.substr(pos, 1) === "k") {
                  var result14 = "k";
                  pos += 1;
                } else {
                  var result14 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"k\"");
                  }
                }
                if (result14 !== null) {
                  var result6 = result14;
                } else {
                  var result6 = null;;
                };
              }
              if (result6 !== null) {
                var result7 = [];
                var result13 = parse_WS();
                while (result13 !== null) {
                  result7.push(result13);
                  var result13 = parse_WS();
                }
                if (result7 !== null) {
                  var result8 = [];
                  var result12 = parse_DatasetClause();
                  while (result12 !== null) {
                    result8.push(result12);
                    var result12 = parse_DatasetClause();
                  }
                  if (result8 !== null) {
                    var result9 = [];
                    var result11 = parse_WS();
                    while (result11 !== null) {
                      result9.push(result11);
                      var result11 = parse_WS();
                    }
                    if (result9 !== null) {
                      var result10 = parse_WhereClause();
                      if (result10 !== null) {
                        var result1 = [result3, result4, result5, result6, result7, result8, result9, result10];
                      } else {
                        var result1 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(gs, w) {
                var dataset = {'named':[], 'default':[]};
                for(var i=0; i<gs.length; i++) {
                    var g = gs[i];
                    if(g.kind === 'default') {
                        dataset['default'].push(g.graph);
                    } else {
                        dataset['named'].push(g.graph)
                    }
                }
          
          
                if(dataset['named'].length === 0 && dataset['default'].length === 0) {
                    dataset['default'].push({token:'uri', 
                                             prefix:null, 
                                             suffix:null, 
                                             value:'https://github.com/antoniogarrote/rdfstore-js#default_graph'});
                }
          
                var query = {};
                query.kind = 'ask';
                query.token = 'executableunit'
                query.dataset = dataset;
                query.pattern = w
          
                return query
          })(result1[5], result1[7])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[11] AskQuery");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_DatasetClause() {
        var cacheKey = 'DatasetClause@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "F") {
          var result21 = "F";
          pos += 1;
        } else {
          var result21 = null;
          if (reportMatchFailures) {
            matchFailed("\"F\"");
          }
        }
        if (result21 !== null) {
          var result3 = result21;
        } else {
          if (input.substr(pos, 1) === "f") {
            var result20 = "f";
            pos += 1;
          } else {
            var result20 = null;
            if (reportMatchFailures) {
              matchFailed("\"f\"");
            }
          }
          if (result20 !== null) {
            var result3 = result20;
          } else {
            var result3 = null;;
          };
        }
        if (result3 !== null) {
          if (input.substr(pos, 1) === "R") {
            var result19 = "R";
            pos += 1;
          } else {
            var result19 = null;
            if (reportMatchFailures) {
              matchFailed("\"R\"");
            }
          }
          if (result19 !== null) {
            var result4 = result19;
          } else {
            if (input.substr(pos, 1) === "r") {
              var result18 = "r";
              pos += 1;
            } else {
              var result18 = null;
              if (reportMatchFailures) {
                matchFailed("\"r\"");
              }
            }
            if (result18 !== null) {
              var result4 = result18;
            } else {
              var result4 = null;;
            };
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === "O") {
              var result17 = "O";
              pos += 1;
            } else {
              var result17 = null;
              if (reportMatchFailures) {
                matchFailed("\"O\"");
              }
            }
            if (result17 !== null) {
              var result5 = result17;
            } else {
              if (input.substr(pos, 1) === "o") {
                var result16 = "o";
                pos += 1;
              } else {
                var result16 = null;
                if (reportMatchFailures) {
                  matchFailed("\"o\"");
                }
              }
              if (result16 !== null) {
                var result5 = result16;
              } else {
                var result5 = null;;
              };
            }
            if (result5 !== null) {
              if (input.substr(pos, 1) === "M") {
                var result15 = "M";
                pos += 1;
              } else {
                var result15 = null;
                if (reportMatchFailures) {
                  matchFailed("\"M\"");
                }
              }
              if (result15 !== null) {
                var result6 = result15;
              } else {
                if (input.substr(pos, 1) === "m") {
                  var result14 = "m";
                  pos += 1;
                } else {
                  var result14 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"m\"");
                  }
                }
                if (result14 !== null) {
                  var result6 = result14;
                } else {
                  var result6 = null;;
                };
              }
              if (result6 !== null) {
                var result7 = [];
                var result13 = parse_WS();
                while (result13 !== null) {
                  result7.push(result13);
                  var result13 = parse_WS();
                }
                if (result7 !== null) {
                  var result12 = parse_DefaultGraphClause();
                  if (result12 !== null) {
                    var result8 = result12;
                  } else {
                    var result11 = parse_NamedGraphClause();
                    if (result11 !== null) {
                      var result8 = result11;
                    } else {
                      var result8 = null;;
                    };
                  }
                  if (result8 !== null) {
                    var result9 = [];
                    var result10 = parse_WS();
                    while (result10 !== null) {
                      result9.push(result10);
                      var result10 = parse_WS();
                    }
                    if (result9 !== null) {
                      var result1 = [result3, result4, result5, result6, result7, result8, result9];
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(gs) {
                return gs;
          })(result1[5])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[12] DatasetClause");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_DefaultGraphClause() {
        var cacheKey = 'DefaultGraphClause@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = [];
        var result5 = parse_WS();
        while (result5 !== null) {
          result3.push(result5);
          var result5 = parse_WS();
        }
        if (result3 !== null) {
          var result4 = parse_IRIref();
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(s) {
              return {graph:s , kind:'default', token:'graphClause'}
          })(result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[13] DefaultGraphClause");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_NamedGraphClause() {
        var cacheKey = 'NamedGraphClause@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "N") {
          var result20 = "N";
          pos += 1;
        } else {
          var result20 = null;
          if (reportMatchFailures) {
            matchFailed("\"N\"");
          }
        }
        if (result20 !== null) {
          var result3 = result20;
        } else {
          if (input.substr(pos, 1) === "n") {
            var result19 = "n";
            pos += 1;
          } else {
            var result19 = null;
            if (reportMatchFailures) {
              matchFailed("\"n\"");
            }
          }
          if (result19 !== null) {
            var result3 = result19;
          } else {
            var result3 = null;;
          };
        }
        if (result3 !== null) {
          if (input.substr(pos, 1) === "A") {
            var result18 = "A";
            pos += 1;
          } else {
            var result18 = null;
            if (reportMatchFailures) {
              matchFailed("\"A\"");
            }
          }
          if (result18 !== null) {
            var result4 = result18;
          } else {
            if (input.substr(pos, 1) === "a") {
              var result17 = "a";
              pos += 1;
            } else {
              var result17 = null;
              if (reportMatchFailures) {
                matchFailed("\"a\"");
              }
            }
            if (result17 !== null) {
              var result4 = result17;
            } else {
              var result4 = null;;
            };
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === "M") {
              var result16 = "M";
              pos += 1;
            } else {
              var result16 = null;
              if (reportMatchFailures) {
                matchFailed("\"M\"");
              }
            }
            if (result16 !== null) {
              var result5 = result16;
            } else {
              if (input.substr(pos, 1) === "m") {
                var result15 = "m";
                pos += 1;
              } else {
                var result15 = null;
                if (reportMatchFailures) {
                  matchFailed("\"m\"");
                }
              }
              if (result15 !== null) {
                var result5 = result15;
              } else {
                var result5 = null;;
              };
            }
            if (result5 !== null) {
              if (input.substr(pos, 1) === "E") {
                var result14 = "E";
                pos += 1;
              } else {
                var result14 = null;
                if (reportMatchFailures) {
                  matchFailed("\"E\"");
                }
              }
              if (result14 !== null) {
                var result6 = result14;
              } else {
                if (input.substr(pos, 1) === "e") {
                  var result13 = "e";
                  pos += 1;
                } else {
                  var result13 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"e\"");
                  }
                }
                if (result13 !== null) {
                  var result6 = result13;
                } else {
                  var result6 = null;;
                };
              }
              if (result6 !== null) {
                if (input.substr(pos, 1) === "D") {
                  var result12 = "D";
                  pos += 1;
                } else {
                  var result12 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"D\"");
                  }
                }
                if (result12 !== null) {
                  var result7 = result12;
                } else {
                  if (input.substr(pos, 1) === "d") {
                    var result11 = "d";
                    pos += 1;
                  } else {
                    var result11 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"d\"");
                    }
                  }
                  if (result11 !== null) {
                    var result7 = result11;
                  } else {
                    var result7 = null;;
                  };
                }
                if (result7 !== null) {
                  var result8 = [];
                  var result10 = parse_WS();
                  while (result10 !== null) {
                    result8.push(result10);
                    var result10 = parse_WS();
                  }
                  if (result8 !== null) {
                    var result9 = parse_IRIref();
                    if (result9 !== null) {
                      var result1 = [result3, result4, result5, result6, result7, result8, result9];
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(s) {      
                return {graph:s, kind:'named', token:'graphCluase'};
          })(result1[6])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[14] NamedGraphClause");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_WhereClause() {
        var cacheKey = 'WhereClause@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var savedPos2 = pos;
        if (input.substr(pos, 1) === "W") {
          var result24 = "W";
          pos += 1;
        } else {
          var result24 = null;
          if (reportMatchFailures) {
            matchFailed("\"W\"");
          }
        }
        if (result24 !== null) {
          var result10 = result24;
        } else {
          if (input.substr(pos, 1) === "w") {
            var result23 = "w";
            pos += 1;
          } else {
            var result23 = null;
            if (reportMatchFailures) {
              matchFailed("\"w\"");
            }
          }
          if (result23 !== null) {
            var result10 = result23;
          } else {
            var result10 = null;;
          };
        }
        if (result10 !== null) {
          if (input.substr(pos, 1) === "H") {
            var result22 = "H";
            pos += 1;
          } else {
            var result22 = null;
            if (reportMatchFailures) {
              matchFailed("\"H\"");
            }
          }
          if (result22 !== null) {
            var result11 = result22;
          } else {
            if (input.substr(pos, 1) === "h") {
              var result21 = "h";
              pos += 1;
            } else {
              var result21 = null;
              if (reportMatchFailures) {
                matchFailed("\"h\"");
              }
            }
            if (result21 !== null) {
              var result11 = result21;
            } else {
              var result11 = null;;
            };
          }
          if (result11 !== null) {
            if (input.substr(pos, 1) === "E") {
              var result20 = "E";
              pos += 1;
            } else {
              var result20 = null;
              if (reportMatchFailures) {
                matchFailed("\"E\"");
              }
            }
            if (result20 !== null) {
              var result12 = result20;
            } else {
              if (input.substr(pos, 1) === "e") {
                var result19 = "e";
                pos += 1;
              } else {
                var result19 = null;
                if (reportMatchFailures) {
                  matchFailed("\"e\"");
                }
              }
              if (result19 !== null) {
                var result12 = result19;
              } else {
                var result12 = null;;
              };
            }
            if (result12 !== null) {
              if (input.substr(pos, 1) === "R") {
                var result18 = "R";
                pos += 1;
              } else {
                var result18 = null;
                if (reportMatchFailures) {
                  matchFailed("\"R\"");
                }
              }
              if (result18 !== null) {
                var result13 = result18;
              } else {
                if (input.substr(pos, 1) === "r") {
                  var result17 = "r";
                  pos += 1;
                } else {
                  var result17 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"r\"");
                  }
                }
                if (result17 !== null) {
                  var result13 = result17;
                } else {
                  var result13 = null;;
                };
              }
              if (result13 !== null) {
                if (input.substr(pos, 1) === "E") {
                  var result16 = "E";
                  pos += 1;
                } else {
                  var result16 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"E\"");
                  }
                }
                if (result16 !== null) {
                  var result14 = result16;
                } else {
                  if (input.substr(pos, 1) === "e") {
                    var result15 = "e";
                    pos += 1;
                  } else {
                    var result15 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"e\"");
                    }
                  }
                  if (result15 !== null) {
                    var result14 = result15;
                  } else {
                    var result14 = null;;
                  };
                }
                if (result14 !== null) {
                  var result9 = [result10, result11, result12, result13, result14];
                } else {
                  var result9 = null;
                  pos = savedPos2;
                }
              } else {
                var result9 = null;
                pos = savedPos2;
              }
            } else {
              var result9 = null;
              pos = savedPos2;
            }
          } else {
            var result9 = null;
            pos = savedPos2;
          }
        } else {
          var result9 = null;
          pos = savedPos2;
        }
        var result3 = result9 !== null ? result9 : '';
        if (result3 !== null) {
          var result4 = [];
          var result8 = parse_WS();
          while (result8 !== null) {
            result4.push(result8);
            var result8 = parse_WS();
          }
          if (result4 !== null) {
            var result5 = parse_GroupGraphPattern();
            if (result5 !== null) {
              var result6 = [];
              var result7 = parse_WS();
              while (result7 !== null) {
                result6.push(result7);
                var result7 = parse_WS();
              }
              if (result6 !== null) {
                var result1 = [result3, result4, result5, result6];
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(g) {
                return g;
          })(result1[2])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[16] WhereClause");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_SolutionModifier() {
        var cacheKey = 'SolutionModifier@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result10 = parse_GroupClause();
        var result3 = result10 !== null ? result10 : '';
        if (result3 !== null) {
          var result9 = parse_HavingClause();
          var result4 = result9 !== null ? result9 : '';
          if (result4 !== null) {
            var result8 = parse_OrderClause();
            var result5 = result8 !== null ? result8 : '';
            if (result5 !== null) {
              var result7 = parse_LimitOffsetClauses();
              var result6 = result7 !== null ? result7 : '';
              if (result6 !== null) {
                var result1 = [result3, result4, result5, result6];
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(gc, oc, lo) {
                var acum = {};
                if(lo != null) {
                    if(lo.limit != null) {
                        acum.limit = lo.limit;
                    } 
                    if(lo.offset != null) {
                        acum.offset = lo.offset;
                    }
                }
          
                if(gc != null) {
                    acum.group = gc;
                }
          
                acum.order = oc;
          
                return acum
          })(result1[0], result1[2], result1[3])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[17] SolutionModifier");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_GroupClause() {
        var cacheKey = 'GroupClause@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "G") {
          var result29 = "G";
          pos += 1;
        } else {
          var result29 = null;
          if (reportMatchFailures) {
            matchFailed("\"G\"");
          }
        }
        if (result29 !== null) {
          var result3 = result29;
        } else {
          if (input.substr(pos, 1) === "g") {
            var result28 = "g";
            pos += 1;
          } else {
            var result28 = null;
            if (reportMatchFailures) {
              matchFailed("\"g\"");
            }
          }
          if (result28 !== null) {
            var result3 = result28;
          } else {
            var result3 = null;;
          };
        }
        if (result3 !== null) {
          if (input.substr(pos, 1) === "R") {
            var result27 = "R";
            pos += 1;
          } else {
            var result27 = null;
            if (reportMatchFailures) {
              matchFailed("\"R\"");
            }
          }
          if (result27 !== null) {
            var result4 = result27;
          } else {
            if (input.substr(pos, 1) === "r") {
              var result26 = "r";
              pos += 1;
            } else {
              var result26 = null;
              if (reportMatchFailures) {
                matchFailed("\"r\"");
              }
            }
            if (result26 !== null) {
              var result4 = result26;
            } else {
              var result4 = null;;
            };
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === "O") {
              var result25 = "O";
              pos += 1;
            } else {
              var result25 = null;
              if (reportMatchFailures) {
                matchFailed("\"O\"");
              }
            }
            if (result25 !== null) {
              var result5 = result25;
            } else {
              if (input.substr(pos, 1) === "o") {
                var result24 = "o";
                pos += 1;
              } else {
                var result24 = null;
                if (reportMatchFailures) {
                  matchFailed("\"o\"");
                }
              }
              if (result24 !== null) {
                var result5 = result24;
              } else {
                var result5 = null;;
              };
            }
            if (result5 !== null) {
              if (input.substr(pos, 1) === "U") {
                var result23 = "U";
                pos += 1;
              } else {
                var result23 = null;
                if (reportMatchFailures) {
                  matchFailed("\"U\"");
                }
              }
              if (result23 !== null) {
                var result6 = result23;
              } else {
                if (input.substr(pos, 1) === "u") {
                  var result22 = "u";
                  pos += 1;
                } else {
                  var result22 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"u\"");
                  }
                }
                if (result22 !== null) {
                  var result6 = result22;
                } else {
                  var result6 = null;;
                };
              }
              if (result6 !== null) {
                if (input.substr(pos, 1) === "P") {
                  var result21 = "P";
                  pos += 1;
                } else {
                  var result21 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"P\"");
                  }
                }
                if (result21 !== null) {
                  var result7 = result21;
                } else {
                  if (input.substr(pos, 1) === "p") {
                    var result20 = "p";
                    pos += 1;
                  } else {
                    var result20 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"p\"");
                    }
                  }
                  if (result20 !== null) {
                    var result7 = result20;
                  } else {
                    var result7 = null;;
                  };
                }
                if (result7 !== null) {
                  var result8 = [];
                  var result19 = parse_WS();
                  while (result19 !== null) {
                    result8.push(result19);
                    var result19 = parse_WS();
                  }
                  if (result8 !== null) {
                    if (input.substr(pos, 1) === "B") {
                      var result18 = "B";
                      pos += 1;
                    } else {
                      var result18 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"B\"");
                      }
                    }
                    if (result18 !== null) {
                      var result9 = result18;
                    } else {
                      if (input.substr(pos, 1) === "b") {
                        var result17 = "b";
                        pos += 1;
                      } else {
                        var result17 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"b\"");
                        }
                      }
                      if (result17 !== null) {
                        var result9 = result17;
                      } else {
                        var result9 = null;;
                      };
                    }
                    if (result9 !== null) {
                      if (input.substr(pos, 1) === "Y") {
                        var result16 = "Y";
                        pos += 1;
                      } else {
                        var result16 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"Y\"");
                        }
                      }
                      if (result16 !== null) {
                        var result10 = result16;
                      } else {
                        if (input.substr(pos, 1) === "y") {
                          var result15 = "y";
                          pos += 1;
                        } else {
                          var result15 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"y\"");
                          }
                        }
                        if (result15 !== null) {
                          var result10 = result15;
                        } else {
                          var result10 = null;;
                        };
                      }
                      if (result10 !== null) {
                        var result11 = [];
                        var result14 = parse_WS();
                        while (result14 !== null) {
                          result11.push(result14);
                          var result14 = parse_WS();
                        }
                        if (result11 !== null) {
                          var result13 = parse_GroupCondition();
                          if (result13 !== null) {
                            var result12 = [];
                            while (result13 !== null) {
                              result12.push(result13);
                              var result13 = parse_GroupCondition();
                            }
                          } else {
                            var result12 = null;
                          }
                          if (result12 !== null) {
                            var result1 = [result3, result4, result5, result6, result7, result8, result9, result10, result11, result12];
                          } else {
                            var result1 = null;
                            pos = savedPos1;
                          }
                        } else {
                          var result1 = null;
                          pos = savedPos1;
                        }
                      } else {
                        var result1 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(conds) {
                return conds;
          })(result1[9])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[18] GroupClause");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_GroupCondition() {
        var cacheKey = 'GroupCondition@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos7 = pos;
        var savedPos8 = pos;
        var result47 = [];
        var result51 = parse_WS();
        while (result51 !== null) {
          result47.push(result51);
          var result51 = parse_WS();
        }
        if (result47 !== null) {
          var result48 = parse_BuiltInCall();
          if (result48 !== null) {
            var result49 = [];
            var result50 = parse_WS();
            while (result50 !== null) {
              result49.push(result50);
              var result50 = parse_WS();
            }
            if (result49 !== null) {
              var result45 = [result47, result48, result49];
            } else {
              var result45 = null;
              pos = savedPos8;
            }
          } else {
            var result45 = null;
            pos = savedPos8;
          }
        } else {
          var result45 = null;
          pos = savedPos8;
        }
        var result46 = result45 !== null
          ? (function(b) {
                return b;
          })(result45[1])
          : null;
        if (result46 !== null) {
          var result44 = result46;
        } else {
          var result44 = null;
          pos = savedPos7;
        }
        if (result44 !== null) {
          var result0 = result44;
        } else {
          var savedPos5 = pos;
          var savedPos6 = pos;
          var result39 = [];
          var result43 = parse_WS();
          while (result43 !== null) {
            result39.push(result43);
            var result43 = parse_WS();
          }
          if (result39 !== null) {
            var result40 = parse_FunctionCall();
            if (result40 !== null) {
              var result41 = [];
              var result42 = parse_WS();
              while (result42 !== null) {
                result41.push(result42);
                var result42 = parse_WS();
              }
              if (result41 !== null) {
                var result37 = [result39, result40, result41];
              } else {
                var result37 = null;
                pos = savedPos6;
              }
            } else {
              var result37 = null;
              pos = savedPos6;
            }
          } else {
            var result37 = null;
            pos = savedPos6;
          }
          var result38 = result37 !== null
            ? (function(f) {
                  return f;
            })(result37[1])
            : null;
          if (result38 !== null) {
            var result36 = result38;
          } else {
            var result36 = null;
            pos = savedPos5;
          }
          if (result36 !== null) {
            var result0 = result36;
          } else {
            var savedPos2 = pos;
            var savedPos3 = pos;
            var result12 = [];
            var result35 = parse_WS();
            while (result35 !== null) {
              result12.push(result35);
              var result35 = parse_WS();
            }
            if (result12 !== null) {
              if (input.substr(pos, 1) === "(") {
                var result13 = "(";
                pos += 1;
              } else {
                var result13 = null;
                if (reportMatchFailures) {
                  matchFailed("\"(\"");
                }
              }
              if (result13 !== null) {
                var result14 = [];
                var result34 = parse_WS();
                while (result34 !== null) {
                  result14.push(result34);
                  var result34 = parse_WS();
                }
                if (result14 !== null) {
                  var result15 = parse_ConditionalOrExpression();
                  if (result15 !== null) {
                    var result16 = [];
                    var result33 = parse_WS();
                    while (result33 !== null) {
                      result16.push(result33);
                      var result33 = parse_WS();
                    }
                    if (result16 !== null) {
                      var savedPos4 = pos;
                      if (input.substr(pos, 1) === "A") {
                        var result32 = "A";
                        pos += 1;
                      } else {
                        var result32 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"A\"");
                        }
                      }
                      if (result32 !== null) {
                        var result24 = result32;
                      } else {
                        if (input.substr(pos, 1) === "a") {
                          var result31 = "a";
                          pos += 1;
                        } else {
                          var result31 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"a\"");
                          }
                        }
                        if (result31 !== null) {
                          var result24 = result31;
                        } else {
                          var result24 = null;;
                        };
                      }
                      if (result24 !== null) {
                        if (input.substr(pos, 1) === "S") {
                          var result30 = "S";
                          pos += 1;
                        } else {
                          var result30 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"S\"");
                          }
                        }
                        if (result30 !== null) {
                          var result25 = result30;
                        } else {
                          if (input.substr(pos, 1) === "s") {
                            var result29 = "s";
                            pos += 1;
                          } else {
                            var result29 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"s\"");
                            }
                          }
                          if (result29 !== null) {
                            var result25 = result29;
                          } else {
                            var result25 = null;;
                          };
                        }
                        if (result25 !== null) {
                          var result26 = [];
                          var result28 = parse_WS();
                          while (result28 !== null) {
                            result26.push(result28);
                            var result28 = parse_WS();
                          }
                          if (result26 !== null) {
                            var result27 = parse_Var();
                            if (result27 !== null) {
                              var result23 = [result24, result25, result26, result27];
                            } else {
                              var result23 = null;
                              pos = savedPos4;
                            }
                          } else {
                            var result23 = null;
                            pos = savedPos4;
                          }
                        } else {
                          var result23 = null;
                          pos = savedPos4;
                        }
                      } else {
                        var result23 = null;
                        pos = savedPos4;
                      }
                      var result17 = result23 !== null ? result23 : '';
                      if (result17 !== null) {
                        var result18 = [];
                        var result22 = parse_WS();
                        while (result22 !== null) {
                          result18.push(result22);
                          var result22 = parse_WS();
                        }
                        if (result18 !== null) {
                          if (input.substr(pos, 1) === ")") {
                            var result19 = ")";
                            pos += 1;
                          } else {
                            var result19 = null;
                            if (reportMatchFailures) {
                              matchFailed("\")\"");
                            }
                          }
                          if (result19 !== null) {
                            var result20 = [];
                            var result21 = parse_WS();
                            while (result21 !== null) {
                              result20.push(result21);
                              var result21 = parse_WS();
                            }
                            if (result20 !== null) {
                              var result10 = [result12, result13, result14, result15, result16, result17, result18, result19, result20];
                            } else {
                              var result10 = null;
                              pos = savedPos3;
                            }
                          } else {
                            var result10 = null;
                            pos = savedPos3;
                          }
                        } else {
                          var result10 = null;
                          pos = savedPos3;
                        }
                      } else {
                        var result10 = null;
                        pos = savedPos3;
                      }
                    } else {
                      var result10 = null;
                      pos = savedPos3;
                    }
                  } else {
                    var result10 = null;
                    pos = savedPos3;
                  }
                } else {
                  var result10 = null;
                  pos = savedPos3;
                }
              } else {
                var result10 = null;
                pos = savedPos3;
              }
            } else {
              var result10 = null;
              pos = savedPos3;
            }
            var result11 = result10 !== null
              ? (function(e, alias) {
                    if(alias.length != 0) {
                        return {token: 'aliased_expression',
                                expression: e,
                                alias: alias[3] };
                    } else {
                        return e;
                    }
              })(result10[3], result10[5])
              : null;
            if (result11 !== null) {
              var result9 = result11;
            } else {
              var result9 = null;
              pos = savedPos2;
            }
            if (result9 !== null) {
              var result0 = result9;
            } else {
              var savedPos0 = pos;
              var savedPos1 = pos;
              var result4 = [];
              var result8 = parse_WS();
              while (result8 !== null) {
                result4.push(result8);
                var result8 = parse_WS();
              }
              if (result4 !== null) {
                var result5 = parse_Var();
                if (result5 !== null) {
                  var result6 = [];
                  var result7 = parse_WS();
                  while (result7 !== null) {
                    result6.push(result7);
                    var result7 = parse_WS();
                  }
                  if (result6 !== null) {
                    var result2 = [result4, result5, result6];
                  } else {
                    var result2 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result2 = null;
                  pos = savedPos1;
                }
              } else {
                var result2 = null;
                pos = savedPos1;
              }
              var result3 = result2 !== null
                ? (function(v) {
                      return v;
                })(result2[1])
                : null;
              if (result3 !== null) {
                var result1 = result3;
              } else {
                var result1 = null;
                pos = savedPos0;
              }
              if (result1 !== null) {
                var result0 = result1;
              } else {
                var result0 = null;;
              };
            };
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[19] GroupCondition");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_HavingClause() {
        var cacheKey = 'HavingClause@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        if (input.substr(pos, 6) === "HAVING") {
          var result1 = "HAVING";
          pos += 6;
        } else {
          var result1 = null;
          if (reportMatchFailures) {
            matchFailed("\"HAVING\"");
          }
        }
        if (result1 !== null) {
          var result3 = parse_Constraint();
          if (result3 !== null) {
            var result2 = [];
            while (result3 !== null) {
              result2.push(result3);
              var result3 = parse_Constraint();
            }
          } else {
            var result2 = null;
          }
          if (result2 !== null) {
            var result0 = [result1, result2];
          } else {
            var result0 = null;
            pos = savedPos0;
          }
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[20] HavingClause");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_OrderClause() {
        var cacheKey = 'OrderClause@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "O") {
          var result31 = "O";
          pos += 1;
        } else {
          var result31 = null;
          if (reportMatchFailures) {
            matchFailed("\"O\"");
          }
        }
        if (result31 !== null) {
          var result3 = result31;
        } else {
          if (input.substr(pos, 1) === "o") {
            var result30 = "o";
            pos += 1;
          } else {
            var result30 = null;
            if (reportMatchFailures) {
              matchFailed("\"o\"");
            }
          }
          if (result30 !== null) {
            var result3 = result30;
          } else {
            var result3 = null;;
          };
        }
        if (result3 !== null) {
          if (input.substr(pos, 1) === "R") {
            var result29 = "R";
            pos += 1;
          } else {
            var result29 = null;
            if (reportMatchFailures) {
              matchFailed("\"R\"");
            }
          }
          if (result29 !== null) {
            var result4 = result29;
          } else {
            if (input.substr(pos, 1) === "r") {
              var result28 = "r";
              pos += 1;
            } else {
              var result28 = null;
              if (reportMatchFailures) {
                matchFailed("\"r\"");
              }
            }
            if (result28 !== null) {
              var result4 = result28;
            } else {
              var result4 = null;;
            };
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === "D") {
              var result27 = "D";
              pos += 1;
            } else {
              var result27 = null;
              if (reportMatchFailures) {
                matchFailed("\"D\"");
              }
            }
            if (result27 !== null) {
              var result5 = result27;
            } else {
              if (input.substr(pos, 1) === "d") {
                var result26 = "d";
                pos += 1;
              } else {
                var result26 = null;
                if (reportMatchFailures) {
                  matchFailed("\"d\"");
                }
              }
              if (result26 !== null) {
                var result5 = result26;
              } else {
                var result5 = null;;
              };
            }
            if (result5 !== null) {
              if (input.substr(pos, 1) === "E") {
                var result25 = "E";
                pos += 1;
              } else {
                var result25 = null;
                if (reportMatchFailures) {
                  matchFailed("\"E\"");
                }
              }
              if (result25 !== null) {
                var result6 = result25;
              } else {
                if (input.substr(pos, 1) === "e") {
                  var result24 = "e";
                  pos += 1;
                } else {
                  var result24 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"e\"");
                  }
                }
                if (result24 !== null) {
                  var result6 = result24;
                } else {
                  var result6 = null;;
                };
              }
              if (result6 !== null) {
                if (input.substr(pos, 1) === "R") {
                  var result23 = "R";
                  pos += 1;
                } else {
                  var result23 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"R\"");
                  }
                }
                if (result23 !== null) {
                  var result7 = result23;
                } else {
                  if (input.substr(pos, 1) === "r") {
                    var result22 = "r";
                    pos += 1;
                  } else {
                    var result22 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"r\"");
                    }
                  }
                  if (result22 !== null) {
                    var result7 = result22;
                  } else {
                    var result7 = null;;
                  };
                }
                if (result7 !== null) {
                  var result8 = [];
                  var result21 = parse_WS();
                  while (result21 !== null) {
                    result8.push(result21);
                    var result21 = parse_WS();
                  }
                  if (result8 !== null) {
                    if (input.substr(pos, 1) === "B") {
                      var result20 = "B";
                      pos += 1;
                    } else {
                      var result20 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"B\"");
                      }
                    }
                    if (result20 !== null) {
                      var result9 = result20;
                    } else {
                      if (input.substr(pos, 1) === "b") {
                        var result19 = "b";
                        pos += 1;
                      } else {
                        var result19 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"b\"");
                        }
                      }
                      if (result19 !== null) {
                        var result9 = result19;
                      } else {
                        var result9 = null;;
                      };
                    }
                    if (result9 !== null) {
                      if (input.substr(pos, 1) === "Y") {
                        var result18 = "Y";
                        pos += 1;
                      } else {
                        var result18 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"Y\"");
                        }
                      }
                      if (result18 !== null) {
                        var result10 = result18;
                      } else {
                        if (input.substr(pos, 1) === "y") {
                          var result17 = "y";
                          pos += 1;
                        } else {
                          var result17 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"y\"");
                          }
                        }
                        if (result17 !== null) {
                          var result10 = result17;
                        } else {
                          var result10 = null;;
                        };
                      }
                      if (result10 !== null) {
                        var result11 = [];
                        var result16 = parse_WS();
                        while (result16 !== null) {
                          result11.push(result16);
                          var result16 = parse_WS();
                        }
                        if (result11 !== null) {
                          var result15 = parse_OrderCondition();
                          if (result15 !== null) {
                            var result12 = [];
                            while (result15 !== null) {
                              result12.push(result15);
                              var result15 = parse_OrderCondition();
                            }
                          } else {
                            var result12 = null;
                          }
                          if (result12 !== null) {
                            var result13 = [];
                            var result14 = parse_WS();
                            while (result14 !== null) {
                              result13.push(result14);
                              var result14 = parse_WS();
                            }
                            if (result13 !== null) {
                              var result1 = [result3, result4, result5, result6, result7, result8, result9, result10, result11, result12, result13];
                            } else {
                              var result1 = null;
                              pos = savedPos1;
                            }
                          } else {
                            var result1 = null;
                            pos = savedPos1;
                          }
                        } else {
                          var result1 = null;
                          pos = savedPos1;
                        }
                      } else {
                        var result1 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(os) {
                return os;
          })(result1[9])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[22] OrderClause");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_OrderCondition() {
        var cacheKey = 'OrderCondition@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos2 = pos;
        var savedPos3 = pos;
        if (input.substr(pos, 3) === "ASC") {
          var result19 = "ASC";
          pos += 3;
        } else {
          var result19 = null;
          if (reportMatchFailures) {
            matchFailed("\"ASC\"");
          }
        }
        if (result19 !== null) {
          var result12 = result19;
        } else {
          if (input.substr(pos, 4) === "DESC") {
            var result18 = "DESC";
            pos += 4;
          } else {
            var result18 = null;
            if (reportMatchFailures) {
              matchFailed("\"DESC\"");
            }
          }
          if (result18 !== null) {
            var result12 = result18;
          } else {
            var result12 = null;;
          };
        }
        if (result12 !== null) {
          var result13 = [];
          var result17 = parse_WS();
          while (result17 !== null) {
            result13.push(result17);
            var result17 = parse_WS();
          }
          if (result13 !== null) {
            var result14 = parse_BrackettedExpression();
            if (result14 !== null) {
              var result15 = [];
              var result16 = parse_WS();
              while (result16 !== null) {
                result15.push(result16);
                var result16 = parse_WS();
              }
              if (result15 !== null) {
                var result10 = [result12, result13, result14, result15];
              } else {
                var result10 = null;
                pos = savedPos3;
              }
            } else {
              var result10 = null;
              pos = savedPos3;
            }
          } else {
            var result10 = null;
            pos = savedPos3;
          }
        } else {
          var result10 = null;
          pos = savedPos3;
        }
        var result11 = result10 !== null
          ? (function(direction, e) {
                return { direction: direction, expression:e };
          })(result10[0], result10[2])
          : null;
        if (result11 !== null) {
          var result9 = result11;
        } else {
          var result9 = null;
          pos = savedPos2;
        }
        if (result9 !== null) {
          var result0 = result9;
        } else {
          var savedPos0 = pos;
          var savedPos1 = pos;
          var result8 = parse_Constraint();
          if (result8 !== null) {
            var result4 = result8;
          } else {
            var result7 = parse_Var();
            if (result7 !== null) {
              var result4 = result7;
            } else {
              var result4 = null;;
            };
          }
          if (result4 !== null) {
            var result5 = [];
            var result6 = parse_WS();
            while (result6 !== null) {
              result5.push(result6);
              var result6 = parse_WS();
            }
            if (result5 !== null) {
              var result2 = [result4, result5];
            } else {
              var result2 = null;
              pos = savedPos1;
            }
          } else {
            var result2 = null;
            pos = savedPos1;
          }
          var result3 = result2 !== null
            ? (function(e) {
                if(e.token === 'var') {
                    e = { token:'expression', 
                          expressionType:'atomic',
                          primaryexpression: 'var',
                          value: e };
                }
                return { direction: 'ASC', expression:e };
            })(result2[0])
            : null;
          if (result3 !== null) {
            var result1 = result3;
          } else {
            var result1 = null;
            pos = savedPos0;
          }
          if (result1 !== null) {
            var result0 = result1;
          } else {
            var result0 = null;;
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[23] OrderCondition");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_LimitOffsetClauses() {
        var cacheKey = 'LimitOffsetClauses@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos2 = pos;
        var result8 = parse_LimitClause();
        if (result8 !== null) {
          var result10 = parse_OffsetClause();
          var result9 = result10 !== null ? result10 : '';
          if (result9 !== null) {
            var result7 = [result8, result9];
          } else {
            var result7 = null;
            pos = savedPos2;
          }
        } else {
          var result7 = null;
          pos = savedPos2;
        }
        if (result7 !== null) {
          var result1 = result7;
        } else {
          var savedPos1 = pos;
          var result4 = parse_OffsetClause();
          if (result4 !== null) {
            var result6 = parse_LimitClause();
            var result5 = result6 !== null ? result6 : '';
            if (result5 !== null) {
              var result3 = [result4, result5];
            } else {
              var result3 = null;
              pos = savedPos1;
            }
          } else {
            var result3 = null;
            pos = savedPos1;
          }
          if (result3 !== null) {
            var result1 = result3;
          } else {
            var result1 = null;;
          };
        }
        var result2 = result1 !== null
          ? (function(cls) {
                var acum = {};
                for(var i=0; i<cls.length; i++) {
                    var cl = cls[i];
                    if(cl.limit != null) {
                        acum['limit'] = cl.limit;
                    } else if(cl.offset != null){
                        acum['offset'] = cl.offset;
                    }
                }
          
                return acum;
          })(result1)
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[24] LimitOffsetClauses");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_LimitClause() {
        var cacheKey = 'LimitClause@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "L") {
          var result22 = "L";
          pos += 1;
        } else {
          var result22 = null;
          if (reportMatchFailures) {
            matchFailed("\"L\"");
          }
        }
        if (result22 !== null) {
          var result3 = result22;
        } else {
          if (input.substr(pos, 1) === "l") {
            var result21 = "l";
            pos += 1;
          } else {
            var result21 = null;
            if (reportMatchFailures) {
              matchFailed("\"l\"");
            }
          }
          if (result21 !== null) {
            var result3 = result21;
          } else {
            var result3 = null;;
          };
        }
        if (result3 !== null) {
          if (input.substr(pos, 1) === "I") {
            var result20 = "I";
            pos += 1;
          } else {
            var result20 = null;
            if (reportMatchFailures) {
              matchFailed("\"I\"");
            }
          }
          if (result20 !== null) {
            var result4 = result20;
          } else {
            if (input.substr(pos, 1) === "i") {
              var result19 = "i";
              pos += 1;
            } else {
              var result19 = null;
              if (reportMatchFailures) {
                matchFailed("\"i\"");
              }
            }
            if (result19 !== null) {
              var result4 = result19;
            } else {
              var result4 = null;;
            };
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === "M") {
              var result18 = "M";
              pos += 1;
            } else {
              var result18 = null;
              if (reportMatchFailures) {
                matchFailed("\"M\"");
              }
            }
            if (result18 !== null) {
              var result5 = result18;
            } else {
              if (input.substr(pos, 1) === "m") {
                var result17 = "m";
                pos += 1;
              } else {
                var result17 = null;
                if (reportMatchFailures) {
                  matchFailed("\"m\"");
                }
              }
              if (result17 !== null) {
                var result5 = result17;
              } else {
                var result5 = null;;
              };
            }
            if (result5 !== null) {
              if (input.substr(pos, 1) === "I") {
                var result16 = "I";
                pos += 1;
              } else {
                var result16 = null;
                if (reportMatchFailures) {
                  matchFailed("\"I\"");
                }
              }
              if (result16 !== null) {
                var result6 = result16;
              } else {
                if (input.substr(pos, 1) === "i") {
                  var result15 = "i";
                  pos += 1;
                } else {
                  var result15 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"i\"");
                  }
                }
                if (result15 !== null) {
                  var result6 = result15;
                } else {
                  var result6 = null;;
                };
              }
              if (result6 !== null) {
                if (input.substr(pos, 1) === "T") {
                  var result14 = "T";
                  pos += 1;
                } else {
                  var result14 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"T\"");
                  }
                }
                if (result14 !== null) {
                  var result7 = result14;
                } else {
                  if (input.substr(pos, 1) === "t") {
                    var result13 = "t";
                    pos += 1;
                  } else {
                    var result13 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"t\"");
                    }
                  }
                  if (result13 !== null) {
                    var result7 = result13;
                  } else {
                    var result7 = null;;
                  };
                }
                if (result7 !== null) {
                  var result8 = [];
                  var result12 = parse_WS();
                  while (result12 !== null) {
                    result8.push(result12);
                    var result12 = parse_WS();
                  }
                  if (result8 !== null) {
                    var result9 = parse_INTEGER();
                    if (result9 !== null) {
                      var result10 = [];
                      var result11 = parse_WS();
                      while (result11 !== null) {
                        result10.push(result11);
                        var result11 = parse_WS();
                      }
                      if (result10 !== null) {
                        var result1 = [result3, result4, result5, result6, result7, result8, result9, result10];
                      } else {
                        var result1 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(i) {
            return { limit:parseInt(i.value) };
          })(result1[6])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[25] LimitClause");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_OffsetClause() {
        var cacheKey = 'OffsetClause@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "O") {
          var result25 = "O";
          pos += 1;
        } else {
          var result25 = null;
          if (reportMatchFailures) {
            matchFailed("\"O\"");
          }
        }
        if (result25 !== null) {
          var result3 = result25;
        } else {
          if (input.substr(pos, 1) === "o") {
            var result24 = "o";
            pos += 1;
          } else {
            var result24 = null;
            if (reportMatchFailures) {
              matchFailed("\"o\"");
            }
          }
          if (result24 !== null) {
            var result3 = result24;
          } else {
            var result3 = null;;
          };
        }
        if (result3 !== null) {
          if (input.substr(pos, 1) === "F") {
            var result23 = "F";
            pos += 1;
          } else {
            var result23 = null;
            if (reportMatchFailures) {
              matchFailed("\"F\"");
            }
          }
          if (result23 !== null) {
            var result4 = result23;
          } else {
            if (input.substr(pos, 1) === "f") {
              var result22 = "f";
              pos += 1;
            } else {
              var result22 = null;
              if (reportMatchFailures) {
                matchFailed("\"f\"");
              }
            }
            if (result22 !== null) {
              var result4 = result22;
            } else {
              var result4 = null;;
            };
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === "F") {
              var result21 = "F";
              pos += 1;
            } else {
              var result21 = null;
              if (reportMatchFailures) {
                matchFailed("\"F\"");
              }
            }
            if (result21 !== null) {
              var result5 = result21;
            } else {
              if (input.substr(pos, 1) === "f") {
                var result20 = "f";
                pos += 1;
              } else {
                var result20 = null;
                if (reportMatchFailures) {
                  matchFailed("\"f\"");
                }
              }
              if (result20 !== null) {
                var result5 = result20;
              } else {
                var result5 = null;;
              };
            }
            if (result5 !== null) {
              if (input.substr(pos, 1) === "S") {
                var result19 = "S";
                pos += 1;
              } else {
                var result19 = null;
                if (reportMatchFailures) {
                  matchFailed("\"S\"");
                }
              }
              if (result19 !== null) {
                var result6 = result19;
              } else {
                if (input.substr(pos, 1) === "s") {
                  var result18 = "s";
                  pos += 1;
                } else {
                  var result18 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"s\"");
                  }
                }
                if (result18 !== null) {
                  var result6 = result18;
                } else {
                  var result6 = null;;
                };
              }
              if (result6 !== null) {
                if (input.substr(pos, 1) === "E") {
                  var result17 = "E";
                  pos += 1;
                } else {
                  var result17 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"E\"");
                  }
                }
                if (result17 !== null) {
                  var result7 = result17;
                } else {
                  if (input.substr(pos, 1) === "e") {
                    var result16 = "e";
                    pos += 1;
                  } else {
                    var result16 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"e\"");
                    }
                  }
                  if (result16 !== null) {
                    var result7 = result16;
                  } else {
                    var result7 = null;;
                  };
                }
                if (result7 !== null) {
                  if (input.substr(pos, 1) === "T") {
                    var result15 = "T";
                    pos += 1;
                  } else {
                    var result15 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"T\"");
                    }
                  }
                  if (result15 !== null) {
                    var result8 = result15;
                  } else {
                    if (input.substr(pos, 1) === "t") {
                      var result14 = "t";
                      pos += 1;
                    } else {
                      var result14 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"t\"");
                      }
                    }
                    if (result14 !== null) {
                      var result8 = result14;
                    } else {
                      var result8 = null;;
                    };
                  }
                  if (result8 !== null) {
                    var result9 = [];
                    var result13 = parse_WS();
                    while (result13 !== null) {
                      result9.push(result13);
                      var result13 = parse_WS();
                    }
                    if (result9 !== null) {
                      var result10 = parse_INTEGER();
                      if (result10 !== null) {
                        var result11 = [];
                        var result12 = parse_WS();
                        while (result12 !== null) {
                          result11.push(result12);
                          var result12 = parse_WS();
                        }
                        if (result11 !== null) {
                          var result1 = [result3, result4, result5, result6, result7, result8, result9, result10, result11];
                        } else {
                          var result1 = null;
                          pos = savedPos1;
                        }
                      } else {
                        var result1 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(i) {
            return { offset:parseInt(i.value) };
          })(result1[7])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[26] OffsetClause");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_BindingsClause() {
        var cacheKey = 'BindingsClause@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        if (input.substr(pos, 8) === "BINDINGS") {
          var result2 = "BINDINGS";
          pos += 8;
        } else {
          var result2 = null;
          if (reportMatchFailures) {
            matchFailed("\"BINDINGS\"");
          }
        }
        if (result2 !== null) {
          var result3 = [];
          var result14 = parse_Var();
          while (result14 !== null) {
            result3.push(result14);
            var result14 = parse_Var();
          }
          if (result3 !== null) {
            if (input.substr(pos, 1) === "{") {
              var result4 = "{";
              pos += 1;
            } else {
              var result4 = null;
              if (reportMatchFailures) {
                matchFailed("\"{\"");
              }
            }
            if (result4 !== null) {
              var result5 = [];
              var savedPos1 = pos;
              if (input.substr(pos, 1) === "(") {
                var result10 = "(";
                pos += 1;
              } else {
                var result10 = null;
                if (reportMatchFailures) {
                  matchFailed("\"(\"");
                }
              }
              if (result10 !== null) {
                var result13 = parse_BindingValue();
                if (result13 !== null) {
                  var result11 = [];
                  while (result13 !== null) {
                    result11.push(result13);
                    var result13 = parse_BindingValue();
                  }
                } else {
                  var result11 = null;
                }
                if (result11 !== null) {
                  if (input.substr(pos, 1) === ")") {
                    var result12 = ")";
                    pos += 1;
                  } else {
                    var result12 = null;
                    if (reportMatchFailures) {
                      matchFailed("\")\"");
                    }
                  }
                  if (result12 !== null) {
                    var result9 = [result10, result11, result12];
                  } else {
                    var result9 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result9 = null;
                  pos = savedPos1;
                }
              } else {
                var result9 = null;
                pos = savedPos1;
              }
              if (result9 !== null) {
                var result7 = result9;
              } else {
                var result8 = parse_NIL();
                if (result8 !== null) {
                  var result7 = result8;
                } else {
                  var result7 = null;;
                };
              }
              while (result7 !== null) {
                result5.push(result7);
                var savedPos1 = pos;
                if (input.substr(pos, 1) === "(") {
                  var result10 = "(";
                  pos += 1;
                } else {
                  var result10 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"(\"");
                  }
                }
                if (result10 !== null) {
                  var result13 = parse_BindingValue();
                  if (result13 !== null) {
                    var result11 = [];
                    while (result13 !== null) {
                      result11.push(result13);
                      var result13 = parse_BindingValue();
                    }
                  } else {
                    var result11 = null;
                  }
                  if (result11 !== null) {
                    if (input.substr(pos, 1) === ")") {
                      var result12 = ")";
                      pos += 1;
                    } else {
                      var result12 = null;
                      if (reportMatchFailures) {
                        matchFailed("\")\"");
                      }
                    }
                    if (result12 !== null) {
                      var result9 = [result10, result11, result12];
                    } else {
                      var result9 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result9 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result9 = null;
                  pos = savedPos1;
                }
                if (result9 !== null) {
                  var result7 = result9;
                } else {
                  var result8 = parse_NIL();
                  if (result8 !== null) {
                    var result7 = result8;
                  } else {
                    var result7 = null;;
                  };
                }
              }
              if (result5 !== null) {
                if (input.substr(pos, 1) === "}") {
                  var result6 = "}";
                  pos += 1;
                } else {
                  var result6 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"}\"");
                  }
                }
                if (result6 !== null) {
                  var result1 = [result2, result3, result4, result5, result6];
                } else {
                  var result1 = null;
                  pos = savedPos0;
                }
              } else {
                var result1 = null;
                pos = savedPos0;
              }
            } else {
              var result1 = null;
              pos = savedPos0;
            }
          } else {
            var result1 = null;
            pos = savedPos0;
          }
        } else {
          var result1 = null;
          pos = savedPos0;
        }
        var result0 = result1 !== null ? result1 : '';
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[27] BindingsClause");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_BindingValue() {
        var cacheKey = 'BindingValue@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var result5 = parse_IRIref();
        if (result5 !== null) {
          var result0 = result5;
        } else {
          var result4 = parse_RDFLiteral();
          if (result4 !== null) {
            var result0 = result4;
          } else {
            var result3 = parse_NumericLiteral();
            if (result3 !== null) {
              var result0 = result3;
            } else {
              var result2 = parse_BooleanLiteral();
              if (result2 !== null) {
                var result0 = result2;
              } else {
                if (input.substr(pos, 5) === "UNDEF") {
                  var result1 = "UNDEF";
                  pos += 5;
                } else {
                  var result1 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"UNDEF\"");
                  }
                }
                if (result1 !== null) {
                  var result0 = result1;
                } else {
                  var result0 = null;;
                };
              };
            };
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[28] BindingValue");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_Update() {
        var cacheKey = 'Update@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = parse_Prologue();
        if (result3 !== null) {
          var result4 = [];
          var result15 = parse_WS();
          while (result15 !== null) {
            result4.push(result15);
            var result15 = parse_WS();
          }
          if (result4 !== null) {
            var result5 = parse_Update1();
            if (result5 !== null) {
              var savedPos2 = pos;
              var result8 = [];
              var result14 = parse_WS();
              while (result14 !== null) {
                result8.push(result14);
                var result14 = parse_WS();
              }
              if (result8 !== null) {
                if (input.substr(pos, 1) === ";") {
                  var result9 = ";";
                  pos += 1;
                } else {
                  var result9 = null;
                  if (reportMatchFailures) {
                    matchFailed("\";\"");
                  }
                }
                if (result9 !== null) {
                  var result10 = [];
                  var result13 = parse_WS();
                  while (result13 !== null) {
                    result10.push(result13);
                    var result13 = parse_WS();
                  }
                  if (result10 !== null) {
                    var result12 = parse_Update();
                    var result11 = result12 !== null ? result12 : '';
                    if (result11 !== null) {
                      var result7 = [result8, result9, result10, result11];
                    } else {
                      var result7 = null;
                      pos = savedPos2;
                    }
                  } else {
                    var result7 = null;
                    pos = savedPos2;
                  }
                } else {
                  var result7 = null;
                  pos = savedPos2;
                }
              } else {
                var result7 = null;
                pos = savedPos2;
              }
              var result6 = result7 !== null ? result7 : '';
              if (result6 !== null) {
                var result1 = [result3, result4, result5, result6];
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(p, u, us) {
          
                var query = {};
                query.token = 'query';
                query.kind = 'update'
                query.prologue = p;
          
               var units = [u];
          
               if(us.length != null && us[3] != null && us[3].units != null) {
                   units = units.concat(us[3].units);
               }
          
               query.units = units;
               return query;
          })(result1[0], result1[2], result1[3])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[30] Update");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_Update1() {
        var cacheKey = 'Update1@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var result8 = parse_Load();
        if (result8 !== null) {
          var result0 = result8;
        } else {
          var result7 = parse_Clear();
          if (result7 !== null) {
            var result0 = result7;
          } else {
            var result6 = parse_Drop();
            if (result6 !== null) {
              var result0 = result6;
            } else {
              var result5 = parse_Create();
              if (result5 !== null) {
                var result0 = result5;
              } else {
                var result4 = parse_InsertData();
                if (result4 !== null) {
                  var result0 = result4;
                } else {
                  var result3 = parse_DeleteData();
                  if (result3 !== null) {
                    var result0 = result3;
                  } else {
                    var result2 = parse_DeleteWhere();
                    if (result2 !== null) {
                      var result0 = result2;
                    } else {
                      var result1 = parse_Modify();
                      if (result1 !== null) {
                        var result0 = result1;
                      } else {
                        var result0 = null;;
                      };
                    };
                  };
                };
              };
            };
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[31] Update1");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_Load() {
        var cacheKey = 'Load@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "L") {
          var result36 = "L";
          pos += 1;
        } else {
          var result36 = null;
          if (reportMatchFailures) {
            matchFailed("\"L\"");
          }
        }
        if (result36 !== null) {
          var result3 = result36;
        } else {
          if (input.substr(pos, 1) === "l") {
            var result35 = "l";
            pos += 1;
          } else {
            var result35 = null;
            if (reportMatchFailures) {
              matchFailed("\"l\"");
            }
          }
          if (result35 !== null) {
            var result3 = result35;
          } else {
            var result3 = null;;
          };
        }
        if (result3 !== null) {
          if (input.substr(pos, 1) === "O") {
            var result34 = "O";
            pos += 1;
          } else {
            var result34 = null;
            if (reportMatchFailures) {
              matchFailed("\"O\"");
            }
          }
          if (result34 !== null) {
            var result4 = result34;
          } else {
            if (input.substr(pos, 1) === "o") {
              var result33 = "o";
              pos += 1;
            } else {
              var result33 = null;
              if (reportMatchFailures) {
                matchFailed("\"o\"");
              }
            }
            if (result33 !== null) {
              var result4 = result33;
            } else {
              var result4 = null;;
            };
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === "A") {
              var result32 = "A";
              pos += 1;
            } else {
              var result32 = null;
              if (reportMatchFailures) {
                matchFailed("\"A\"");
              }
            }
            if (result32 !== null) {
              var result5 = result32;
            } else {
              if (input.substr(pos, 1) === "a") {
                var result31 = "a";
                pos += 1;
              } else {
                var result31 = null;
                if (reportMatchFailures) {
                  matchFailed("\"a\"");
                }
              }
              if (result31 !== null) {
                var result5 = result31;
              } else {
                var result5 = null;;
              };
            }
            if (result5 !== null) {
              if (input.substr(pos, 1) === "D") {
                var result30 = "D";
                pos += 1;
              } else {
                var result30 = null;
                if (reportMatchFailures) {
                  matchFailed("\"D\"");
                }
              }
              if (result30 !== null) {
                var result6 = result30;
              } else {
                if (input.substr(pos, 1) === "d") {
                  var result29 = "d";
                  pos += 1;
                } else {
                  var result29 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"d\"");
                  }
                }
                if (result29 !== null) {
                  var result6 = result29;
                } else {
                  var result6 = null;;
                };
              }
              if (result6 !== null) {
                var result7 = [];
                var result28 = parse_WS();
                while (result28 !== null) {
                  result7.push(result28);
                  var result28 = parse_WS();
                }
                if (result7 !== null) {
                  var result8 = parse_IRIref();
                  if (result8 !== null) {
                    var result9 = [];
                    var result27 = parse_WS();
                    while (result27 !== null) {
                      result9.push(result27);
                      var result27 = parse_WS();
                    }
                    if (result9 !== null) {
                      var savedPos2 = pos;
                      if (input.substr(pos, 1) === "I") {
                        var result26 = "I";
                        pos += 1;
                      } else {
                        var result26 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"I\"");
                        }
                      }
                      if (result26 !== null) {
                        var result12 = result26;
                      } else {
                        if (input.substr(pos, 1) === "i") {
                          var result25 = "i";
                          pos += 1;
                        } else {
                          var result25 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"i\"");
                          }
                        }
                        if (result25 !== null) {
                          var result12 = result25;
                        } else {
                          var result12 = null;;
                        };
                      }
                      if (result12 !== null) {
                        if (input.substr(pos, 1) === "N") {
                          var result24 = "N";
                          pos += 1;
                        } else {
                          var result24 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"N\"");
                          }
                        }
                        if (result24 !== null) {
                          var result13 = result24;
                        } else {
                          if (input.substr(pos, 1) === "n") {
                            var result23 = "n";
                            pos += 1;
                          } else {
                            var result23 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"n\"");
                            }
                          }
                          if (result23 !== null) {
                            var result13 = result23;
                          } else {
                            var result13 = null;;
                          };
                        }
                        if (result13 !== null) {
                          if (input.substr(pos, 1) === "T") {
                            var result22 = "T";
                            pos += 1;
                          } else {
                            var result22 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"T\"");
                            }
                          }
                          if (result22 !== null) {
                            var result14 = result22;
                          } else {
                            if (input.substr(pos, 1) === "t") {
                              var result21 = "t";
                              pos += 1;
                            } else {
                              var result21 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"t\"");
                              }
                            }
                            if (result21 !== null) {
                              var result14 = result21;
                            } else {
                              var result14 = null;;
                            };
                          }
                          if (result14 !== null) {
                            if (input.substr(pos, 1) === "O") {
                              var result20 = "O";
                              pos += 1;
                            } else {
                              var result20 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"O\"");
                              }
                            }
                            if (result20 !== null) {
                              var result15 = result20;
                            } else {
                              if (input.substr(pos, 1) === "o") {
                                var result19 = "o";
                                pos += 1;
                              } else {
                                var result19 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\"o\"");
                                }
                              }
                              if (result19 !== null) {
                                var result15 = result19;
                              } else {
                                var result15 = null;;
                              };
                            }
                            if (result15 !== null) {
                              var result16 = [];
                              var result18 = parse_WS();
                              while (result18 !== null) {
                                result16.push(result18);
                                var result18 = parse_WS();
                              }
                              if (result16 !== null) {
                                var result17 = parse_GraphRef();
                                if (result17 !== null) {
                                  var result11 = [result12, result13, result14, result15, result16, result17];
                                } else {
                                  var result11 = null;
                                  pos = savedPos2;
                                }
                              } else {
                                var result11 = null;
                                pos = savedPos2;
                              }
                            } else {
                              var result11 = null;
                              pos = savedPos2;
                            }
                          } else {
                            var result11 = null;
                            pos = savedPos2;
                          }
                        } else {
                          var result11 = null;
                          pos = savedPos2;
                        }
                      } else {
                        var result11 = null;
                        pos = savedPos2;
                      }
                      var result10 = result11 !== null ? result11 : '';
                      if (result10 !== null) {
                        var result1 = [result3, result4, result5, result6, result7, result8, result9, result10];
                      } else {
                        var result1 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(sg, dg) {
                var query = {};
                query.kind = 'load';
                query.token = 'executableunit'
                query.sourceGraph = sg;
                query.destinyGraph = dg[5];
                
                return query;
          })(result1[5], result1[7])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[32] Load");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_Clear() {
        var cacheKey = 'Clear@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "C") {
          var result42 = "C";
          pos += 1;
        } else {
          var result42 = null;
          if (reportMatchFailures) {
            matchFailed("\"C\"");
          }
        }
        if (result42 !== null) {
          var result3 = result42;
        } else {
          if (input.substr(pos, 1) === "c") {
            var result41 = "c";
            pos += 1;
          } else {
            var result41 = null;
            if (reportMatchFailures) {
              matchFailed("\"c\"");
            }
          }
          if (result41 !== null) {
            var result3 = result41;
          } else {
            var result3 = null;;
          };
        }
        if (result3 !== null) {
          if (input.substr(pos, 1) === "L") {
            var result40 = "L";
            pos += 1;
          } else {
            var result40 = null;
            if (reportMatchFailures) {
              matchFailed("\"L\"");
            }
          }
          if (result40 !== null) {
            var result4 = result40;
          } else {
            if (input.substr(pos, 1) === "l") {
              var result39 = "l";
              pos += 1;
            } else {
              var result39 = null;
              if (reportMatchFailures) {
                matchFailed("\"l\"");
              }
            }
            if (result39 !== null) {
              var result4 = result39;
            } else {
              var result4 = null;;
            };
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === "E") {
              var result38 = "E";
              pos += 1;
            } else {
              var result38 = null;
              if (reportMatchFailures) {
                matchFailed("\"E\"");
              }
            }
            if (result38 !== null) {
              var result5 = result38;
            } else {
              if (input.substr(pos, 1) === "e") {
                var result37 = "e";
                pos += 1;
              } else {
                var result37 = null;
                if (reportMatchFailures) {
                  matchFailed("\"e\"");
                }
              }
              if (result37 !== null) {
                var result5 = result37;
              } else {
                var result5 = null;;
              };
            }
            if (result5 !== null) {
              if (input.substr(pos, 1) === "A") {
                var result36 = "A";
                pos += 1;
              } else {
                var result36 = null;
                if (reportMatchFailures) {
                  matchFailed("\"A\"");
                }
              }
              if (result36 !== null) {
                var result6 = result36;
              } else {
                if (input.substr(pos, 1) === "a") {
                  var result35 = "a";
                  pos += 1;
                } else {
                  var result35 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"a\"");
                  }
                }
                if (result35 !== null) {
                  var result6 = result35;
                } else {
                  var result6 = null;;
                };
              }
              if (result6 !== null) {
                if (input.substr(pos, 1) === "R") {
                  var result34 = "R";
                  pos += 1;
                } else {
                  var result34 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"R\"");
                  }
                }
                if (result34 !== null) {
                  var result7 = result34;
                } else {
                  if (input.substr(pos, 1) === "r") {
                    var result33 = "r";
                    pos += 1;
                  } else {
                    var result33 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"r\"");
                    }
                  }
                  if (result33 !== null) {
                    var result7 = result33;
                  } else {
                    var result7 = null;;
                  };
                }
                if (result7 !== null) {
                  var result8 = [];
                  var result32 = parse_WS();
                  while (result32 !== null) {
                    result8.push(result32);
                    var result32 = parse_WS();
                  }
                  if (result8 !== null) {
                    var savedPos2 = pos;
                    if (input.substr(pos, 1) === "S") {
                      var result31 = "S";
                      pos += 1;
                    } else {
                      var result31 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"S\"");
                      }
                    }
                    if (result31 !== null) {
                      var result14 = result31;
                    } else {
                      if (input.substr(pos, 1) === "s") {
                        var result30 = "s";
                        pos += 1;
                      } else {
                        var result30 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"s\"");
                        }
                      }
                      if (result30 !== null) {
                        var result14 = result30;
                      } else {
                        var result14 = null;;
                      };
                    }
                    if (result14 !== null) {
                      if (input.substr(pos, 1) === "I") {
                        var result29 = "I";
                        pos += 1;
                      } else {
                        var result29 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"I\"");
                        }
                      }
                      if (result29 !== null) {
                        var result15 = result29;
                      } else {
                        if (input.substr(pos, 1) === "i") {
                          var result28 = "i";
                          pos += 1;
                        } else {
                          var result28 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"i\"");
                          }
                        }
                        if (result28 !== null) {
                          var result15 = result28;
                        } else {
                          var result15 = null;;
                        };
                      }
                      if (result15 !== null) {
                        if (input.substr(pos, 1) === "L") {
                          var result27 = "L";
                          pos += 1;
                        } else {
                          var result27 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"L\"");
                          }
                        }
                        if (result27 !== null) {
                          var result16 = result27;
                        } else {
                          if (input.substr(pos, 1) === "l") {
                            var result26 = "l";
                            pos += 1;
                          } else {
                            var result26 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"l\"");
                            }
                          }
                          if (result26 !== null) {
                            var result16 = result26;
                          } else {
                            var result16 = null;;
                          };
                        }
                        if (result16 !== null) {
                          if (input.substr(pos, 1) === "E") {
                            var result25 = "E";
                            pos += 1;
                          } else {
                            var result25 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"E\"");
                            }
                          }
                          if (result25 !== null) {
                            var result17 = result25;
                          } else {
                            if (input.substr(pos, 1) === "e") {
                              var result24 = "e";
                              pos += 1;
                            } else {
                              var result24 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"e\"");
                              }
                            }
                            if (result24 !== null) {
                              var result17 = result24;
                            } else {
                              var result17 = null;;
                            };
                          }
                          if (result17 !== null) {
                            if (input.substr(pos, 1) === "N") {
                              var result23 = "N";
                              pos += 1;
                            } else {
                              var result23 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"N\"");
                              }
                            }
                            if (result23 !== null) {
                              var result18 = result23;
                            } else {
                              if (input.substr(pos, 1) === "n") {
                                var result22 = "n";
                                pos += 1;
                              } else {
                                var result22 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\"n\"");
                                }
                              }
                              if (result22 !== null) {
                                var result18 = result22;
                              } else {
                                var result18 = null;;
                              };
                            }
                            if (result18 !== null) {
                              if (input.substr(pos, 1) === "T") {
                                var result21 = "T";
                                pos += 1;
                              } else {
                                var result21 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\"T\"");
                                }
                              }
                              if (result21 !== null) {
                                var result19 = result21;
                              } else {
                                if (input.substr(pos, 1) === "t") {
                                  var result20 = "t";
                                  pos += 1;
                                } else {
                                  var result20 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\"t\"");
                                  }
                                }
                                if (result20 !== null) {
                                  var result19 = result20;
                                } else {
                                  var result19 = null;;
                                };
                              }
                              if (result19 !== null) {
                                var result13 = [result14, result15, result16, result17, result18, result19];
                              } else {
                                var result13 = null;
                                pos = savedPos2;
                              }
                            } else {
                              var result13 = null;
                              pos = savedPos2;
                            }
                          } else {
                            var result13 = null;
                            pos = savedPos2;
                          }
                        } else {
                          var result13 = null;
                          pos = savedPos2;
                        }
                      } else {
                        var result13 = null;
                        pos = savedPos2;
                      }
                    } else {
                      var result13 = null;
                      pos = savedPos2;
                    }
                    var result9 = result13 !== null ? result13 : '';
                    if (result9 !== null) {
                      var result10 = [];
                      var result12 = parse_WS();
                      while (result12 !== null) {
                        result10.push(result12);
                        var result12 = parse_WS();
                      }
                      if (result10 !== null) {
                        var result11 = parse_GraphRefAll();
                        if (result11 !== null) {
                          var result1 = [result3, result4, result5, result6, result7, result8, result9, result10, result11];
                        } else {
                          var result1 = null;
                          pos = savedPos1;
                        }
                      } else {
                        var result1 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(ref) {
                var query = {};
                query.kind = 'clear';
                query.token = 'executableunit'
                query.destinyGraph = ref;
                
                return query;
          })(result1[8])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[33] Clear");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_Drop() {
        var cacheKey = 'Drop@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "D") {
          var result39 = "D";
          pos += 1;
        } else {
          var result39 = null;
          if (reportMatchFailures) {
            matchFailed("\"D\"");
          }
        }
        if (result39 !== null) {
          var result3 = result39;
        } else {
          if (input.substr(pos, 1) === "d") {
            var result38 = "d";
            pos += 1;
          } else {
            var result38 = null;
            if (reportMatchFailures) {
              matchFailed("\"d\"");
            }
          }
          if (result38 !== null) {
            var result3 = result38;
          } else {
            var result3 = null;;
          };
        }
        if (result3 !== null) {
          if (input.substr(pos, 1) === "R") {
            var result37 = "R";
            pos += 1;
          } else {
            var result37 = null;
            if (reportMatchFailures) {
              matchFailed("\"R\"");
            }
          }
          if (result37 !== null) {
            var result4 = result37;
          } else {
            if (input.substr(pos, 1) === "r") {
              var result36 = "r";
              pos += 1;
            } else {
              var result36 = null;
              if (reportMatchFailures) {
                matchFailed("\"r\"");
              }
            }
            if (result36 !== null) {
              var result4 = result36;
            } else {
              var result4 = null;;
            };
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === "O") {
              var result35 = "O";
              pos += 1;
            } else {
              var result35 = null;
              if (reportMatchFailures) {
                matchFailed("\"O\"");
              }
            }
            if (result35 !== null) {
              var result5 = result35;
            } else {
              if (input.substr(pos, 1) === "o") {
                var result34 = "o";
                pos += 1;
              } else {
                var result34 = null;
                if (reportMatchFailures) {
                  matchFailed("\"o\"");
                }
              }
              if (result34 !== null) {
                var result5 = result34;
              } else {
                var result5 = null;;
              };
            }
            if (result5 !== null) {
              if (input.substr(pos, 1) === "P") {
                var result33 = "P";
                pos += 1;
              } else {
                var result33 = null;
                if (reportMatchFailures) {
                  matchFailed("\"P\"");
                }
              }
              if (result33 !== null) {
                var result6 = result33;
              } else {
                if (input.substr(pos, 1) === "p") {
                  var result32 = "p";
                  pos += 1;
                } else {
                  var result32 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"p\"");
                  }
                }
                if (result32 !== null) {
                  var result6 = result32;
                } else {
                  var result6 = null;;
                };
              }
              if (result6 !== null) {
                var result7 = [];
                var result31 = parse_WS();
                while (result31 !== null) {
                  result7.push(result31);
                  var result31 = parse_WS();
                }
                if (result7 !== null) {
                  var savedPos2 = pos;
                  if (input.substr(pos, 1) === "S") {
                    var result30 = "S";
                    pos += 1;
                  } else {
                    var result30 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"S\"");
                    }
                  }
                  if (result30 !== null) {
                    var result13 = result30;
                  } else {
                    if (input.substr(pos, 1) === "s") {
                      var result29 = "s";
                      pos += 1;
                    } else {
                      var result29 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"s\"");
                      }
                    }
                    if (result29 !== null) {
                      var result13 = result29;
                    } else {
                      var result13 = null;;
                    };
                  }
                  if (result13 !== null) {
                    if (input.substr(pos, 1) === "I") {
                      var result28 = "I";
                      pos += 1;
                    } else {
                      var result28 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"I\"");
                      }
                    }
                    if (result28 !== null) {
                      var result14 = result28;
                    } else {
                      if (input.substr(pos, 1) === "i") {
                        var result27 = "i";
                        pos += 1;
                      } else {
                        var result27 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"i\"");
                        }
                      }
                      if (result27 !== null) {
                        var result14 = result27;
                      } else {
                        var result14 = null;;
                      };
                    }
                    if (result14 !== null) {
                      if (input.substr(pos, 1) === "L") {
                        var result26 = "L";
                        pos += 1;
                      } else {
                        var result26 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"L\"");
                        }
                      }
                      if (result26 !== null) {
                        var result15 = result26;
                      } else {
                        if (input.substr(pos, 1) === "l") {
                          var result25 = "l";
                          pos += 1;
                        } else {
                          var result25 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"l\"");
                          }
                        }
                        if (result25 !== null) {
                          var result15 = result25;
                        } else {
                          var result15 = null;;
                        };
                      }
                      if (result15 !== null) {
                        if (input.substr(pos, 1) === "E") {
                          var result24 = "E";
                          pos += 1;
                        } else {
                          var result24 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"E\"");
                          }
                        }
                        if (result24 !== null) {
                          var result16 = result24;
                        } else {
                          if (input.substr(pos, 1) === "e") {
                            var result23 = "e";
                            pos += 1;
                          } else {
                            var result23 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"e\"");
                            }
                          }
                          if (result23 !== null) {
                            var result16 = result23;
                          } else {
                            var result16 = null;;
                          };
                        }
                        if (result16 !== null) {
                          if (input.substr(pos, 1) === "N") {
                            var result22 = "N";
                            pos += 1;
                          } else {
                            var result22 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"N\"");
                            }
                          }
                          if (result22 !== null) {
                            var result17 = result22;
                          } else {
                            if (input.substr(pos, 1) === "n") {
                              var result21 = "n";
                              pos += 1;
                            } else {
                              var result21 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"n\"");
                              }
                            }
                            if (result21 !== null) {
                              var result17 = result21;
                            } else {
                              var result17 = null;;
                            };
                          }
                          if (result17 !== null) {
                            if (input.substr(pos, 1) === "T") {
                              var result20 = "T";
                              pos += 1;
                            } else {
                              var result20 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"T\"");
                              }
                            }
                            if (result20 !== null) {
                              var result18 = result20;
                            } else {
                              if (input.substr(pos, 1) === "t") {
                                var result19 = "t";
                                pos += 1;
                              } else {
                                var result19 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\"t\"");
                                }
                              }
                              if (result19 !== null) {
                                var result18 = result19;
                              } else {
                                var result18 = null;;
                              };
                            }
                            if (result18 !== null) {
                              var result12 = [result13, result14, result15, result16, result17, result18];
                            } else {
                              var result12 = null;
                              pos = savedPos2;
                            }
                          } else {
                            var result12 = null;
                            pos = savedPos2;
                          }
                        } else {
                          var result12 = null;
                          pos = savedPos2;
                        }
                      } else {
                        var result12 = null;
                        pos = savedPos2;
                      }
                    } else {
                      var result12 = null;
                      pos = savedPos2;
                    }
                  } else {
                    var result12 = null;
                    pos = savedPos2;
                  }
                  var result8 = result12 !== null ? result12 : '';
                  if (result8 !== null) {
                    var result9 = [];
                    var result11 = parse_WS();
                    while (result11 !== null) {
                      result9.push(result11);
                      var result11 = parse_WS();
                    }
                    if (result9 !== null) {
                      var result10 = parse_GraphRefAll();
                      if (result10 !== null) {
                        var result1 = [result3, result4, result5, result6, result7, result8, result9, result10];
                      } else {
                        var result1 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(ref) {
                var query = {};
                query.kind = 'drop';
                query.token = 'executableunit'
                query.destinyGraph = ref;
                
                return query;
          })(result1[7])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[34] Drop");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_Create() {
        var cacheKey = 'Create@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "C") {
          var result45 = "C";
          pos += 1;
        } else {
          var result45 = null;
          if (reportMatchFailures) {
            matchFailed("\"C\"");
          }
        }
        if (result45 !== null) {
          var result3 = result45;
        } else {
          if (input.substr(pos, 1) === "c") {
            var result44 = "c";
            pos += 1;
          } else {
            var result44 = null;
            if (reportMatchFailures) {
              matchFailed("\"c\"");
            }
          }
          if (result44 !== null) {
            var result3 = result44;
          } else {
            var result3 = null;;
          };
        }
        if (result3 !== null) {
          if (input.substr(pos, 1) === "R") {
            var result43 = "R";
            pos += 1;
          } else {
            var result43 = null;
            if (reportMatchFailures) {
              matchFailed("\"R\"");
            }
          }
          if (result43 !== null) {
            var result4 = result43;
          } else {
            if (input.substr(pos, 1) === "r") {
              var result42 = "r";
              pos += 1;
            } else {
              var result42 = null;
              if (reportMatchFailures) {
                matchFailed("\"r\"");
              }
            }
            if (result42 !== null) {
              var result4 = result42;
            } else {
              var result4 = null;;
            };
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === "E") {
              var result41 = "E";
              pos += 1;
            } else {
              var result41 = null;
              if (reportMatchFailures) {
                matchFailed("\"E\"");
              }
            }
            if (result41 !== null) {
              var result5 = result41;
            } else {
              if (input.substr(pos, 1) === "e") {
                var result40 = "e";
                pos += 1;
              } else {
                var result40 = null;
                if (reportMatchFailures) {
                  matchFailed("\"e\"");
                }
              }
              if (result40 !== null) {
                var result5 = result40;
              } else {
                var result5 = null;;
              };
            }
            if (result5 !== null) {
              if (input.substr(pos, 1) === "A") {
                var result39 = "A";
                pos += 1;
              } else {
                var result39 = null;
                if (reportMatchFailures) {
                  matchFailed("\"A\"");
                }
              }
              if (result39 !== null) {
                var result6 = result39;
              } else {
                if (input.substr(pos, 1) === "a") {
                  var result38 = "a";
                  pos += 1;
                } else {
                  var result38 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"a\"");
                  }
                }
                if (result38 !== null) {
                  var result6 = result38;
                } else {
                  var result6 = null;;
                };
              }
              if (result6 !== null) {
                if (input.substr(pos, 1) === "T") {
                  var result37 = "T";
                  pos += 1;
                } else {
                  var result37 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"T\"");
                  }
                }
                if (result37 !== null) {
                  var result7 = result37;
                } else {
                  if (input.substr(pos, 1) === "t") {
                    var result36 = "t";
                    pos += 1;
                  } else {
                    var result36 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"t\"");
                    }
                  }
                  if (result36 !== null) {
                    var result7 = result36;
                  } else {
                    var result7 = null;;
                  };
                }
                if (result7 !== null) {
                  if (input.substr(pos, 1) === "E") {
                    var result35 = "E";
                    pos += 1;
                  } else {
                    var result35 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"E\"");
                    }
                  }
                  if (result35 !== null) {
                    var result8 = result35;
                  } else {
                    if (input.substr(pos, 1) === "e") {
                      var result34 = "e";
                      pos += 1;
                    } else {
                      var result34 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"e\"");
                      }
                    }
                    if (result34 !== null) {
                      var result8 = result34;
                    } else {
                      var result8 = null;;
                    };
                  }
                  if (result8 !== null) {
                    var result9 = [];
                    var result33 = parse_WS();
                    while (result33 !== null) {
                      result9.push(result33);
                      var result33 = parse_WS();
                    }
                    if (result9 !== null) {
                      var savedPos2 = pos;
                      if (input.substr(pos, 1) === "S") {
                        var result32 = "S";
                        pos += 1;
                      } else {
                        var result32 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"S\"");
                        }
                      }
                      if (result32 !== null) {
                        var result15 = result32;
                      } else {
                        if (input.substr(pos, 1) === "s") {
                          var result31 = "s";
                          pos += 1;
                        } else {
                          var result31 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"s\"");
                          }
                        }
                        if (result31 !== null) {
                          var result15 = result31;
                        } else {
                          var result15 = null;;
                        };
                      }
                      if (result15 !== null) {
                        if (input.substr(pos, 1) === "I") {
                          var result30 = "I";
                          pos += 1;
                        } else {
                          var result30 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"I\"");
                          }
                        }
                        if (result30 !== null) {
                          var result16 = result30;
                        } else {
                          if (input.substr(pos, 1) === "i") {
                            var result29 = "i";
                            pos += 1;
                          } else {
                            var result29 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"i\"");
                            }
                          }
                          if (result29 !== null) {
                            var result16 = result29;
                          } else {
                            var result16 = null;;
                          };
                        }
                        if (result16 !== null) {
                          if (input.substr(pos, 1) === "L") {
                            var result28 = "L";
                            pos += 1;
                          } else {
                            var result28 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"L\"");
                            }
                          }
                          if (result28 !== null) {
                            var result17 = result28;
                          } else {
                            if (input.substr(pos, 1) === "l") {
                              var result27 = "l";
                              pos += 1;
                            } else {
                              var result27 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"l\"");
                              }
                            }
                            if (result27 !== null) {
                              var result17 = result27;
                            } else {
                              var result17 = null;;
                            };
                          }
                          if (result17 !== null) {
                            if (input.substr(pos, 1) === "E") {
                              var result26 = "E";
                              pos += 1;
                            } else {
                              var result26 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"E\"");
                              }
                            }
                            if (result26 !== null) {
                              var result18 = result26;
                            } else {
                              if (input.substr(pos, 1) === "e") {
                                var result25 = "e";
                                pos += 1;
                              } else {
                                var result25 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\"e\"");
                                }
                              }
                              if (result25 !== null) {
                                var result18 = result25;
                              } else {
                                var result18 = null;;
                              };
                            }
                            if (result18 !== null) {
                              if (input.substr(pos, 1) === "N") {
                                var result24 = "N";
                                pos += 1;
                              } else {
                                var result24 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\"N\"");
                                }
                              }
                              if (result24 !== null) {
                                var result19 = result24;
                              } else {
                                if (input.substr(pos, 1) === "n") {
                                  var result23 = "n";
                                  pos += 1;
                                } else {
                                  var result23 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\"n\"");
                                  }
                                }
                                if (result23 !== null) {
                                  var result19 = result23;
                                } else {
                                  var result19 = null;;
                                };
                              }
                              if (result19 !== null) {
                                if (input.substr(pos, 1) === "T") {
                                  var result22 = "T";
                                  pos += 1;
                                } else {
                                  var result22 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\"T\"");
                                  }
                                }
                                if (result22 !== null) {
                                  var result20 = result22;
                                } else {
                                  if (input.substr(pos, 1) === "t") {
                                    var result21 = "t";
                                    pos += 1;
                                  } else {
                                    var result21 = null;
                                    if (reportMatchFailures) {
                                      matchFailed("\"t\"");
                                    }
                                  }
                                  if (result21 !== null) {
                                    var result20 = result21;
                                  } else {
                                    var result20 = null;;
                                  };
                                }
                                if (result20 !== null) {
                                  var result14 = [result15, result16, result17, result18, result19, result20];
                                } else {
                                  var result14 = null;
                                  pos = savedPos2;
                                }
                              } else {
                                var result14 = null;
                                pos = savedPos2;
                              }
                            } else {
                              var result14 = null;
                              pos = savedPos2;
                            }
                          } else {
                            var result14 = null;
                            pos = savedPos2;
                          }
                        } else {
                          var result14 = null;
                          pos = savedPos2;
                        }
                      } else {
                        var result14 = null;
                        pos = savedPos2;
                      }
                      var result10 = result14 !== null ? result14 : '';
                      if (result10 !== null) {
                        var result11 = [];
                        var result13 = parse_WS();
                        while (result13 !== null) {
                          result11.push(result13);
                          var result13 = parse_WS();
                        }
                        if (result11 !== null) {
                          var result12 = parse_GraphRef();
                          if (result12 !== null) {
                            var result1 = [result3, result4, result5, result6, result7, result8, result9, result10, result11, result12];
                          } else {
                            var result1 = null;
                            pos = savedPos1;
                          }
                        } else {
                          var result1 = null;
                          pos = savedPos1;
                        }
                      } else {
                        var result1 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(ref) {
                var query = {};
                query.kind = 'create';
                query.token = 'executableunit'
                query.destinyGraph = ref;
                
                return query;
          })(result1[9])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[35] Create");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_InsertData() {
        var cacheKey = 'InsertData@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "I") {
          var result37 = "I";
          pos += 1;
        } else {
          var result37 = null;
          if (reportMatchFailures) {
            matchFailed("\"I\"");
          }
        }
        if (result37 !== null) {
          var result3 = result37;
        } else {
          if (input.substr(pos, 1) === "i") {
            var result36 = "i";
            pos += 1;
          } else {
            var result36 = null;
            if (reportMatchFailures) {
              matchFailed("\"i\"");
            }
          }
          if (result36 !== null) {
            var result3 = result36;
          } else {
            var result3 = null;;
          };
        }
        if (result3 !== null) {
          if (input.substr(pos, 1) === "N") {
            var result35 = "N";
            pos += 1;
          } else {
            var result35 = null;
            if (reportMatchFailures) {
              matchFailed("\"N\"");
            }
          }
          if (result35 !== null) {
            var result4 = result35;
          } else {
            if (input.substr(pos, 1) === "n") {
              var result34 = "n";
              pos += 1;
            } else {
              var result34 = null;
              if (reportMatchFailures) {
                matchFailed("\"n\"");
              }
            }
            if (result34 !== null) {
              var result4 = result34;
            } else {
              var result4 = null;;
            };
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === "S") {
              var result33 = "S";
              pos += 1;
            } else {
              var result33 = null;
              if (reportMatchFailures) {
                matchFailed("\"S\"");
              }
            }
            if (result33 !== null) {
              var result5 = result33;
            } else {
              if (input.substr(pos, 1) === "s") {
                var result32 = "s";
                pos += 1;
              } else {
                var result32 = null;
                if (reportMatchFailures) {
                  matchFailed("\"s\"");
                }
              }
              if (result32 !== null) {
                var result5 = result32;
              } else {
                var result5 = null;;
              };
            }
            if (result5 !== null) {
              if (input.substr(pos, 1) === "E") {
                var result31 = "E";
                pos += 1;
              } else {
                var result31 = null;
                if (reportMatchFailures) {
                  matchFailed("\"E\"");
                }
              }
              if (result31 !== null) {
                var result6 = result31;
              } else {
                if (input.substr(pos, 1) === "e") {
                  var result30 = "e";
                  pos += 1;
                } else {
                  var result30 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"e\"");
                  }
                }
                if (result30 !== null) {
                  var result6 = result30;
                } else {
                  var result6 = null;;
                };
              }
              if (result6 !== null) {
                if (input.substr(pos, 1) === "R") {
                  var result29 = "R";
                  pos += 1;
                } else {
                  var result29 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"R\"");
                  }
                }
                if (result29 !== null) {
                  var result7 = result29;
                } else {
                  if (input.substr(pos, 1) === "r") {
                    var result28 = "r";
                    pos += 1;
                  } else {
                    var result28 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"r\"");
                    }
                  }
                  if (result28 !== null) {
                    var result7 = result28;
                  } else {
                    var result7 = null;;
                  };
                }
                if (result7 !== null) {
                  if (input.substr(pos, 1) === "T") {
                    var result27 = "T";
                    pos += 1;
                  } else {
                    var result27 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"T\"");
                    }
                  }
                  if (result27 !== null) {
                    var result8 = result27;
                  } else {
                    if (input.substr(pos, 1) === "t") {
                      var result26 = "t";
                      pos += 1;
                    } else {
                      var result26 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"t\"");
                      }
                    }
                    if (result26 !== null) {
                      var result8 = result26;
                    } else {
                      var result8 = null;;
                    };
                  }
                  if (result8 !== null) {
                    var result9 = [];
                    var result25 = parse_WS();
                    while (result25 !== null) {
                      result9.push(result25);
                      var result25 = parse_WS();
                    }
                    if (result9 !== null) {
                      if (input.substr(pos, 1) === "D") {
                        var result24 = "D";
                        pos += 1;
                      } else {
                        var result24 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"D\"");
                        }
                      }
                      if (result24 !== null) {
                        var result10 = result24;
                      } else {
                        if (input.substr(pos, 1) === "d") {
                          var result23 = "d";
                          pos += 1;
                        } else {
                          var result23 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"d\"");
                          }
                        }
                        if (result23 !== null) {
                          var result10 = result23;
                        } else {
                          var result10 = null;;
                        };
                      }
                      if (result10 !== null) {
                        if (input.substr(pos, 1) === "A") {
                          var result22 = "A";
                          pos += 1;
                        } else {
                          var result22 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"A\"");
                          }
                        }
                        if (result22 !== null) {
                          var result11 = result22;
                        } else {
                          if (input.substr(pos, 1) === "a") {
                            var result21 = "a";
                            pos += 1;
                          } else {
                            var result21 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"a\"");
                            }
                          }
                          if (result21 !== null) {
                            var result11 = result21;
                          } else {
                            var result11 = null;;
                          };
                        }
                        if (result11 !== null) {
                          if (input.substr(pos, 1) === "T") {
                            var result20 = "T";
                            pos += 1;
                          } else {
                            var result20 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"T\"");
                            }
                          }
                          if (result20 !== null) {
                            var result12 = result20;
                          } else {
                            if (input.substr(pos, 1) === "t") {
                              var result19 = "t";
                              pos += 1;
                            } else {
                              var result19 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"t\"");
                              }
                            }
                            if (result19 !== null) {
                              var result12 = result19;
                            } else {
                              var result12 = null;;
                            };
                          }
                          if (result12 !== null) {
                            if (input.substr(pos, 1) === "A") {
                              var result18 = "A";
                              pos += 1;
                            } else {
                              var result18 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"A\"");
                              }
                            }
                            if (result18 !== null) {
                              var result13 = result18;
                            } else {
                              if (input.substr(pos, 1) === "a") {
                                var result17 = "a";
                                pos += 1;
                              } else {
                                var result17 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\"a\"");
                                }
                              }
                              if (result17 !== null) {
                                var result13 = result17;
                              } else {
                                var result13 = null;;
                              };
                            }
                            if (result13 !== null) {
                              var result14 = [];
                              var result16 = parse_WS();
                              while (result16 !== null) {
                                result14.push(result16);
                                var result16 = parse_WS();
                              }
                              if (result14 !== null) {
                                var result15 = parse_QuadData();
                                if (result15 !== null) {
                                  var result1 = [result3, result4, result5, result6, result7, result8, result9, result10, result11, result12, result13, result14, result15];
                                } else {
                                  var result1 = null;
                                  pos = savedPos1;
                                }
                              } else {
                                var result1 = null;
                                pos = savedPos1;
                              }
                            } else {
                              var result1 = null;
                              pos = savedPos1;
                            }
                          } else {
                            var result1 = null;
                            pos = savedPos1;
                          }
                        } else {
                          var result1 = null;
                          pos = savedPos1;
                        }
                      } else {
                        var result1 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(qs) {
                var query = {};
                query.kind = 'insertdata';
                query.token = 'executableunit'
                query.quads = qs;
          
                return query;
          })(result1[12])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[36] InsertData");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_DeleteData() {
        var cacheKey = 'DeleteData@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "D") {
          var result35 = "D";
          pos += 1;
        } else {
          var result35 = null;
          if (reportMatchFailures) {
            matchFailed("\"D\"");
          }
        }
        if (result35 !== null) {
          var result3 = result35;
        } else {
          if (input.substr(pos, 1) === "d") {
            var result34 = "d";
            pos += 1;
          } else {
            var result34 = null;
            if (reportMatchFailures) {
              matchFailed("\"d\"");
            }
          }
          if (result34 !== null) {
            var result3 = result34;
          } else {
            var result3 = null;;
          };
        }
        if (result3 !== null) {
          if (input.substr(pos, 1) === "E") {
            var result33 = "E";
            pos += 1;
          } else {
            var result33 = null;
            if (reportMatchFailures) {
              matchFailed("\"E\"");
            }
          }
          if (result33 !== null) {
            var result4 = result33;
          } else {
            if (input.substr(pos, 1) === "e") {
              var result32 = "e";
              pos += 1;
            } else {
              var result32 = null;
              if (reportMatchFailures) {
                matchFailed("\"e\"");
              }
            }
            if (result32 !== null) {
              var result4 = result32;
            } else {
              var result4 = null;;
            };
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === "L") {
              var result31 = "L";
              pos += 1;
            } else {
              var result31 = null;
              if (reportMatchFailures) {
                matchFailed("\"L\"");
              }
            }
            if (result31 !== null) {
              var result5 = result31;
            } else {
              if (input.substr(pos, 1) === "l") {
                var result30 = "l";
                pos += 1;
              } else {
                var result30 = null;
                if (reportMatchFailures) {
                  matchFailed("\"l\"");
                }
              }
              if (result30 !== null) {
                var result5 = result30;
              } else {
                var result5 = null;;
              };
            }
            if (result5 !== null) {
              if (input.substr(pos, 1) === "E") {
                var result29 = "E";
                pos += 1;
              } else {
                var result29 = null;
                if (reportMatchFailures) {
                  matchFailed("\"E\"");
                }
              }
              if (result29 !== null) {
                var result6 = result29;
              } else {
                if (input.substr(pos, 1) === "e") {
                  var result28 = "e";
                  pos += 1;
                } else {
                  var result28 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"e\"");
                  }
                }
                if (result28 !== null) {
                  var result6 = result28;
                } else {
                  var result6 = null;;
                };
              }
              if (result6 !== null) {
                if (input.substr(pos, 1) === "T") {
                  var result27 = "T";
                  pos += 1;
                } else {
                  var result27 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"T\"");
                  }
                }
                if (result27 !== null) {
                  var result7 = result27;
                } else {
                  if (input.substr(pos, 1) === "t") {
                    var result26 = "t";
                    pos += 1;
                  } else {
                    var result26 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"t\"");
                    }
                  }
                  if (result26 !== null) {
                    var result7 = result26;
                  } else {
                    var result7 = null;;
                  };
                }
                if (result7 !== null) {
                  if (input.substr(pos, 1) === "E") {
                    var result25 = "E";
                    pos += 1;
                  } else {
                    var result25 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"E\"");
                    }
                  }
                  if (result25 !== null) {
                    var result8 = result25;
                  } else {
                    if (input.substr(pos, 1) === "e") {
                      var result24 = "e";
                      pos += 1;
                    } else {
                      var result24 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"e\"");
                      }
                    }
                    if (result24 !== null) {
                      var result8 = result24;
                    } else {
                      var result8 = null;;
                    };
                  }
                  if (result8 !== null) {
                    var result9 = [];
                    var result23 = parse_WS();
                    while (result23 !== null) {
                      result9.push(result23);
                      var result23 = parse_WS();
                    }
                    if (result9 !== null) {
                      if (input.substr(pos, 1) === "D") {
                        var result22 = "D";
                        pos += 1;
                      } else {
                        var result22 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"D\"");
                        }
                      }
                      if (result22 !== null) {
                        var result10 = result22;
                      } else {
                        if (input.substr(pos, 1) === "d") {
                          var result21 = "d";
                          pos += 1;
                        } else {
                          var result21 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"d\"");
                          }
                        }
                        if (result21 !== null) {
                          var result10 = result21;
                        } else {
                          var result10 = null;;
                        };
                      }
                      if (result10 !== null) {
                        if (input.substr(pos, 1) === "A") {
                          var result20 = "A";
                          pos += 1;
                        } else {
                          var result20 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"A\"");
                          }
                        }
                        if (result20 !== null) {
                          var result11 = result20;
                        } else {
                          if (input.substr(pos, 1) === "a") {
                            var result19 = "a";
                            pos += 1;
                          } else {
                            var result19 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"a\"");
                            }
                          }
                          if (result19 !== null) {
                            var result11 = result19;
                          } else {
                            var result11 = null;;
                          };
                        }
                        if (result11 !== null) {
                          if (input.substr(pos, 1) === "T") {
                            var result18 = "T";
                            pos += 1;
                          } else {
                            var result18 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"T\"");
                            }
                          }
                          if (result18 !== null) {
                            var result12 = result18;
                          } else {
                            if (input.substr(pos, 1) === "t") {
                              var result17 = "t";
                              pos += 1;
                            } else {
                              var result17 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"t\"");
                              }
                            }
                            if (result17 !== null) {
                              var result12 = result17;
                            } else {
                              var result12 = null;;
                            };
                          }
                          if (result12 !== null) {
                            if (input.substr(pos, 1) === "A") {
                              var result16 = "A";
                              pos += 1;
                            } else {
                              var result16 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"A\"");
                              }
                            }
                            if (result16 !== null) {
                              var result13 = result16;
                            } else {
                              if (input.substr(pos, 1) === "a") {
                                var result15 = "a";
                                pos += 1;
                              } else {
                                var result15 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\"a\"");
                                }
                              }
                              if (result15 !== null) {
                                var result13 = result15;
                              } else {
                                var result13 = null;;
                              };
                            }
                            if (result13 !== null) {
                              var result14 = parse_QuadData();
                              if (result14 !== null) {
                                var result1 = [result3, result4, result5, result6, result7, result8, result9, result10, result11, result12, result13, result14];
                              } else {
                                var result1 = null;
                                pos = savedPos1;
                              }
                            } else {
                              var result1 = null;
                              pos = savedPos1;
                            }
                          } else {
                            var result1 = null;
                            pos = savedPos1;
                          }
                        } else {
                          var result1 = null;
                          pos = savedPos1;
                        }
                      } else {
                        var result1 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(qs) {
                var query = {};
                query.kind = 'deletedata';
                query.token = 'executableunit'
                query.quads = qs;
          
                return query;
          })(result1[11])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[37] DeleteData");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_DeleteWhere() {
        var cacheKey = 'DeleteWhere@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "D") {
          var result40 = "D";
          pos += 1;
        } else {
          var result40 = null;
          if (reportMatchFailures) {
            matchFailed("\"D\"");
          }
        }
        if (result40 !== null) {
          var result3 = result40;
        } else {
          if (input.substr(pos, 1) === "d") {
            var result39 = "d";
            pos += 1;
          } else {
            var result39 = null;
            if (reportMatchFailures) {
              matchFailed("\"d\"");
            }
          }
          if (result39 !== null) {
            var result3 = result39;
          } else {
            var result3 = null;;
          };
        }
        if (result3 !== null) {
          if (input.substr(pos, 1) === "E") {
            var result38 = "E";
            pos += 1;
          } else {
            var result38 = null;
            if (reportMatchFailures) {
              matchFailed("\"E\"");
            }
          }
          if (result38 !== null) {
            var result4 = result38;
          } else {
            if (input.substr(pos, 1) === "e") {
              var result37 = "e";
              pos += 1;
            } else {
              var result37 = null;
              if (reportMatchFailures) {
                matchFailed("\"e\"");
              }
            }
            if (result37 !== null) {
              var result4 = result37;
            } else {
              var result4 = null;;
            };
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === "L") {
              var result36 = "L";
              pos += 1;
            } else {
              var result36 = null;
              if (reportMatchFailures) {
                matchFailed("\"L\"");
              }
            }
            if (result36 !== null) {
              var result5 = result36;
            } else {
              if (input.substr(pos, 1) === "l") {
                var result35 = "l";
                pos += 1;
              } else {
                var result35 = null;
                if (reportMatchFailures) {
                  matchFailed("\"l\"");
                }
              }
              if (result35 !== null) {
                var result5 = result35;
              } else {
                var result5 = null;;
              };
            }
            if (result5 !== null) {
              if (input.substr(pos, 1) === "E") {
                var result34 = "E";
                pos += 1;
              } else {
                var result34 = null;
                if (reportMatchFailures) {
                  matchFailed("\"E\"");
                }
              }
              if (result34 !== null) {
                var result6 = result34;
              } else {
                if (input.substr(pos, 1) === "e") {
                  var result33 = "e";
                  pos += 1;
                } else {
                  var result33 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"e\"");
                  }
                }
                if (result33 !== null) {
                  var result6 = result33;
                } else {
                  var result6 = null;;
                };
              }
              if (result6 !== null) {
                if (input.substr(pos, 1) === "T") {
                  var result32 = "T";
                  pos += 1;
                } else {
                  var result32 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"T\"");
                  }
                }
                if (result32 !== null) {
                  var result7 = result32;
                } else {
                  if (input.substr(pos, 1) === "t") {
                    var result31 = "t";
                    pos += 1;
                  } else {
                    var result31 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"t\"");
                    }
                  }
                  if (result31 !== null) {
                    var result7 = result31;
                  } else {
                    var result7 = null;;
                  };
                }
                if (result7 !== null) {
                  if (input.substr(pos, 1) === "E") {
                    var result30 = "E";
                    pos += 1;
                  } else {
                    var result30 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"E\"");
                    }
                  }
                  if (result30 !== null) {
                    var result8 = result30;
                  } else {
                    if (input.substr(pos, 1) === "e") {
                      var result29 = "e";
                      pos += 1;
                    } else {
                      var result29 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"e\"");
                      }
                    }
                    if (result29 !== null) {
                      var result8 = result29;
                    } else {
                      var result8 = null;;
                    };
                  }
                  if (result8 !== null) {
                    var result9 = [];
                    var result28 = parse_WS();
                    while (result28 !== null) {
                      result9.push(result28);
                      var result28 = parse_WS();
                    }
                    if (result9 !== null) {
                      if (input.substr(pos, 1) === "W") {
                        var result27 = "W";
                        pos += 1;
                      } else {
                        var result27 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"W\"");
                        }
                      }
                      if (result27 !== null) {
                        var result10 = result27;
                      } else {
                        if (input.substr(pos, 1) === "w") {
                          var result26 = "w";
                          pos += 1;
                        } else {
                          var result26 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"w\"");
                          }
                        }
                        if (result26 !== null) {
                          var result10 = result26;
                        } else {
                          var result10 = null;;
                        };
                      }
                      if (result10 !== null) {
                        if (input.substr(pos, 1) === "H") {
                          var result25 = "H";
                          pos += 1;
                        } else {
                          var result25 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"H\"");
                          }
                        }
                        if (result25 !== null) {
                          var result11 = result25;
                        } else {
                          if (input.substr(pos, 1) === "h") {
                            var result24 = "h";
                            pos += 1;
                          } else {
                            var result24 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"h\"");
                            }
                          }
                          if (result24 !== null) {
                            var result11 = result24;
                          } else {
                            var result11 = null;;
                          };
                        }
                        if (result11 !== null) {
                          if (input.substr(pos, 1) === "E") {
                            var result23 = "E";
                            pos += 1;
                          } else {
                            var result23 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"E\"");
                            }
                          }
                          if (result23 !== null) {
                            var result12 = result23;
                          } else {
                            if (input.substr(pos, 1) === "e") {
                              var result22 = "e";
                              pos += 1;
                            } else {
                              var result22 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"e\"");
                              }
                            }
                            if (result22 !== null) {
                              var result12 = result22;
                            } else {
                              var result12 = null;;
                            };
                          }
                          if (result12 !== null) {
                            if (input.substr(pos, 1) === "R") {
                              var result21 = "R";
                              pos += 1;
                            } else {
                              var result21 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"R\"");
                              }
                            }
                            if (result21 !== null) {
                              var result13 = result21;
                            } else {
                              if (input.substr(pos, 1) === "r") {
                                var result20 = "r";
                                pos += 1;
                              } else {
                                var result20 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\"r\"");
                                }
                              }
                              if (result20 !== null) {
                                var result13 = result20;
                              } else {
                                var result13 = null;;
                              };
                            }
                            if (result13 !== null) {
                              if (input.substr(pos, 1) === "E") {
                                var result19 = "E";
                                pos += 1;
                              } else {
                                var result19 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\"E\"");
                                }
                              }
                              if (result19 !== null) {
                                var result14 = result19;
                              } else {
                                if (input.substr(pos, 1) === "e") {
                                  var result18 = "e";
                                  pos += 1;
                                } else {
                                  var result18 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\"e\"");
                                  }
                                }
                                if (result18 !== null) {
                                  var result14 = result18;
                                } else {
                                  var result14 = null;;
                                };
                              }
                              if (result14 !== null) {
                                var result15 = [];
                                var result17 = parse_WS();
                                while (result17 !== null) {
                                  result15.push(result17);
                                  var result17 = parse_WS();
                                }
                                if (result15 !== null) {
                                  var result16 = parse_GroupGraphPattern();
                                  if (result16 !== null) {
                                    var result1 = [result3, result4, result5, result6, result7, result8, result9, result10, result11, result12, result13, result14, result15, result16];
                                  } else {
                                    var result1 = null;
                                    pos = savedPos1;
                                  }
                                } else {
                                  var result1 = null;
                                  pos = savedPos1;
                                }
                              } else {
                                var result1 = null;
                                pos = savedPos1;
                              }
                            } else {
                              var result1 = null;
                              pos = savedPos1;
                            }
                          } else {
                            var result1 = null;
                            pos = savedPos1;
                          }
                        } else {
                          var result1 = null;
                          pos = savedPos1;
                        }
                      } else {
                        var result1 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(p) {
                var query = {};
                query.kind = 'modify';
                query.pattern = p;
                query.with = null;
                query.using = null;
          
                var quads = [];
          
          
                var patternsCollection = p.patterns[0];
                if(patternsCollection.triplesContext == null && patternsCollection.patterns!=null) {
                    patternsCollection = patternsCollection.patterns[0].triplesContext;
                } else {
                    patternsCollection = patternsCollection.triplesContext;
                }
          
                for(var i=0; i<patternsCollection.length; i++) {
                    var quad = {};
                    var contextQuad = patternsCollection[i];
          
                    quad['subject'] = contextQuad['subject'];
                    quad['predicate'] = contextQuad['predicate'];
                    quad['object'] = contextQuad['object'];
                    quad['graph'] = contextQuad['graph'];
          
                    quads.push(quad);
                }
          
                query.delete = quads;
          
                return query;
          })(result1[13])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[38] DeleteWhere");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_Modify() {
        var cacheKey = 'Modify@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var savedPos3 = pos;
        if (input.substr(pos, 1) === "W") {
          var result55 = "W";
          pos += 1;
        } else {
          var result55 = null;
          if (reportMatchFailures) {
            matchFailed("\"W\"");
          }
        }
        if (result55 !== null) {
          var result41 = result55;
        } else {
          if (input.substr(pos, 1) === "w") {
            var result54 = "w";
            pos += 1;
          } else {
            var result54 = null;
            if (reportMatchFailures) {
              matchFailed("\"w\"");
            }
          }
          if (result54 !== null) {
            var result41 = result54;
          } else {
            var result41 = null;;
          };
        }
        if (result41 !== null) {
          if (input.substr(pos, 1) === "I") {
            var result53 = "I";
            pos += 1;
          } else {
            var result53 = null;
            if (reportMatchFailures) {
              matchFailed("\"I\"");
            }
          }
          if (result53 !== null) {
            var result42 = result53;
          } else {
            if (input.substr(pos, 1) === "i") {
              var result52 = "i";
              pos += 1;
            } else {
              var result52 = null;
              if (reportMatchFailures) {
                matchFailed("\"i\"");
              }
            }
            if (result52 !== null) {
              var result42 = result52;
            } else {
              var result42 = null;;
            };
          }
          if (result42 !== null) {
            if (input.substr(pos, 1) === "T") {
              var result51 = "T";
              pos += 1;
            } else {
              var result51 = null;
              if (reportMatchFailures) {
                matchFailed("\"T\"");
              }
            }
            if (result51 !== null) {
              var result43 = result51;
            } else {
              if (input.substr(pos, 1) === "t") {
                var result50 = "t";
                pos += 1;
              } else {
                var result50 = null;
                if (reportMatchFailures) {
                  matchFailed("\"t\"");
                }
              }
              if (result50 !== null) {
                var result43 = result50;
              } else {
                var result43 = null;;
              };
            }
            if (result43 !== null) {
              if (input.substr(pos, 1) === "H") {
                var result49 = "H";
                pos += 1;
              } else {
                var result49 = null;
                if (reportMatchFailures) {
                  matchFailed("\"H\"");
                }
              }
              if (result49 !== null) {
                var result44 = result49;
              } else {
                if (input.substr(pos, 1) === "h") {
                  var result48 = "h";
                  pos += 1;
                } else {
                  var result48 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"h\"");
                  }
                }
                if (result48 !== null) {
                  var result44 = result48;
                } else {
                  var result44 = null;;
                };
              }
              if (result44 !== null) {
                var result45 = [];
                var result47 = parse_WS();
                while (result47 !== null) {
                  result45.push(result47);
                  var result47 = parse_WS();
                }
                if (result45 !== null) {
                  var result46 = parse_IRIref();
                  if (result46 !== null) {
                    var result40 = [result41, result42, result43, result44, result45, result46];
                  } else {
                    var result40 = null;
                    pos = savedPos3;
                  }
                } else {
                  var result40 = null;
                  pos = savedPos3;
                }
              } else {
                var result40 = null;
                pos = savedPos3;
              }
            } else {
              var result40 = null;
              pos = savedPos3;
            }
          } else {
            var result40 = null;
            pos = savedPos3;
          }
        } else {
          var result40 = null;
          pos = savedPos3;
        }
        var result3 = result40 !== null ? result40 : '';
        if (result3 !== null) {
          var result4 = [];
          var result39 = parse_WS();
          while (result39 !== null) {
            result4.push(result39);
            var result39 = parse_WS();
          }
          if (result4 !== null) {
            var savedPos2 = pos;
            var result34 = parse_DeleteClause();
            if (result34 !== null) {
              var result35 = [];
              var result38 = parse_WS();
              while (result38 !== null) {
                result35.push(result38);
                var result38 = parse_WS();
              }
              if (result35 !== null) {
                var result37 = parse_InsertClause();
                var result36 = result37 !== null ? result37 : '';
                if (result36 !== null) {
                  var result33 = [result34, result35, result36];
                } else {
                  var result33 = null;
                  pos = savedPos2;
                }
              } else {
                var result33 = null;
                pos = savedPos2;
              }
            } else {
              var result33 = null;
              pos = savedPos2;
            }
            if (result33 !== null) {
              var result5 = result33;
            } else {
              var result32 = parse_InsertClause();
              if (result32 !== null) {
                var result5 = result32;
              } else {
                var result5 = null;;
              };
            }
            if (result5 !== null) {
              var result6 = [];
              var result31 = parse_WS();
              while (result31 !== null) {
                result6.push(result31);
                var result31 = parse_WS();
              }
              if (result6 !== null) {
                var result7 = [];
                var result30 = parse_UsingClause();
                while (result30 !== null) {
                  result7.push(result30);
                  var result30 = parse_UsingClause();
                }
                if (result7 !== null) {
                  var result8 = [];
                  var result29 = parse_WS();
                  while (result29 !== null) {
                    result8.push(result29);
                    var result29 = parse_WS();
                  }
                  if (result8 !== null) {
                    if (input.substr(pos, 1) === "W") {
                      var result28 = "W";
                      pos += 1;
                    } else {
                      var result28 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"W\"");
                      }
                    }
                    if (result28 !== null) {
                      var result9 = result28;
                    } else {
                      if (input.substr(pos, 1) === "w") {
                        var result27 = "w";
                        pos += 1;
                      } else {
                        var result27 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"w\"");
                        }
                      }
                      if (result27 !== null) {
                        var result9 = result27;
                      } else {
                        var result9 = null;;
                      };
                    }
                    if (result9 !== null) {
                      if (input.substr(pos, 1) === "H") {
                        var result26 = "H";
                        pos += 1;
                      } else {
                        var result26 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"H\"");
                        }
                      }
                      if (result26 !== null) {
                        var result10 = result26;
                      } else {
                        if (input.substr(pos, 1) === "h") {
                          var result25 = "h";
                          pos += 1;
                        } else {
                          var result25 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"h\"");
                          }
                        }
                        if (result25 !== null) {
                          var result10 = result25;
                        } else {
                          var result10 = null;;
                        };
                      }
                      if (result10 !== null) {
                        if (input.substr(pos, 1) === "E") {
                          var result24 = "E";
                          pos += 1;
                        } else {
                          var result24 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"E\"");
                          }
                        }
                        if (result24 !== null) {
                          var result11 = result24;
                        } else {
                          if (input.substr(pos, 1) === "e") {
                            var result23 = "e";
                            pos += 1;
                          } else {
                            var result23 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"e\"");
                            }
                          }
                          if (result23 !== null) {
                            var result11 = result23;
                          } else {
                            var result11 = null;;
                          };
                        }
                        if (result11 !== null) {
                          if (input.substr(pos, 1) === "R") {
                            var result22 = "R";
                            pos += 1;
                          } else {
                            var result22 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"R\"");
                            }
                          }
                          if (result22 !== null) {
                            var result12 = result22;
                          } else {
                            if (input.substr(pos, 1) === "r") {
                              var result21 = "r";
                              pos += 1;
                            } else {
                              var result21 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"r\"");
                              }
                            }
                            if (result21 !== null) {
                              var result12 = result21;
                            } else {
                              var result12 = null;;
                            };
                          }
                          if (result12 !== null) {
                            if (input.substr(pos, 1) === "E") {
                              var result20 = "E";
                              pos += 1;
                            } else {
                              var result20 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"E\"");
                              }
                            }
                            if (result20 !== null) {
                              var result13 = result20;
                            } else {
                              if (input.substr(pos, 1) === "e") {
                                var result19 = "e";
                                pos += 1;
                              } else {
                                var result19 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\"e\"");
                                }
                              }
                              if (result19 !== null) {
                                var result13 = result19;
                              } else {
                                var result13 = null;;
                              };
                            }
                            if (result13 !== null) {
                              var result14 = [];
                              var result18 = parse_WS();
                              while (result18 !== null) {
                                result14.push(result18);
                                var result18 = parse_WS();
                              }
                              if (result14 !== null) {
                                var result15 = parse_GroupGraphPattern();
                                if (result15 !== null) {
                                  var result16 = [];
                                  var result17 = parse_WS();
                                  while (result17 !== null) {
                                    result16.push(result17);
                                    var result17 = parse_WS();
                                  }
                                  if (result16 !== null) {
                                    var result1 = [result3, result4, result5, result6, result7, result8, result9, result10, result11, result12, result13, result14, result15, result16];
                                  } else {
                                    var result1 = null;
                                    pos = savedPos1;
                                  }
                                } else {
                                  var result1 = null;
                                  pos = savedPos1;
                                }
                              } else {
                                var result1 = null;
                                pos = savedPos1;
                              }
                            } else {
                              var result1 = null;
                              pos = savedPos1;
                            }
                          } else {
                            var result1 = null;
                            pos = savedPos1;
                          }
                        } else {
                          var result1 = null;
                          pos = savedPos1;
                        }
                      } else {
                        var result1 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(wg, dic, uc, p) {
                var query = {};
                query.kind = 'modify';
          
                if(wg != "") {
                    query.with = wg[5];
                } else {
                    query.with = null;
                }
          
          
                if(dic.length === 3 && dic[2] === '') {
                    query.delete = dic[0];
                    query.insert = null;
                } else if(dic.length === 3 && dic[0].length != null && dic[1].length != null && dic[2].length != null) {
                    query.delete = dic[0];
                    query.insert = dic[2];
                } else  {
                    query.insert = dic;
                    query.delete = null;
                }
          
                if(uc != '') {
                    query.using = uc;
                }
          
                query.pattern = p;
          
                return query;
          })(result1[0], result1[2], result1[4], result1[12])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[39] Modify");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_DeleteClause() {
        var cacheKey = 'DeleteClause@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "D") {
          var result21 = "D";
          pos += 1;
        } else {
          var result21 = null;
          if (reportMatchFailures) {
            matchFailed("\"D\"");
          }
        }
        if (result21 !== null) {
          var result3 = result21;
        } else {
          if (input.substr(pos, 1) === "d") {
            var result20 = "d";
            pos += 1;
          } else {
            var result20 = null;
            if (reportMatchFailures) {
              matchFailed("\"d\"");
            }
          }
          if (result20 !== null) {
            var result3 = result20;
          } else {
            var result3 = null;;
          };
        }
        if (result3 !== null) {
          if (input.substr(pos, 1) === "E") {
            var result19 = "E";
            pos += 1;
          } else {
            var result19 = null;
            if (reportMatchFailures) {
              matchFailed("\"E\"");
            }
          }
          if (result19 !== null) {
            var result4 = result19;
          } else {
            if (input.substr(pos, 1) === "e") {
              var result18 = "e";
              pos += 1;
            } else {
              var result18 = null;
              if (reportMatchFailures) {
                matchFailed("\"e\"");
              }
            }
            if (result18 !== null) {
              var result4 = result18;
            } else {
              var result4 = null;;
            };
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === "L") {
              var result17 = "L";
              pos += 1;
            } else {
              var result17 = null;
              if (reportMatchFailures) {
                matchFailed("\"L\"");
              }
            }
            if (result17 !== null) {
              var result5 = result17;
            } else {
              if (input.substr(pos, 1) === "l") {
                var result16 = "l";
                pos += 1;
              } else {
                var result16 = null;
                if (reportMatchFailures) {
                  matchFailed("\"l\"");
                }
              }
              if (result16 !== null) {
                var result5 = result16;
              } else {
                var result5 = null;;
              };
            }
            if (result5 !== null) {
              if (input.substr(pos, 1) === "E") {
                var result15 = "E";
                pos += 1;
              } else {
                var result15 = null;
                if (reportMatchFailures) {
                  matchFailed("\"E\"");
                }
              }
              if (result15 !== null) {
                var result6 = result15;
              } else {
                if (input.substr(pos, 1) === "e") {
                  var result14 = "e";
                  pos += 1;
                } else {
                  var result14 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"e\"");
                  }
                }
                if (result14 !== null) {
                  var result6 = result14;
                } else {
                  var result6 = null;;
                };
              }
              if (result6 !== null) {
                if (input.substr(pos, 1) === "T") {
                  var result13 = "T";
                  pos += 1;
                } else {
                  var result13 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"T\"");
                  }
                }
                if (result13 !== null) {
                  var result7 = result13;
                } else {
                  if (input.substr(pos, 1) === "t") {
                    var result12 = "t";
                    pos += 1;
                  } else {
                    var result12 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"t\"");
                    }
                  }
                  if (result12 !== null) {
                    var result7 = result12;
                  } else {
                    var result7 = null;;
                  };
                }
                if (result7 !== null) {
                  if (input.substr(pos, 1) === "E") {
                    var result11 = "E";
                    pos += 1;
                  } else {
                    var result11 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"E\"");
                    }
                  }
                  if (result11 !== null) {
                    var result8 = result11;
                  } else {
                    if (input.substr(pos, 1) === "e") {
                      var result10 = "e";
                      pos += 1;
                    } else {
                      var result10 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"e\"");
                      }
                    }
                    if (result10 !== null) {
                      var result8 = result10;
                    } else {
                      var result8 = null;;
                    };
                  }
                  if (result8 !== null) {
                    var result9 = parse_QuadPattern();
                    if (result9 !== null) {
                      var result1 = [result3, result4, result5, result6, result7, result8, result9];
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(q) {
                return q;
          })(result1[6])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[40] DeleteClause");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_InsertClause() {
        var cacheKey = 'InsertClause@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "I") {
          var result21 = "I";
          pos += 1;
        } else {
          var result21 = null;
          if (reportMatchFailures) {
            matchFailed("\"I\"");
          }
        }
        if (result21 !== null) {
          var result3 = result21;
        } else {
          if (input.substr(pos, 1) === "i") {
            var result20 = "i";
            pos += 1;
          } else {
            var result20 = null;
            if (reportMatchFailures) {
              matchFailed("\"i\"");
            }
          }
          if (result20 !== null) {
            var result3 = result20;
          } else {
            var result3 = null;;
          };
        }
        if (result3 !== null) {
          if (input.substr(pos, 1) === "N") {
            var result19 = "N";
            pos += 1;
          } else {
            var result19 = null;
            if (reportMatchFailures) {
              matchFailed("\"N\"");
            }
          }
          if (result19 !== null) {
            var result4 = result19;
          } else {
            if (input.substr(pos, 1) === "n") {
              var result18 = "n";
              pos += 1;
            } else {
              var result18 = null;
              if (reportMatchFailures) {
                matchFailed("\"n\"");
              }
            }
            if (result18 !== null) {
              var result4 = result18;
            } else {
              var result4 = null;;
            };
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === "S") {
              var result17 = "S";
              pos += 1;
            } else {
              var result17 = null;
              if (reportMatchFailures) {
                matchFailed("\"S\"");
              }
            }
            if (result17 !== null) {
              var result5 = result17;
            } else {
              if (input.substr(pos, 1) === "s") {
                var result16 = "s";
                pos += 1;
              } else {
                var result16 = null;
                if (reportMatchFailures) {
                  matchFailed("\"s\"");
                }
              }
              if (result16 !== null) {
                var result5 = result16;
              } else {
                var result5 = null;;
              };
            }
            if (result5 !== null) {
              if (input.substr(pos, 1) === "E") {
                var result15 = "E";
                pos += 1;
              } else {
                var result15 = null;
                if (reportMatchFailures) {
                  matchFailed("\"E\"");
                }
              }
              if (result15 !== null) {
                var result6 = result15;
              } else {
                if (input.substr(pos, 1) === "e") {
                  var result14 = "e";
                  pos += 1;
                } else {
                  var result14 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"e\"");
                  }
                }
                if (result14 !== null) {
                  var result6 = result14;
                } else {
                  var result6 = null;;
                };
              }
              if (result6 !== null) {
                if (input.substr(pos, 1) === "R") {
                  var result13 = "R";
                  pos += 1;
                } else {
                  var result13 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"R\"");
                  }
                }
                if (result13 !== null) {
                  var result7 = result13;
                } else {
                  if (input.substr(pos, 1) === "r") {
                    var result12 = "r";
                    pos += 1;
                  } else {
                    var result12 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"r\"");
                    }
                  }
                  if (result12 !== null) {
                    var result7 = result12;
                  } else {
                    var result7 = null;;
                  };
                }
                if (result7 !== null) {
                  if (input.substr(pos, 1) === "T") {
                    var result11 = "T";
                    pos += 1;
                  } else {
                    var result11 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"T\"");
                    }
                  }
                  if (result11 !== null) {
                    var result8 = result11;
                  } else {
                    if (input.substr(pos, 1) === "t") {
                      var result10 = "t";
                      pos += 1;
                    } else {
                      var result10 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"t\"");
                      }
                    }
                    if (result10 !== null) {
                      var result8 = result10;
                    } else {
                      var result8 = null;;
                    };
                  }
                  if (result8 !== null) {
                    var result9 = parse_QuadPattern();
                    if (result9 !== null) {
                      var result1 = [result3, result4, result5, result6, result7, result8, result9];
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(q) {
            return q;
          })(result1[6])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[41] InsertClause");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_UsingClause() {
        var cacheKey = 'UsingClause@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = [];
        var result42 = parse_WS();
        while (result42 !== null) {
          result3.push(result42);
          var result42 = parse_WS();
        }
        if (result3 !== null) {
          if (input.substr(pos, 1) === "U") {
            var result41 = "U";
            pos += 1;
          } else {
            var result41 = null;
            if (reportMatchFailures) {
              matchFailed("\"U\"");
            }
          }
          if (result41 !== null) {
            var result4 = result41;
          } else {
            if (input.substr(pos, 1) === "u") {
              var result40 = "u";
              pos += 1;
            } else {
              var result40 = null;
              if (reportMatchFailures) {
                matchFailed("\"u\"");
              }
            }
            if (result40 !== null) {
              var result4 = result40;
            } else {
              var result4 = null;;
            };
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === "S") {
              var result39 = "S";
              pos += 1;
            } else {
              var result39 = null;
              if (reportMatchFailures) {
                matchFailed("\"S\"");
              }
            }
            if (result39 !== null) {
              var result5 = result39;
            } else {
              if (input.substr(pos, 1) === "s") {
                var result38 = "s";
                pos += 1;
              } else {
                var result38 = null;
                if (reportMatchFailures) {
                  matchFailed("\"s\"");
                }
              }
              if (result38 !== null) {
                var result5 = result38;
              } else {
                var result5 = null;;
              };
            }
            if (result5 !== null) {
              if (input.substr(pos, 1) === "I") {
                var result37 = "I";
                pos += 1;
              } else {
                var result37 = null;
                if (reportMatchFailures) {
                  matchFailed("\"I\"");
                }
              }
              if (result37 !== null) {
                var result6 = result37;
              } else {
                if (input.substr(pos, 1) === "i") {
                  var result36 = "i";
                  pos += 1;
                } else {
                  var result36 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"i\"");
                  }
                }
                if (result36 !== null) {
                  var result6 = result36;
                } else {
                  var result6 = null;;
                };
              }
              if (result6 !== null) {
                if (input.substr(pos, 1) === "N") {
                  var result35 = "N";
                  pos += 1;
                } else {
                  var result35 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"N\"");
                  }
                }
                if (result35 !== null) {
                  var result7 = result35;
                } else {
                  if (input.substr(pos, 1) === "n") {
                    var result34 = "n";
                    pos += 1;
                  } else {
                    var result34 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"n\"");
                    }
                  }
                  if (result34 !== null) {
                    var result7 = result34;
                  } else {
                    var result7 = null;;
                  };
                }
                if (result7 !== null) {
                  if (input.substr(pos, 1) === "G") {
                    var result33 = "G";
                    pos += 1;
                  } else {
                    var result33 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"G\"");
                    }
                  }
                  if (result33 !== null) {
                    var result8 = result33;
                  } else {
                    if (input.substr(pos, 1) === "g") {
                      var result32 = "g";
                      pos += 1;
                    } else {
                      var result32 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"g\"");
                      }
                    }
                    if (result32 !== null) {
                      var result8 = result32;
                    } else {
                      var result8 = null;;
                    };
                  }
                  if (result8 !== null) {
                    var result9 = [];
                    var result31 = parse_WS();
                    while (result31 !== null) {
                      result9.push(result31);
                      var result31 = parse_WS();
                    }
                    if (result9 !== null) {
                      var result30 = parse_IRIref();
                      if (result30 !== null) {
                        var result10 = result30;
                      } else {
                        var savedPos2 = pos;
                        if (input.substr(pos, 1) === "N") {
                          var result29 = "N";
                          pos += 1;
                        } else {
                          var result29 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"N\"");
                          }
                        }
                        if (result29 !== null) {
                          var result12 = result29;
                        } else {
                          if (input.substr(pos, 1) === "n") {
                            var result28 = "n";
                            pos += 1;
                          } else {
                            var result28 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"n\"");
                            }
                          }
                          if (result28 !== null) {
                            var result12 = result28;
                          } else {
                            var result12 = null;;
                          };
                        }
                        if (result12 !== null) {
                          if (input.substr(pos, 1) === "A") {
                            var result27 = "A";
                            pos += 1;
                          } else {
                            var result27 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"A\"");
                            }
                          }
                          if (result27 !== null) {
                            var result13 = result27;
                          } else {
                            if (input.substr(pos, 1) === "a") {
                              var result26 = "a";
                              pos += 1;
                            } else {
                              var result26 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"a\"");
                              }
                            }
                            if (result26 !== null) {
                              var result13 = result26;
                            } else {
                              var result13 = null;;
                            };
                          }
                          if (result13 !== null) {
                            if (input.substr(pos, 1) === "M") {
                              var result25 = "M";
                              pos += 1;
                            } else {
                              var result25 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"M\"");
                              }
                            }
                            if (result25 !== null) {
                              var result14 = result25;
                            } else {
                              if (input.substr(pos, 1) === "m") {
                                var result24 = "m";
                                pos += 1;
                              } else {
                                var result24 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\"m\"");
                                }
                              }
                              if (result24 !== null) {
                                var result14 = result24;
                              } else {
                                var result14 = null;;
                              };
                            }
                            if (result14 !== null) {
                              if (input.substr(pos, 1) === "E") {
                                var result23 = "E";
                                pos += 1;
                              } else {
                                var result23 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\"E\"");
                                }
                              }
                              if (result23 !== null) {
                                var result15 = result23;
                              } else {
                                if (input.substr(pos, 1) === "e") {
                                  var result22 = "e";
                                  pos += 1;
                                } else {
                                  var result22 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\"e\"");
                                  }
                                }
                                if (result22 !== null) {
                                  var result15 = result22;
                                } else {
                                  var result15 = null;;
                                };
                              }
                              if (result15 !== null) {
                                if (input.substr(pos, 1) === "D") {
                                  var result21 = "D";
                                  pos += 1;
                                } else {
                                  var result21 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\"D\"");
                                  }
                                }
                                if (result21 !== null) {
                                  var result16 = result21;
                                } else {
                                  if (input.substr(pos, 1) === "d") {
                                    var result20 = "d";
                                    pos += 1;
                                  } else {
                                    var result20 = null;
                                    if (reportMatchFailures) {
                                      matchFailed("\"d\"");
                                    }
                                  }
                                  if (result20 !== null) {
                                    var result16 = result20;
                                  } else {
                                    var result16 = null;;
                                  };
                                }
                                if (result16 !== null) {
                                  var result17 = [];
                                  var result19 = parse_WS();
                                  while (result19 !== null) {
                                    result17.push(result19);
                                    var result19 = parse_WS();
                                  }
                                  if (result17 !== null) {
                                    var result18 = parse_IRIref();
                                    if (result18 !== null) {
                                      var result11 = [result12, result13, result14, result15, result16, result17, result18];
                                    } else {
                                      var result11 = null;
                                      pos = savedPos2;
                                    }
                                  } else {
                                    var result11 = null;
                                    pos = savedPos2;
                                  }
                                } else {
                                  var result11 = null;
                                  pos = savedPos2;
                                }
                              } else {
                                var result11 = null;
                                pos = savedPos2;
                              }
                            } else {
                              var result11 = null;
                              pos = savedPos2;
                            }
                          } else {
                            var result11 = null;
                            pos = savedPos2;
                          }
                        } else {
                          var result11 = null;
                          pos = savedPos2;
                        }
                        if (result11 !== null) {
                          var result10 = result11;
                        } else {
                          var result10 = null;;
                        };
                      }
                      if (result10 !== null) {
                        var result1 = [result3, result4, result5, result6, result7, result8, result9, result10];
                      } else {
                        var result1 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(g) {
                if(g.length!=null) {
                    return {kind: 'named', uri: g[6]};
                } else {
                    return {kind: 'default', uri: g};
                }
          })(result1[7])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[42] UsingClause");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_GraphRef() {
        var cacheKey = 'GraphRef@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "G") {
          var result20 = "G";
          pos += 1;
        } else {
          var result20 = null;
          if (reportMatchFailures) {
            matchFailed("\"G\"");
          }
        }
        if (result20 !== null) {
          var result3 = result20;
        } else {
          if (input.substr(pos, 1) === "g") {
            var result19 = "g";
            pos += 1;
          } else {
            var result19 = null;
            if (reportMatchFailures) {
              matchFailed("\"g\"");
            }
          }
          if (result19 !== null) {
            var result3 = result19;
          } else {
            var result3 = null;;
          };
        }
        if (result3 !== null) {
          if (input.substr(pos, 1) === "R") {
            var result18 = "R";
            pos += 1;
          } else {
            var result18 = null;
            if (reportMatchFailures) {
              matchFailed("\"R\"");
            }
          }
          if (result18 !== null) {
            var result4 = result18;
          } else {
            if (input.substr(pos, 1) === "r") {
              var result17 = "r";
              pos += 1;
            } else {
              var result17 = null;
              if (reportMatchFailures) {
                matchFailed("\"r\"");
              }
            }
            if (result17 !== null) {
              var result4 = result17;
            } else {
              var result4 = null;;
            };
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === "A") {
              var result16 = "A";
              pos += 1;
            } else {
              var result16 = null;
              if (reportMatchFailures) {
                matchFailed("\"A\"");
              }
            }
            if (result16 !== null) {
              var result5 = result16;
            } else {
              if (input.substr(pos, 1) === "a") {
                var result15 = "a";
                pos += 1;
              } else {
                var result15 = null;
                if (reportMatchFailures) {
                  matchFailed("\"a\"");
                }
              }
              if (result15 !== null) {
                var result5 = result15;
              } else {
                var result5 = null;;
              };
            }
            if (result5 !== null) {
              if (input.substr(pos, 1) === "P") {
                var result14 = "P";
                pos += 1;
              } else {
                var result14 = null;
                if (reportMatchFailures) {
                  matchFailed("\"P\"");
                }
              }
              if (result14 !== null) {
                var result6 = result14;
              } else {
                if (input.substr(pos, 1) === "p") {
                  var result13 = "p";
                  pos += 1;
                } else {
                  var result13 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"p\"");
                  }
                }
                if (result13 !== null) {
                  var result6 = result13;
                } else {
                  var result6 = null;;
                };
              }
              if (result6 !== null) {
                if (input.substr(pos, 1) === "H") {
                  var result12 = "H";
                  pos += 1;
                } else {
                  var result12 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"H\"");
                  }
                }
                if (result12 !== null) {
                  var result7 = result12;
                } else {
                  if (input.substr(pos, 1) === "h") {
                    var result11 = "h";
                    pos += 1;
                  } else {
                    var result11 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"h\"");
                    }
                  }
                  if (result11 !== null) {
                    var result7 = result11;
                  } else {
                    var result7 = null;;
                  };
                }
                if (result7 !== null) {
                  var result8 = [];
                  var result10 = parse_WS();
                  while (result10 !== null) {
                    result8.push(result10);
                    var result10 = parse_WS();
                  }
                  if (result8 !== null) {
                    var result9 = parse_IRIref();
                    if (result9 !== null) {
                      var result1 = [result3, result4, result5, result6, result7, result8, result9];
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(i) {
                return i;
          })(result1[6])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[43] GraphRef");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_GraphRefAll() {
        var cacheKey = 'GraphRefAll@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos6 = pos;
        var result56 = parse_GraphRef();
        var result57 = result56 !== null
          ? (function(g) {
                return g;
          })(result56)
          : null;
        if (result57 !== null) {
          var result55 = result57;
        } else {
          var result55 = null;
          pos = savedPos6;
        }
        if (result55 !== null) {
          var result0 = result55;
        } else {
          var savedPos4 = pos;
          var savedPos5 = pos;
          if (input.substr(pos, 1) === "D") {
            var result54 = "D";
            pos += 1;
          } else {
            var result54 = null;
            if (reportMatchFailures) {
              matchFailed("\"D\"");
            }
          }
          if (result54 !== null) {
            var result34 = result54;
          } else {
            if (input.substr(pos, 1) === "d") {
              var result53 = "d";
              pos += 1;
            } else {
              var result53 = null;
              if (reportMatchFailures) {
                matchFailed("\"d\"");
              }
            }
            if (result53 !== null) {
              var result34 = result53;
            } else {
              var result34 = null;;
            };
          }
          if (result34 !== null) {
            if (input.substr(pos, 1) === "E") {
              var result52 = "E";
              pos += 1;
            } else {
              var result52 = null;
              if (reportMatchFailures) {
                matchFailed("\"E\"");
              }
            }
            if (result52 !== null) {
              var result35 = result52;
            } else {
              if (input.substr(pos, 1) === "e") {
                var result51 = "e";
                pos += 1;
              } else {
                var result51 = null;
                if (reportMatchFailures) {
                  matchFailed("\"e\"");
                }
              }
              if (result51 !== null) {
                var result35 = result51;
              } else {
                var result35 = null;;
              };
            }
            if (result35 !== null) {
              if (input.substr(pos, 1) === "F") {
                var result50 = "F";
                pos += 1;
              } else {
                var result50 = null;
                if (reportMatchFailures) {
                  matchFailed("\"F\"");
                }
              }
              if (result50 !== null) {
                var result36 = result50;
              } else {
                if (input.substr(pos, 1) === "f") {
                  var result49 = "f";
                  pos += 1;
                } else {
                  var result49 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"f\"");
                  }
                }
                if (result49 !== null) {
                  var result36 = result49;
                } else {
                  var result36 = null;;
                };
              }
              if (result36 !== null) {
                if (input.substr(pos, 1) === "A") {
                  var result48 = "A";
                  pos += 1;
                } else {
                  var result48 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"A\"");
                  }
                }
                if (result48 !== null) {
                  var result37 = result48;
                } else {
                  if (input.substr(pos, 1) === "a") {
                    var result47 = "a";
                    pos += 1;
                  } else {
                    var result47 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"a\"");
                    }
                  }
                  if (result47 !== null) {
                    var result37 = result47;
                  } else {
                    var result37 = null;;
                  };
                }
                if (result37 !== null) {
                  if (input.substr(pos, 1) === "U") {
                    var result46 = "U";
                    pos += 1;
                  } else {
                    var result46 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"U\"");
                    }
                  }
                  if (result46 !== null) {
                    var result38 = result46;
                  } else {
                    if (input.substr(pos, 1) === "u") {
                      var result45 = "u";
                      pos += 1;
                    } else {
                      var result45 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"u\"");
                      }
                    }
                    if (result45 !== null) {
                      var result38 = result45;
                    } else {
                      var result38 = null;;
                    };
                  }
                  if (result38 !== null) {
                    if (input.substr(pos, 1) === "L") {
                      var result44 = "L";
                      pos += 1;
                    } else {
                      var result44 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"L\"");
                      }
                    }
                    if (result44 !== null) {
                      var result39 = result44;
                    } else {
                      if (input.substr(pos, 1) === "l") {
                        var result43 = "l";
                        pos += 1;
                      } else {
                        var result43 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"l\"");
                        }
                      }
                      if (result43 !== null) {
                        var result39 = result43;
                      } else {
                        var result39 = null;;
                      };
                    }
                    if (result39 !== null) {
                      if (input.substr(pos, 1) === "T") {
                        var result42 = "T";
                        pos += 1;
                      } else {
                        var result42 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"T\"");
                        }
                      }
                      if (result42 !== null) {
                        var result40 = result42;
                      } else {
                        if (input.substr(pos, 1) === "t") {
                          var result41 = "t";
                          pos += 1;
                        } else {
                          var result41 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"t\"");
                          }
                        }
                        if (result41 !== null) {
                          var result40 = result41;
                        } else {
                          var result40 = null;;
                        };
                      }
                      if (result40 !== null) {
                        var result32 = [result34, result35, result36, result37, result38, result39, result40];
                      } else {
                        var result32 = null;
                        pos = savedPos5;
                      }
                    } else {
                      var result32 = null;
                      pos = savedPos5;
                    }
                  } else {
                    var result32 = null;
                    pos = savedPos5;
                  }
                } else {
                  var result32 = null;
                  pos = savedPos5;
                }
              } else {
                var result32 = null;
                pos = savedPos5;
              }
            } else {
              var result32 = null;
              pos = savedPos5;
            }
          } else {
            var result32 = null;
            pos = savedPos5;
          }
          var result33 = result32 !== null
            ? (function() {
                  return 'default';
            })()
            : null;
          if (result33 !== null) {
            var result31 = result33;
          } else {
            var result31 = null;
            pos = savedPos4;
          }
          if (result31 !== null) {
            var result0 = result31;
          } else {
            var savedPos2 = pos;
            var savedPos3 = pos;
            if (input.substr(pos, 1) === "N") {
              var result30 = "N";
              pos += 1;
            } else {
              var result30 = null;
              if (reportMatchFailures) {
                matchFailed("\"N\"");
              }
            }
            if (result30 !== null) {
              var result16 = result30;
            } else {
              if (input.substr(pos, 1) === "n") {
                var result29 = "n";
                pos += 1;
              } else {
                var result29 = null;
                if (reportMatchFailures) {
                  matchFailed("\"n\"");
                }
              }
              if (result29 !== null) {
                var result16 = result29;
              } else {
                var result16 = null;;
              };
            }
            if (result16 !== null) {
              if (input.substr(pos, 1) === "A") {
                var result28 = "A";
                pos += 1;
              } else {
                var result28 = null;
                if (reportMatchFailures) {
                  matchFailed("\"A\"");
                }
              }
              if (result28 !== null) {
                var result17 = result28;
              } else {
                if (input.substr(pos, 1) === "a") {
                  var result27 = "a";
                  pos += 1;
                } else {
                  var result27 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"a\"");
                  }
                }
                if (result27 !== null) {
                  var result17 = result27;
                } else {
                  var result17 = null;;
                };
              }
              if (result17 !== null) {
                if (input.substr(pos, 1) === "M") {
                  var result26 = "M";
                  pos += 1;
                } else {
                  var result26 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"M\"");
                  }
                }
                if (result26 !== null) {
                  var result18 = result26;
                } else {
                  if (input.substr(pos, 1) === "m") {
                    var result25 = "m";
                    pos += 1;
                  } else {
                    var result25 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"m\"");
                    }
                  }
                  if (result25 !== null) {
                    var result18 = result25;
                  } else {
                    var result18 = null;;
                  };
                }
                if (result18 !== null) {
                  if (input.substr(pos, 1) === "E") {
                    var result24 = "E";
                    pos += 1;
                  } else {
                    var result24 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"E\"");
                    }
                  }
                  if (result24 !== null) {
                    var result19 = result24;
                  } else {
                    if (input.substr(pos, 1) === "e") {
                      var result23 = "e";
                      pos += 1;
                    } else {
                      var result23 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"e\"");
                      }
                    }
                    if (result23 !== null) {
                      var result19 = result23;
                    } else {
                      var result19 = null;;
                    };
                  }
                  if (result19 !== null) {
                    if (input.substr(pos, 1) === "D") {
                      var result22 = "D";
                      pos += 1;
                    } else {
                      var result22 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"D\"");
                      }
                    }
                    if (result22 !== null) {
                      var result20 = result22;
                    } else {
                      if (input.substr(pos, 1) === "d") {
                        var result21 = "d";
                        pos += 1;
                      } else {
                        var result21 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"d\"");
                        }
                      }
                      if (result21 !== null) {
                        var result20 = result21;
                      } else {
                        var result20 = null;;
                      };
                    }
                    if (result20 !== null) {
                      var result14 = [result16, result17, result18, result19, result20];
                    } else {
                      var result14 = null;
                      pos = savedPos3;
                    }
                  } else {
                    var result14 = null;
                    pos = savedPos3;
                  }
                } else {
                  var result14 = null;
                  pos = savedPos3;
                }
              } else {
                var result14 = null;
                pos = savedPos3;
              }
            } else {
              var result14 = null;
              pos = savedPos3;
            }
            var result15 = result14 !== null
              ? (function() {
                    return 'named';
              })()
              : null;
            if (result15 !== null) {
              var result13 = result15;
            } else {
              var result13 = null;
              pos = savedPos2;
            }
            if (result13 !== null) {
              var result0 = result13;
            } else {
              var savedPos0 = pos;
              var savedPos1 = pos;
              if (input.substr(pos, 1) === "A") {
                var result12 = "A";
                pos += 1;
              } else {
                var result12 = null;
                if (reportMatchFailures) {
                  matchFailed("\"A\"");
                }
              }
              if (result12 !== null) {
                var result4 = result12;
              } else {
                if (input.substr(pos, 1) === "a") {
                  var result11 = "a";
                  pos += 1;
                } else {
                  var result11 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"a\"");
                  }
                }
                if (result11 !== null) {
                  var result4 = result11;
                } else {
                  var result4 = null;;
                };
              }
              if (result4 !== null) {
                if (input.substr(pos, 1) === "L") {
                  var result10 = "L";
                  pos += 1;
                } else {
                  var result10 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"L\"");
                  }
                }
                if (result10 !== null) {
                  var result5 = result10;
                } else {
                  if (input.substr(pos, 1) === "l") {
                    var result9 = "l";
                    pos += 1;
                  } else {
                    var result9 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"l\"");
                    }
                  }
                  if (result9 !== null) {
                    var result5 = result9;
                  } else {
                    var result5 = null;;
                  };
                }
                if (result5 !== null) {
                  if (input.substr(pos, 1) === "L") {
                    var result8 = "L";
                    pos += 1;
                  } else {
                    var result8 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"L\"");
                    }
                  }
                  if (result8 !== null) {
                    var result6 = result8;
                  } else {
                    if (input.substr(pos, 1) === "l") {
                      var result7 = "l";
                      pos += 1;
                    } else {
                      var result7 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"l\"");
                      }
                    }
                    if (result7 !== null) {
                      var result6 = result7;
                    } else {
                      var result6 = null;;
                    };
                  }
                  if (result6 !== null) {
                    var result2 = [result4, result5, result6];
                  } else {
                    var result2 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result2 = null;
                  pos = savedPos1;
                }
              } else {
                var result2 = null;
                pos = savedPos1;
              }
              var result3 = result2 !== null
                ? (function() {
                      return 'all';
                })()
                : null;
              if (result3 !== null) {
                var result1 = result3;
              } else {
                var result1 = null;
                pos = savedPos0;
              }
              if (result1 !== null) {
                var result0 = result1;
              } else {
                var result0 = null;;
              };
            };
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[44] GraphRefAll");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_QuadPattern() {
        var cacheKey = 'QuadPattern@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = [];
        var result13 = parse_WS();
        while (result13 !== null) {
          result3.push(result13);
          var result13 = parse_WS();
        }
        if (result3 !== null) {
          if (input.substr(pos, 1) === "{") {
            var result4 = "{";
            pos += 1;
          } else {
            var result4 = null;
            if (reportMatchFailures) {
              matchFailed("\"{\"");
            }
          }
          if (result4 !== null) {
            var result5 = [];
            var result12 = parse_WS();
            while (result12 !== null) {
              result5.push(result12);
              var result12 = parse_WS();
            }
            if (result5 !== null) {
              var result6 = parse_Quads();
              if (result6 !== null) {
                var result7 = [];
                var result11 = parse_WS();
                while (result11 !== null) {
                  result7.push(result11);
                  var result11 = parse_WS();
                }
                if (result7 !== null) {
                  if (input.substr(pos, 1) === "}") {
                    var result8 = "}";
                    pos += 1;
                  } else {
                    var result8 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"}\"");
                    }
                  }
                  if (result8 !== null) {
                    var result9 = [];
                    var result10 = parse_WS();
                    while (result10 !== null) {
                      result9.push(result10);
                      var result10 = parse_WS();
                    }
                    if (result9 !== null) {
                      var result1 = [result3, result4, result5, result6, result7, result8, result9];
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(qs) {
                return qs.quadsContext;
          })(result1[3])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[45] QuadPattern");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_QuadData() {
        var cacheKey = 'QuadData@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = [];
        var result13 = parse_WS();
        while (result13 !== null) {
          result3.push(result13);
          var result13 = parse_WS();
        }
        if (result3 !== null) {
          if (input.substr(pos, 1) === "{") {
            var result4 = "{";
            pos += 1;
          } else {
            var result4 = null;
            if (reportMatchFailures) {
              matchFailed("\"{\"");
            }
          }
          if (result4 !== null) {
            var result5 = [];
            var result12 = parse_WS();
            while (result12 !== null) {
              result5.push(result12);
              var result12 = parse_WS();
            }
            if (result5 !== null) {
              var result6 = parse_Quads();
              if (result6 !== null) {
                var result7 = [];
                var result11 = parse_WS();
                while (result11 !== null) {
                  result7.push(result11);
                  var result11 = parse_WS();
                }
                if (result7 !== null) {
                  if (input.substr(pos, 1) === "}") {
                    var result8 = "}";
                    pos += 1;
                  } else {
                    var result8 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"}\"");
                    }
                  }
                  if (result8 !== null) {
                    var result9 = [];
                    var result10 = parse_WS();
                    while (result10 !== null) {
                      result9.push(result10);
                      var result10 = parse_WS();
                    }
                    if (result9 !== null) {
                      var result1 = [result3, result4, result5, result6, result7, result8, result9];
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(qs) {
                return qs.quadsContext;
          })(result1[3])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[46] QuadData");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_Quads() {
        var cacheKey = 'Quads@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result11 = parse_TriplesTemplate();
        var result3 = result11 !== null ? result11 : '';
        if (result3 !== null) {
          var result4 = [];
          var savedPos2 = pos;
          var result6 = parse_QuadsNotTriples();
          if (result6 !== null) {
            if (input.substr(pos, 1) === ".") {
              var result10 = ".";
              pos += 1;
            } else {
              var result10 = null;
              if (reportMatchFailures) {
                matchFailed("\".\"");
              }
            }
            var result7 = result10 !== null ? result10 : '';
            if (result7 !== null) {
              var result9 = parse_TriplesTemplate();
              var result8 = result9 !== null ? result9 : '';
              if (result8 !== null) {
                var result5 = [result6, result7, result8];
              } else {
                var result5 = null;
                pos = savedPos2;
              }
            } else {
              var result5 = null;
              pos = savedPos2;
            }
          } else {
            var result5 = null;
            pos = savedPos2;
          }
          while (result5 !== null) {
            result4.push(result5);
            var savedPos2 = pos;
            var result6 = parse_QuadsNotTriples();
            if (result6 !== null) {
              if (input.substr(pos, 1) === ".") {
                var result10 = ".";
                pos += 1;
              } else {
                var result10 = null;
                if (reportMatchFailures) {
                  matchFailed("\".\"");
                }
              }
              var result7 = result10 !== null ? result10 : '';
              if (result7 !== null) {
                var result9 = parse_TriplesTemplate();
                var result8 = result9 !== null ? result9 : '';
                if (result8 !== null) {
                  var result5 = [result6, result7, result8];
                } else {
                  var result5 = null;
                  pos = savedPos2;
                }
              } else {
                var result5 = null;
                pos = savedPos2;
              }
            } else {
              var result5 = null;
              pos = savedPos2;
            }
          }
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(ts, qs) {
                var quads = []
                if(ts.triplesContext != null && ts.triplesContext != null) {
                  for(var i=0; i<ts.triplesContext.length; i++) {
                      var triple = ts.triplesContext[i]
                      triple.graph = null;
                      quads.push(triple)
                  }
                }
          
                if(qs && qs.length>0 && qs[0].length > 0) {
                    quads = quads.concat(qs[0][0].quadsContext);
          
                    if( qs[0][2] != null && qs[0][2].triplesContext != null) {
                      for(var i=0; i<qs[0][2].triplesContext.length; i++) {
                          var triple = qs[0][2].triplesContext[i]
                          triple.graph = null;
                          quads.push(triple)
                      }
                    }
                }
          
                return {token:'quads',
                        quadsContext: quads}
          })(result1[0], result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[47] Quads");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_QuadsNotTriples() {
        var cacheKey = 'QuadsNotTriples@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = [];
        var result34 = parse_WS();
        while (result34 !== null) {
          result3.push(result34);
          var result34 = parse_WS();
        }
        if (result3 !== null) {
          if (input.substr(pos, 1) === "G") {
            var result33 = "G";
            pos += 1;
          } else {
            var result33 = null;
            if (reportMatchFailures) {
              matchFailed("\"G\"");
            }
          }
          if (result33 !== null) {
            var result4 = result33;
          } else {
            if (input.substr(pos, 1) === "g") {
              var result32 = "g";
              pos += 1;
            } else {
              var result32 = null;
              if (reportMatchFailures) {
                matchFailed("\"g\"");
              }
            }
            if (result32 !== null) {
              var result4 = result32;
            } else {
              var result4 = null;;
            };
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === "R") {
              var result31 = "R";
              pos += 1;
            } else {
              var result31 = null;
              if (reportMatchFailures) {
                matchFailed("\"R\"");
              }
            }
            if (result31 !== null) {
              var result5 = result31;
            } else {
              if (input.substr(pos, 1) === "r") {
                var result30 = "r";
                pos += 1;
              } else {
                var result30 = null;
                if (reportMatchFailures) {
                  matchFailed("\"r\"");
                }
              }
              if (result30 !== null) {
                var result5 = result30;
              } else {
                var result5 = null;;
              };
            }
            if (result5 !== null) {
              if (input.substr(pos, 1) === "A") {
                var result29 = "A";
                pos += 1;
              } else {
                var result29 = null;
                if (reportMatchFailures) {
                  matchFailed("\"A\"");
                }
              }
              if (result29 !== null) {
                var result6 = result29;
              } else {
                if (input.substr(pos, 1) === "a") {
                  var result28 = "a";
                  pos += 1;
                } else {
                  var result28 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"a\"");
                  }
                }
                if (result28 !== null) {
                  var result6 = result28;
                } else {
                  var result6 = null;;
                };
              }
              if (result6 !== null) {
                if (input.substr(pos, 1) === "P") {
                  var result27 = "P";
                  pos += 1;
                } else {
                  var result27 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"P\"");
                  }
                }
                if (result27 !== null) {
                  var result7 = result27;
                } else {
                  if (input.substr(pos, 1) === "p") {
                    var result26 = "p";
                    pos += 1;
                  } else {
                    var result26 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"p\"");
                    }
                  }
                  if (result26 !== null) {
                    var result7 = result26;
                  } else {
                    var result7 = null;;
                  };
                }
                if (result7 !== null) {
                  if (input.substr(pos, 1) === "H") {
                    var result25 = "H";
                    pos += 1;
                  } else {
                    var result25 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"H\"");
                    }
                  }
                  if (result25 !== null) {
                    var result8 = result25;
                  } else {
                    if (input.substr(pos, 1) === "h") {
                      var result24 = "h";
                      pos += 1;
                    } else {
                      var result24 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"h\"");
                      }
                    }
                    if (result24 !== null) {
                      var result8 = result24;
                    } else {
                      var result8 = null;;
                    };
                  }
                  if (result8 !== null) {
                    var result9 = [];
                    var result23 = parse_WS();
                    while (result23 !== null) {
                      result9.push(result23);
                      var result23 = parse_WS();
                    }
                    if (result9 !== null) {
                      var result10 = parse_VarOrIRIref();
                      if (result10 !== null) {
                        var result11 = [];
                        var result22 = parse_WS();
                        while (result22 !== null) {
                          result11.push(result22);
                          var result22 = parse_WS();
                        }
                        if (result11 !== null) {
                          if (input.substr(pos, 1) === "{") {
                            var result12 = "{";
                            pos += 1;
                          } else {
                            var result12 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"{\"");
                            }
                          }
                          if (result12 !== null) {
                            var result13 = [];
                            var result21 = parse_WS();
                            while (result21 !== null) {
                              result13.push(result21);
                              var result21 = parse_WS();
                            }
                            if (result13 !== null) {
                              var result20 = parse_TriplesTemplate();
                              var result14 = result20 !== null ? result20 : '';
                              if (result14 !== null) {
                                var result15 = [];
                                var result19 = parse_WS();
                                while (result19 !== null) {
                                  result15.push(result19);
                                  var result19 = parse_WS();
                                }
                                if (result15 !== null) {
                                  if (input.substr(pos, 1) === "}") {
                                    var result16 = "}";
                                    pos += 1;
                                  } else {
                                    var result16 = null;
                                    if (reportMatchFailures) {
                                      matchFailed("\"}\"");
                                    }
                                  }
                                  if (result16 !== null) {
                                    var result17 = [];
                                    var result18 = parse_WS();
                                    while (result18 !== null) {
                                      result17.push(result18);
                                      var result18 = parse_WS();
                                    }
                                    if (result17 !== null) {
                                      var result1 = [result3, result4, result5, result6, result7, result8, result9, result10, result11, result12, result13, result14, result15, result16, result17];
                                    } else {
                                      var result1 = null;
                                      pos = savedPos1;
                                    }
                                  } else {
                                    var result1 = null;
                                    pos = savedPos1;
                                  }
                                } else {
                                  var result1 = null;
                                  pos = savedPos1;
                                }
                              } else {
                                var result1 = null;
                                pos = savedPos1;
                              }
                            } else {
                              var result1 = null;
                              pos = savedPos1;
                            }
                          } else {
                            var result1 = null;
                            pos = savedPos1;
                          }
                        } else {
                          var result1 = null;
                          pos = savedPos1;
                        }
                      } else {
                        var result1 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(g, ts) {
                var quads = []
                for(var i=0; i<ts.triplesContext.length; i++) {
                    var triple = ts.triplesContext[i]
                    triple.graph = g;
                    quads.push(triple)
                }
          
                return {token:'quadsnottriples',
                        quadsContext: quads}
          })(result1[7], result1[11])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[48] QuadsNotTriples");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_TriplesTemplate() {
        var cacheKey = 'TriplesTemplate@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = parse_TriplesSameSubject();
        if (result3 !== null) {
          var savedPos2 = pos;
          var result6 = [];
          var result12 = parse_WS();
          while (result12 !== null) {
            result6.push(result12);
            var result12 = parse_WS();
          }
          if (result6 !== null) {
            if (input.substr(pos, 1) === ".") {
              var result7 = ".";
              pos += 1;
            } else {
              var result7 = null;
              if (reportMatchFailures) {
                matchFailed("\".\"");
              }
            }
            if (result7 !== null) {
              var result8 = [];
              var result11 = parse_WS();
              while (result11 !== null) {
                result8.push(result11);
                var result11 = parse_WS();
              }
              if (result8 !== null) {
                var result10 = parse_TriplesTemplate();
                var result9 = result10 !== null ? result10 : '';
                if (result9 !== null) {
                  var result5 = [result6, result7, result8, result9];
                } else {
                  var result5 = null;
                  pos = savedPos2;
                }
              } else {
                var result5 = null;
                pos = savedPos2;
              }
            } else {
              var result5 = null;
              pos = savedPos2;
            }
          } else {
            var result5 = null;
            pos = savedPos2;
          }
          var result4 = result5 !== null ? result5 : '';
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(b, bs) {
               var triples = b.triplesContext;
               var toTest = null;
                if(typeof(bs) === 'object') {
                      if(bs.length != null) {
                            if(bs[3].triplesContext!=null) {
                               triples = triples.concat(bs[3].triplesContext);
                        }
                     }
                }
          
               return {token:'triplestemplate',
                       triplesContext: triples}
          })(result1[0], result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[49] TriplesTemplate");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_GroupGraphPattern() {
        var cacheKey = 'GroupGraphPattern@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos2 = pos;
        var savedPos3 = pos;
        if (input.substr(pos, 1) === "{") {
          var result14 = "{";
          pos += 1;
        } else {
          var result14 = null;
          if (reportMatchFailures) {
            matchFailed("\"{\"");
          }
        }
        if (result14 !== null) {
          var result15 = [];
          var result20 = parse_WS();
          while (result20 !== null) {
            result15.push(result20);
            var result20 = parse_WS();
          }
          if (result15 !== null) {
            var result16 = parse_SubSelect();
            if (result16 !== null) {
              var result17 = [];
              var result19 = parse_WS();
              while (result19 !== null) {
                result17.push(result19);
                var result19 = parse_WS();
              }
              if (result17 !== null) {
                if (input.substr(pos, 1) === "}") {
                  var result18 = "}";
                  pos += 1;
                } else {
                  var result18 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"}\"");
                  }
                }
                if (result18 !== null) {
                  var result12 = [result14, result15, result16, result17, result18];
                } else {
                  var result12 = null;
                  pos = savedPos3;
                }
              } else {
                var result12 = null;
                pos = savedPos3;
              }
            } else {
              var result12 = null;
              pos = savedPos3;
            }
          } else {
            var result12 = null;
            pos = savedPos3;
          }
        } else {
          var result12 = null;
          pos = savedPos3;
        }
        var result13 = result12 !== null
          ? (function(p) {
                return p;
          })(result12[2])
          : null;
        if (result13 !== null) {
          var result11 = result13;
        } else {
          var result11 = null;
          pos = savedPos2;
        }
        if (result11 !== null) {
          var result0 = result11;
        } else {
          var savedPos0 = pos;
          var savedPos1 = pos;
          if (input.substr(pos, 1) === "{") {
            var result4 = "{";
            pos += 1;
          } else {
            var result4 = null;
            if (reportMatchFailures) {
              matchFailed("\"{\"");
            }
          }
          if (result4 !== null) {
            var result5 = [];
            var result10 = parse_WS();
            while (result10 !== null) {
              result5.push(result10);
              var result10 = parse_WS();
            }
            if (result5 !== null) {
              var result6 = parse_GroupGraphPatternSub();
              if (result6 !== null) {
                var result7 = [];
                var result9 = parse_WS();
                while (result9 !== null) {
                  result7.push(result9);
                  var result9 = parse_WS();
                }
                if (result7 !== null) {
                  if (input.substr(pos, 1) === "}") {
                    var result8 = "}";
                    pos += 1;
                  } else {
                    var result8 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"}\"");
                    }
                  }
                  if (result8 !== null) {
                    var result2 = [result4, result5, result6, result7, result8];
                  } else {
                    var result2 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result2 = null;
                  pos = savedPos1;
                }
              } else {
                var result2 = null;
                pos = savedPos1;
              }
            } else {
              var result2 = null;
              pos = savedPos1;
            }
          } else {
            var result2 = null;
            pos = savedPos1;
          }
          var result3 = result2 !== null
            ? (function(p) {
                  return p;
            })(result2[2])
            : null;
          if (result3 !== null) {
            var result1 = result3;
          } else {
            var result1 = null;
            pos = savedPos0;
          }
          if (result1 !== null) {
            var result0 = result1;
          } else {
            var result0 = null;;
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[50] GroupGraphPattern");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_GroupGraphPatternSub() {
        var cacheKey = 'GroupGraphPatternSub@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result17 = parse_TriplesBlock();
        var result3 = result17 !== null ? result17 : '';
        if (result3 !== null) {
          var result4 = [];
          var result16 = parse_WS();
          while (result16 !== null) {
            result4.push(result16);
            var result16 = parse_WS();
          }
          if (result4 !== null) {
            var result5 = [];
            var savedPos2 = pos;
            var result7 = parse_GraphPatternNotTriples();
            if (result7 !== null) {
              var result8 = [];
              var result15 = parse_WS();
              while (result15 !== null) {
                result8.push(result15);
                var result15 = parse_WS();
              }
              if (result8 !== null) {
                if (input.substr(pos, 1) === ".") {
                  var result14 = ".";
                  pos += 1;
                } else {
                  var result14 = null;
                  if (reportMatchFailures) {
                    matchFailed("\".\"");
                  }
                }
                var result9 = result14 !== null ? result14 : '';
                if (result9 !== null) {
                  var result10 = [];
                  var result13 = parse_WS();
                  while (result13 !== null) {
                    result10.push(result13);
                    var result13 = parse_WS();
                  }
                  if (result10 !== null) {
                    var result12 = parse_TriplesBlock();
                    var result11 = result12 !== null ? result12 : '';
                    if (result11 !== null) {
                      var result6 = [result7, result8, result9, result10, result11];
                    } else {
                      var result6 = null;
                      pos = savedPos2;
                    }
                  } else {
                    var result6 = null;
                    pos = savedPos2;
                  }
                } else {
                  var result6 = null;
                  pos = savedPos2;
                }
              } else {
                var result6 = null;
                pos = savedPos2;
              }
            } else {
              var result6 = null;
              pos = savedPos2;
            }
            while (result6 !== null) {
              result5.push(result6);
              var savedPos2 = pos;
              var result7 = parse_GraphPatternNotTriples();
              if (result7 !== null) {
                var result8 = [];
                var result15 = parse_WS();
                while (result15 !== null) {
                  result8.push(result15);
                  var result15 = parse_WS();
                }
                if (result8 !== null) {
                  if (input.substr(pos, 1) === ".") {
                    var result14 = ".";
                    pos += 1;
                  } else {
                    var result14 = null;
                    if (reportMatchFailures) {
                      matchFailed("\".\"");
                    }
                  }
                  var result9 = result14 !== null ? result14 : '';
                  if (result9 !== null) {
                    var result10 = [];
                    var result13 = parse_WS();
                    while (result13 !== null) {
                      result10.push(result13);
                      var result13 = parse_WS();
                    }
                    if (result10 !== null) {
                      var result12 = parse_TriplesBlock();
                      var result11 = result12 !== null ? result12 : '';
                      if (result11 !== null) {
                        var result6 = [result7, result8, result9, result10, result11];
                      } else {
                        var result6 = null;
                        pos = savedPos2;
                      }
                    } else {
                      var result6 = null;
                      pos = savedPos2;
                    }
                  } else {
                    var result6 = null;
                    pos = savedPos2;
                  }
                } else {
                  var result6 = null;
                  pos = savedPos2;
                }
              } else {
                var result6 = null;
                pos = savedPos2;
              }
            }
            if (result5 !== null) {
              var result1 = [result3, result4, result5];
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(tb, tbs) {
                var subpatterns = [];
                if(tb != null && tb != []) {
                    subpatterns.push(tb);
                }
          
                for(var i=0; i<tbs.length; i++) {
                    for(var j=0; j< tbs[i].length; j++) {
                        if(tbs[i][j].token != null) {
                            subpatterns.push(tbs[i][j]);
                        }
                    }
                }
          
                var compactedSubpatterns = [];
          
                var currentBasicGraphPatterns = [];
                var currentFilters = [];
          
                for(var i=0; i<subpatterns.length; i++) {
                    if(subpatterns[i].token!='triplespattern' && subpatterns[i].token != 'filter') {
                        if(currentBasicGraphPatterns.length != 0 || currentFilters.length != 0) {
                            var triplesContext = [];
                            for(var j=0; j<currentBasicGraphPatterns.length; j++) {
                                triplesContext = triplesContext.concat(currentBasicGraphPatterns[j].triplesContext);
                            }
                            if(triplesContext.length > 0) {  
                                compactedSubpatterns.push({token: 'basicgraphpattern',
                                                           triplesContext: triplesContext});
                            }
                            currentBasicGraphPatterns = [];
                        }
                        compactedSubpatterns.push(subpatterns[i]);
                    } else {
                        if(subpatterns[i].token === 'triplespattern') {
                            currentBasicGraphPatterns.push(subpatterns[i]);
                        } else {
                            currentFilters.push(subpatterns[i]);
                        }
                    }
                }
          
                if(currentBasicGraphPatterns.length != 0 || currentFilters.length != 0) {
                    var triplesContext = [];
                    for(var j=0; j<currentBasicGraphPatterns.length; j++) {
                        triplesContext = triplesContext.concat(currentBasicGraphPatterns[j].triplesContext);
                    }
                    if(triplesContext.length > 0) {
                      compactedSubpatterns.push({token: 'basicgraphpattern',
                                                 triplesContext: triplesContext});
                    }
                }
          
          //      if(compactedSubpatterns.length == 1) {
          //          compactedSubpatterns[0].filters = currentFilters;
          //          return compactedSubpatterns[0];
          //      } else  {
                    return { token: 'groupgraphpattern',
                             patterns: compactedSubpatterns,
                             filters: currentFilters }
          //      }
          })(result1[0], result1[2])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[51] GroupGraphPatternSub");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_TriplesBlock() {
        var cacheKey = 'TriplesBlock@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = parse_TriplesSameSubject();
        if (result3 !== null) {
          var savedPos2 = pos;
          var result6 = [];
          var result10 = parse_WS();
          while (result10 !== null) {
            result6.push(result10);
            var result10 = parse_WS();
          }
          if (result6 !== null) {
            if (input.substr(pos, 1) === ".") {
              var result7 = ".";
              pos += 1;
            } else {
              var result7 = null;
              if (reportMatchFailures) {
                matchFailed("\".\"");
              }
            }
            if (result7 !== null) {
              var result9 = parse_TriplesBlock();
              var result8 = result9 !== null ? result9 : '';
              if (result8 !== null) {
                var result5 = [result6, result7, result8];
              } else {
                var result5 = null;
                pos = savedPos2;
              }
            } else {
              var result5 = null;
              pos = savedPos2;
            }
          } else {
            var result5 = null;
            pos = savedPos2;
          }
          var result4 = result5 !== null ? result5 : '';
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(b, bs) {
               var triples = b.triplesContext;
               var toTest = null;
                if(typeof(bs) === 'object') {
                      if(bs.length != null) {
                            if(bs[2].triplesContext!=null) {
                               triples = triples.concat(bs[2].triplesContext);
                        }
                     }
                }
          
               return {token:'triplespattern',
                       triplesContext: triples}
          })(result1[0], result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[54] TriplesBlock");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_GraphPatternNotTriples() {
        var cacheKey = 'GraphPatternNotTriples@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var result6 = parse_GroupOrUnionGraphPattern();
        if (result6 !== null) {
          var result0 = result6;
        } else {
          var result5 = parse_OptionalGraphPattern();
          if (result5 !== null) {
            var result0 = result5;
          } else {
            var result4 = parse_MinusGraphPattern();
            if (result4 !== null) {
              var result0 = result4;
            } else {
              var result3 = parse_GraphGraphPattern();
              if (result3 !== null) {
                var result0 = result3;
              } else {
                var result2 = parse_ServiceGraphPattern();
                if (result2 !== null) {
                  var result0 = result2;
                } else {
                  var result1 = parse_Filter();
                  if (result1 !== null) {
                    var result0 = result1;
                  } else {
                    var result0 = null;;
                  };
                };
              };
            };
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[53] GraphPatternNotTriples");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_OptionalGraphPattern() {
        var cacheKey = 'OptionalGraphPattern@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = [];
        var result8 = parse_WS();
        while (result8 !== null) {
          result3.push(result8);
          var result8 = parse_WS();
        }
        if (result3 !== null) {
          if (input.substr(pos, 8) === "OPTIONAL") {
            var result4 = "OPTIONAL";
            pos += 8;
          } else {
            var result4 = null;
            if (reportMatchFailures) {
              matchFailed("\"OPTIONAL\"");
            }
          }
          if (result4 !== null) {
            var result5 = [];
            var result7 = parse_WS();
            while (result7 !== null) {
              result5.push(result7);
              var result7 = parse_WS();
            }
            if (result5 !== null) {
              var result6 = parse_GroupGraphPattern();
              if (result6 !== null) {
                var result1 = [result3, result4, result5, result6];
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(v) {
                return { token: 'optionalgraphpattern',
                         value: v }
          })(result1[3])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[54] OptionalGraphPattern");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_GraphGraphPattern() {
        var cacheKey = 'GraphGraphPattern@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = [];
        var result25 = parse_WS();
        while (result25 !== null) {
          result3.push(result25);
          var result25 = parse_WS();
        }
        if (result3 !== null) {
          if (input.substr(pos, 1) === "G") {
            var result24 = "G";
            pos += 1;
          } else {
            var result24 = null;
            if (reportMatchFailures) {
              matchFailed("\"G\"");
            }
          }
          if (result24 !== null) {
            var result4 = result24;
          } else {
            if (input.substr(pos, 1) === "g") {
              var result23 = "g";
              pos += 1;
            } else {
              var result23 = null;
              if (reportMatchFailures) {
                matchFailed("\"g\"");
              }
            }
            if (result23 !== null) {
              var result4 = result23;
            } else {
              var result4 = null;;
            };
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === "R") {
              var result22 = "R";
              pos += 1;
            } else {
              var result22 = null;
              if (reportMatchFailures) {
                matchFailed("\"R\"");
              }
            }
            if (result22 !== null) {
              var result5 = result22;
            } else {
              if (input.substr(pos, 1) === "r") {
                var result21 = "r";
                pos += 1;
              } else {
                var result21 = null;
                if (reportMatchFailures) {
                  matchFailed("\"r\"");
                }
              }
              if (result21 !== null) {
                var result5 = result21;
              } else {
                var result5 = null;;
              };
            }
            if (result5 !== null) {
              if (input.substr(pos, 1) === "A") {
                var result20 = "A";
                pos += 1;
              } else {
                var result20 = null;
                if (reportMatchFailures) {
                  matchFailed("\"A\"");
                }
              }
              if (result20 !== null) {
                var result6 = result20;
              } else {
                if (input.substr(pos, 1) === "a") {
                  var result19 = "a";
                  pos += 1;
                } else {
                  var result19 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"a\"");
                  }
                }
                if (result19 !== null) {
                  var result6 = result19;
                } else {
                  var result6 = null;;
                };
              }
              if (result6 !== null) {
                if (input.substr(pos, 1) === "P") {
                  var result18 = "P";
                  pos += 1;
                } else {
                  var result18 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"P\"");
                  }
                }
                if (result18 !== null) {
                  var result7 = result18;
                } else {
                  if (input.substr(pos, 1) === "p") {
                    var result17 = "p";
                    pos += 1;
                  } else {
                    var result17 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"p\"");
                    }
                  }
                  if (result17 !== null) {
                    var result7 = result17;
                  } else {
                    var result7 = null;;
                  };
                }
                if (result7 !== null) {
                  if (input.substr(pos, 1) === "H") {
                    var result16 = "H";
                    pos += 1;
                  } else {
                    var result16 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"H\"");
                    }
                  }
                  if (result16 !== null) {
                    var result8 = result16;
                  } else {
                    if (input.substr(pos, 1) === "h") {
                      var result15 = "h";
                      pos += 1;
                    } else {
                      var result15 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"h\"");
                      }
                    }
                    if (result15 !== null) {
                      var result8 = result15;
                    } else {
                      var result8 = null;;
                    };
                  }
                  if (result8 !== null) {
                    var result9 = [];
                    var result14 = parse_WS();
                    while (result14 !== null) {
                      result9.push(result14);
                      var result14 = parse_WS();
                    }
                    if (result9 !== null) {
                      var result10 = parse_VarOrIRIref();
                      if (result10 !== null) {
                        var result11 = [];
                        var result13 = parse_WS();
                        while (result13 !== null) {
                          result11.push(result13);
                          var result13 = parse_WS();
                        }
                        if (result11 !== null) {
                          var result12 = parse_GroupGraphPattern();
                          if (result12 !== null) {
                            var result1 = [result3, result4, result5, result6, result7, result8, result9, result10, result11, result12];
                          } else {
                            var result1 = null;
                            pos = savedPos1;
                          }
                        } else {
                          var result1 = null;
                          pos = savedPos1;
                        }
                      } else {
                        var result1 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(g, gg) {
                for(var i=0; i<gg.patterns.length; i++) {
                  var quads = []
                  var ts = gg.patterns[i];
                  for(var j=0; j<ts.triplesContext.length; j++) {
                      var triple = ts.triplesContext[j]
                      triple.graph = g;
                  }
                }
          
                gg.token = 'groupgraphpattern'
                return gg;
          })(result1[7], result1[9])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[55] GraphGraphPattern");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_ServiceGraphPattern() {
        var cacheKey = 'ServiceGraphPattern@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 7) === "SERVICE") {
          var result3 = "SERVICE";
          pos += 7;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("\"SERVICE\"");
          }
        }
        if (result3 !== null) {
          var result4 = parse_VarOrIRIref();
          if (result4 !== null) {
            var result5 = parse_GroupGraphPattern();
            if (result5 !== null) {
              var result1 = [result3, result4, result5];
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(v, ts) {
                return {token: 'servicegraphpattern',
                        status: 'todo',
                        value: [v,ts] }
          })(result1[1], result1[2])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[56] ServiceGraphPattern");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_MinusGraphPattern() {
        var cacheKey = 'MinusGraphPattern@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 5) === "MINUS") {
          var result3 = "MINUS";
          pos += 5;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("\"MINUS\"");
          }
        }
        if (result3 !== null) {
          var result4 = parse_GroupGraphPattern();
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(ts) {
                return {token: 'minusgraphpattern',
                        status: 'todo',
                        value: ts}
          })(result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[57] MinusGraphPattern");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_GroupOrUnionGraphPattern() {
        var cacheKey = 'GroupOrUnionGraphPattern@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = parse_GroupGraphPattern();
        if (result3 !== null) {
          var result4 = [];
          var savedPos2 = pos;
          var result6 = [];
          var result11 = parse_WS();
          while (result11 !== null) {
            result6.push(result11);
            var result11 = parse_WS();
          }
          if (result6 !== null) {
            if (input.substr(pos, 5) === "UNION") {
              var result7 = "UNION";
              pos += 5;
            } else {
              var result7 = null;
              if (reportMatchFailures) {
                matchFailed("\"UNION\"");
              }
            }
            if (result7 !== null) {
              var result8 = [];
              var result10 = parse_WS();
              while (result10 !== null) {
                result8.push(result10);
                var result10 = parse_WS();
              }
              if (result8 !== null) {
                var result9 = parse_GroupGraphPattern();
                if (result9 !== null) {
                  var result5 = [result6, result7, result8, result9];
                } else {
                  var result5 = null;
                  pos = savedPos2;
                }
              } else {
                var result5 = null;
                pos = savedPos2;
              }
            } else {
              var result5 = null;
              pos = savedPos2;
            }
          } else {
            var result5 = null;
            pos = savedPos2;
          }
          while (result5 !== null) {
            result4.push(result5);
            var savedPos2 = pos;
            var result6 = [];
            var result11 = parse_WS();
            while (result11 !== null) {
              result6.push(result11);
              var result11 = parse_WS();
            }
            if (result6 !== null) {
              if (input.substr(pos, 5) === "UNION") {
                var result7 = "UNION";
                pos += 5;
              } else {
                var result7 = null;
                if (reportMatchFailures) {
                  matchFailed("\"UNION\"");
                }
              }
              if (result7 !== null) {
                var result8 = [];
                var result10 = parse_WS();
                while (result10 !== null) {
                  result8.push(result10);
                  var result10 = parse_WS();
                }
                if (result8 !== null) {
                  var result9 = parse_GroupGraphPattern();
                  if (result9 !== null) {
                    var result5 = [result6, result7, result8, result9];
                  } else {
                    var result5 = null;
                    pos = savedPos2;
                  }
                } else {
                  var result5 = null;
                  pos = savedPos2;
                }
              } else {
                var result5 = null;
                pos = savedPos2;
              }
            } else {
              var result5 = null;
              pos = savedPos2;
            }
          }
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(a, b) {
                if(b.length === 0) {
                    return a;
                } else {
          
                    var lastToken = {token: 'graphunionpattern',
                                     value: [a]};
          
                    for(var i=0; i<b.length; i++) {
                        if(i==b.length-1) {
                            lastToken.value.push(b[i][3]);
                        } else {
                            lastToken.value.push(b[i][3]);
                            var newToken = {token: 'graphunionpattern',
                                            value: [lastToken]}
          
                            lastToken = newToken;
                        }
                    }
          
                    return lastToken;
          
                }
          })(result1[0], result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[58] GroupOrUnionGraphPattern");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_Filter() {
        var cacheKey = 'Filter@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = [];
        var result25 = parse_WS();
        while (result25 !== null) {
          result3.push(result25);
          var result25 = parse_WS();
        }
        if (result3 !== null) {
          if (input.substr(pos, 1) === "F") {
            var result24 = "F";
            pos += 1;
          } else {
            var result24 = null;
            if (reportMatchFailures) {
              matchFailed("\"F\"");
            }
          }
          if (result24 !== null) {
            var result4 = result24;
          } else {
            if (input.substr(pos, 1) === "f") {
              var result23 = "f";
              pos += 1;
            } else {
              var result23 = null;
              if (reportMatchFailures) {
                matchFailed("\"f\"");
              }
            }
            if (result23 !== null) {
              var result4 = result23;
            } else {
              var result4 = null;;
            };
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === "I") {
              var result22 = "I";
              pos += 1;
            } else {
              var result22 = null;
              if (reportMatchFailures) {
                matchFailed("\"I\"");
              }
            }
            if (result22 !== null) {
              var result5 = result22;
            } else {
              if (input.substr(pos, 1) === "i") {
                var result21 = "i";
                pos += 1;
              } else {
                var result21 = null;
                if (reportMatchFailures) {
                  matchFailed("\"i\"");
                }
              }
              if (result21 !== null) {
                var result5 = result21;
              } else {
                var result5 = null;;
              };
            }
            if (result5 !== null) {
              if (input.substr(pos, 1) === "L") {
                var result20 = "L";
                pos += 1;
              } else {
                var result20 = null;
                if (reportMatchFailures) {
                  matchFailed("\"L\"");
                }
              }
              if (result20 !== null) {
                var result6 = result20;
              } else {
                if (input.substr(pos, 1) === "l") {
                  var result19 = "l";
                  pos += 1;
                } else {
                  var result19 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"l\"");
                  }
                }
                if (result19 !== null) {
                  var result6 = result19;
                } else {
                  var result6 = null;;
                };
              }
              if (result6 !== null) {
                if (input.substr(pos, 1) === "T") {
                  var result18 = "T";
                  pos += 1;
                } else {
                  var result18 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"T\"");
                  }
                }
                if (result18 !== null) {
                  var result7 = result18;
                } else {
                  if (input.substr(pos, 1) === "t") {
                    var result17 = "t";
                    pos += 1;
                  } else {
                    var result17 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"t\"");
                    }
                  }
                  if (result17 !== null) {
                    var result7 = result17;
                  } else {
                    var result7 = null;;
                  };
                }
                if (result7 !== null) {
                  if (input.substr(pos, 1) === "E") {
                    var result16 = "E";
                    pos += 1;
                  } else {
                    var result16 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"E\"");
                    }
                  }
                  if (result16 !== null) {
                    var result8 = result16;
                  } else {
                    if (input.substr(pos, 1) === "e") {
                      var result15 = "e";
                      pos += 1;
                    } else {
                      var result15 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"e\"");
                      }
                    }
                    if (result15 !== null) {
                      var result8 = result15;
                    } else {
                      var result8 = null;;
                    };
                  }
                  if (result8 !== null) {
                    if (input.substr(pos, 1) === "R") {
                      var result14 = "R";
                      pos += 1;
                    } else {
                      var result14 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"R\"");
                      }
                    }
                    if (result14 !== null) {
                      var result9 = result14;
                    } else {
                      if (input.substr(pos, 1) === "r") {
                        var result13 = "r";
                        pos += 1;
                      } else {
                        var result13 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"r\"");
                        }
                      }
                      if (result13 !== null) {
                        var result9 = result13;
                      } else {
                        var result9 = null;;
                      };
                    }
                    if (result9 !== null) {
                      var result10 = [];
                      var result12 = parse_WS();
                      while (result12 !== null) {
                        result10.push(result12);
                        var result12 = parse_WS();
                      }
                      if (result10 !== null) {
                        var result11 = parse_Constraint();
                        if (result11 !== null) {
                          var result1 = [result3, result4, result5, result6, result7, result8, result9, result10, result11];
                        } else {
                          var result1 = null;
                          pos = savedPos1;
                        }
                      } else {
                        var result1 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(c) {
                return {token: 'filter',
                        value: c}
          })(result1[8])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[59] Filter");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_Constraint() {
        var cacheKey = 'Constraint@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var result3 = parse_BrackettedExpression();
        if (result3 !== null) {
          var result0 = result3;
        } else {
          var result2 = parse_BuiltInCall();
          if (result2 !== null) {
            var result0 = result2;
          } else {
            var result1 = parse_FunctionCall();
            if (result1 !== null) {
              var result0 = result1;
            } else {
              var result0 = null;;
            };
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[60] Constraint");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_FunctionCall() {
        var cacheKey = 'FunctionCall@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = parse_IRIref();
        if (result3 !== null) {
          var result4 = parse_ArgList();
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(i, args) {
                var fcall = {};
                fcall.token = "expression";
                fcall.expressionType = 'irireforfunction'
                fcall.iriref = i;
                fcall.args = args.value;
          
                return fcall;
          })(result1[0], result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[61] FunctionCall");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_ArgList() {
        var cacheKey = 'ArgList@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos3 = pos;
        var result14 = parse_NIL();
        var result15 = result14 !== null
          ? (function() {
                var args = {};
                args.token = 'args';
                args.value = [];
                return args;
          })()
          : null;
        if (result15 !== null) {
          var result13 = result15;
        } else {
          var result13 = null;
          pos = savedPos3;
        }
        if (result13 !== null) {
          var result0 = result13;
        } else {
          var savedPos0 = pos;
          var savedPos1 = pos;
          if (input.substr(pos, 1) === "(") {
            var result4 = "(";
            pos += 1;
          } else {
            var result4 = null;
            if (reportMatchFailures) {
              matchFailed("\"(\"");
            }
          }
          if (result4 !== null) {
            if (input.substr(pos, 8) === "DISTINCT") {
              var result12 = "DISTINCT";
              pos += 8;
            } else {
              var result12 = null;
              if (reportMatchFailures) {
                matchFailed("\"DISTINCT\"");
              }
            }
            var result5 = result12 !== null ? result12 : '';
            if (result5 !== null) {
              var result6 = parse_ConditionalOrExpression();
              if (result6 !== null) {
                var result7 = [];
                var savedPos2 = pos;
                if (input.substr(pos, 1) === ",") {
                  var result10 = ",";
                  pos += 1;
                } else {
                  var result10 = null;
                  if (reportMatchFailures) {
                    matchFailed("\",\"");
                  }
                }
                if (result10 !== null) {
                  var result11 = parse_ConditionalOrExpression();
                  if (result11 !== null) {
                    var result9 = [result10, result11];
                  } else {
                    var result9 = null;
                    pos = savedPos2;
                  }
                } else {
                  var result9 = null;
                  pos = savedPos2;
                }
                while (result9 !== null) {
                  result7.push(result9);
                  var savedPos2 = pos;
                  if (input.substr(pos, 1) === ",") {
                    var result10 = ",";
                    pos += 1;
                  } else {
                    var result10 = null;
                    if (reportMatchFailures) {
                      matchFailed("\",\"");
                    }
                  }
                  if (result10 !== null) {
                    var result11 = parse_ConditionalOrExpression();
                    if (result11 !== null) {
                      var result9 = [result10, result11];
                    } else {
                      var result9 = null;
                      pos = savedPos2;
                    }
                  } else {
                    var result9 = null;
                    pos = savedPos2;
                  }
                }
                if (result7 !== null) {
                  if (input.substr(pos, 1) === ")") {
                    var result8 = ")";
                    pos += 1;
                  } else {
                    var result8 = null;
                    if (reportMatchFailures) {
                      matchFailed("\")\"");
                    }
                  }
                  if (result8 !== null) {
                    var result2 = [result4, result5, result6, result7, result8];
                  } else {
                    var result2 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result2 = null;
                  pos = savedPos1;
                }
              } else {
                var result2 = null;
                pos = savedPos1;
              }
            } else {
              var result2 = null;
              pos = savedPos1;
            }
          } else {
            var result2 = null;
            pos = savedPos1;
          }
          var result3 = result2 !== null
            ? (function(d, e, es) {
                  cleanEx = [];
            
                  for(var i=0; i<es.length; i++) {
                      cleanEx.push(es[i][1]);
                  }
                  var args = {};
                  args.token = 'args';
                  args.value = [e].concat(cleanEx);
            
                  if(d==="DISTINCT") {
                      args.distinct = true;
                  } else {
                      args.distinct = false;
                  }
            
                  return args;
            })(result2[1], result2[2], result2[3])
            : null;
          if (result3 !== null) {
            var result1 = result3;
          } else {
            var result1 = null;
            pos = savedPos0;
          }
          if (result1 !== null) {
            var result0 = result1;
          } else {
            var result0 = null;;
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[62] ArgList");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_ExpressionList() {
        var cacheKey = 'ExpressionList@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos3 = pos;
        var result12 = parse_NIL();
        var result13 = result12 !== null
          ? (function() {
                var args = {};
                args.token = 'args';
                args.value = [];
                return args;
          })()
          : null;
        if (result13 !== null) {
          var result11 = result13;
        } else {
          var result11 = null;
          pos = savedPos3;
        }
        if (result11 !== null) {
          var result0 = result11;
        } else {
          var savedPos0 = pos;
          var savedPos1 = pos;
          if (input.substr(pos, 1) === "(") {
            var result4 = "(";
            pos += 1;
          } else {
            var result4 = null;
            if (reportMatchFailures) {
              matchFailed("\"(\"");
            }
          }
          if (result4 !== null) {
            var result5 = parse_ConditionalOrExpression();
            if (result5 !== null) {
              var result6 = [];
              var savedPos2 = pos;
              if (input.substr(pos, 1) === ",") {
                var result9 = ",";
                pos += 1;
              } else {
                var result9 = null;
                if (reportMatchFailures) {
                  matchFailed("\",\"");
                }
              }
              if (result9 !== null) {
                var result10 = parse_ConditionalOrExpression();
                if (result10 !== null) {
                  var result8 = [result9, result10];
                } else {
                  var result8 = null;
                  pos = savedPos2;
                }
              } else {
                var result8 = null;
                pos = savedPos2;
              }
              while (result8 !== null) {
                result6.push(result8);
                var savedPos2 = pos;
                if (input.substr(pos, 1) === ",") {
                  var result9 = ",";
                  pos += 1;
                } else {
                  var result9 = null;
                  if (reportMatchFailures) {
                    matchFailed("\",\"");
                  }
                }
                if (result9 !== null) {
                  var result10 = parse_ConditionalOrExpression();
                  if (result10 !== null) {
                    var result8 = [result9, result10];
                  } else {
                    var result8 = null;
                    pos = savedPos2;
                  }
                } else {
                  var result8 = null;
                  pos = savedPos2;
                }
              }
              if (result6 !== null) {
                if (input.substr(pos, 1) === ")") {
                  var result7 = ")";
                  pos += 1;
                } else {
                  var result7 = null;
                  if (reportMatchFailures) {
                    matchFailed("\")\"");
                  }
                }
                if (result7 !== null) {
                  var result2 = [result4, result5, result6, result7];
                } else {
                  var result2 = null;
                  pos = savedPos1;
                }
              } else {
                var result2 = null;
                pos = savedPos1;
              }
            } else {
              var result2 = null;
              pos = savedPos1;
            }
          } else {
            var result2 = null;
            pos = savedPos1;
          }
          var result3 = result2 !== null
            ? (function(e, es) {
                  cleanEx = [];
            
                  for(var i=0; i<es.length; i++) {
                      cleanEx.push(es[i][1]);
                  }
                  var args = {};
                  args.token = 'args';
                  args.value = [e].concat(cleanEx);
            
                  return args;
            })(result2[1], result2[2])
            : null;
          if (result3 !== null) {
            var result1 = result3;
          } else {
            var result1 = null;
            pos = savedPos0;
          }
          if (result1 !== null) {
            var result0 = result1;
          } else {
            var result0 = null;;
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[63] ExpressionList");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_ConstructTemplate() {
        var cacheKey = 'ConstructTemplate@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "{") {
          var result3 = "{";
          pos += 1;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("\"{\"");
          }
        }
        if (result3 !== null) {
          var result4 = [];
          var result10 = parse_WS();
          while (result10 !== null) {
            result4.push(result10);
            var result10 = parse_WS();
          }
          if (result4 !== null) {
            var result9 = parse_ConstructTriples();
            var result5 = result9 !== null ? result9 : '';
            if (result5 !== null) {
              var result6 = [];
              var result8 = parse_WS();
              while (result8 !== null) {
                result6.push(result8);
                var result8 = parse_WS();
              }
              if (result6 !== null) {
                if (input.substr(pos, 1) === "}") {
                  var result7 = "}";
                  pos += 1;
                } else {
                  var result7 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"}\"");
                  }
                }
                if (result7 !== null) {
                  var result1 = [result3, result4, result5, result6, result7];
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(ts) {
                return ts;
          })(result1[2])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[64] ConstructTemplate");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_ConstructTriples() {
        var cacheKey = 'ConstructTriples@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = parse_TriplesSameSubject();
        if (result3 !== null) {
          var savedPos2 = pos;
          var result6 = [];
          var result12 = parse_WS();
          while (result12 !== null) {
            result6.push(result12);
            var result12 = parse_WS();
          }
          if (result6 !== null) {
            if (input.substr(pos, 1) === ".") {
              var result7 = ".";
              pos += 1;
            } else {
              var result7 = null;
              if (reportMatchFailures) {
                matchFailed("\".\"");
              }
            }
            if (result7 !== null) {
              var result8 = [];
              var result11 = parse_WS();
              while (result11 !== null) {
                result8.push(result11);
                var result11 = parse_WS();
              }
              if (result8 !== null) {
                var result10 = parse_ConstructTriples();
                var result9 = result10 !== null ? result10 : '';
                if (result9 !== null) {
                  var result5 = [result6, result7, result8, result9];
                } else {
                  var result5 = null;
                  pos = savedPos2;
                }
              } else {
                var result5 = null;
                pos = savedPos2;
              }
            } else {
              var result5 = null;
              pos = savedPos2;
            }
          } else {
            var result5 = null;
            pos = savedPos2;
          }
          var result4 = result5 !== null ? result5 : '';
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(b, bs) {
               var triples = b.triplesContext;
               var toTest = null;
                if(typeof(bs) === 'object') {
                      if(bs.length != null) {
                            if(bs[3].triplesContext!=null) {
                               triples = triples.concat(bs[3].triplesContext);
                        }
                     }
                }
          
               return {token:'triplestemplate',
                       triplesContext: triples}
          })(result1[0], result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[65] ConstructTriples");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_TriplesSameSubject() {
        var cacheKey = 'TriplesSameSubject@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos2 = pos;
        var savedPos3 = pos;
        var result13 = [];
        var result18 = parse_WS();
        while (result18 !== null) {
          result13.push(result18);
          var result18 = parse_WS();
        }
        if (result13 !== null) {
          var result14 = parse_VarOrTerm();
          if (result14 !== null) {
            var result15 = [];
            var result17 = parse_WS();
            while (result17 !== null) {
              result15.push(result17);
              var result17 = parse_WS();
            }
            if (result15 !== null) {
              var result16 = parse_PropertyListNotEmpty();
              if (result16 !== null) {
                var result11 = [result13, result14, result15, result16];
              } else {
                var result11 = null;
                pos = savedPos3;
              }
            } else {
              var result11 = null;
              pos = savedPos3;
            }
          } else {
            var result11 = null;
            pos = savedPos3;
          }
        } else {
          var result11 = null;
          pos = savedPos3;
        }
        var result12 = result11 !== null
          ? (function(s, pairs) {
                var triplesContext = pairs.triplesContext;
                var subject = s;
                if(pairs.pairs) {
                  for(var i=0; i< pairs.pairs.length; i++) {
                      var pair = pairs.pairs[i];
                      var triple = null;
                      if(subject.token && subject.token==='triplesnodecollection') {
                          triple = {subject: subject.chainSubject[0], predicate: pair[0], object: pair[1]}
                          triplesContext.push(triple);
                          triplesContext = triplesContext.concat(subject.triplesContext);
                      } else {
                          triple = {subject: subject, predicate: pair[0], object: pair[1]}
                          triplesContext.push(triple);
                      }
                  }
                }
          
                var token = {};
                token.token = "triplessamesubject";
                token.triplesContext = triplesContext;
                token.chainSubject = subject;
          
                return token;
            })(result11[1], result11[3])
          : null;
        if (result12 !== null) {
          var result10 = result12;
        } else {
          var result10 = null;
          pos = savedPos2;
        }
        if (result10 !== null) {
          var result0 = result10;
        } else {
          var savedPos0 = pos;
          var savedPos1 = pos;
          var result4 = [];
          var result9 = parse_WS();
          while (result9 !== null) {
            result4.push(result9);
            var result9 = parse_WS();
          }
          if (result4 !== null) {
            var result5 = parse_TriplesNode();
            if (result5 !== null) {
              var result6 = [];
              var result8 = parse_WS();
              while (result8 !== null) {
                result6.push(result8);
                var result8 = parse_WS();
              }
              if (result6 !== null) {
                var result7 = parse_PropertyList();
                if (result7 !== null) {
                  var result2 = [result4, result5, result6, result7];
                } else {
                  var result2 = null;
                  pos = savedPos1;
                }
              } else {
                var result2 = null;
                pos = savedPos1;
              }
            } else {
              var result2 = null;
              pos = savedPos1;
            }
          } else {
            var result2 = null;
            pos = savedPos1;
          }
          var result3 = result2 !== null
            ? (function(tn, pairs) {
                  var triplesContext = tn.triplesContext;
                  var subject = tn.chainSubject;
            
                  if(pairs.pairs) {
                    for(var i=0; i< pairs.pairs.length; i++) {
                        var pair = pairs.pairs[i];
                        if(tn.token === "triplesnodecollection") {
                            for(var j=0; j<subject.length; j++) {
                                var subj = subject[j];
                                if(subj.triplesContext != null) {
                                    var triple = {subject: subj.chainSubject, predicate: pair[0], object: pair[1]}
                                    triplesContext.concat(subj.triplesContext);
                                } else {
                                    var triple = {subject: subject[j], predicate: pair[0], object: pair[1]}
                                    triplesContext.push(triple);
                                }
                            }
                        } else {
                            var triple = {subject: subject, predicate: pair[0], object: pair[1]}
                            triplesContext.push(triple);
                        }
                    }
                  }
            
                  var token = {};
                  token.token = "triplessamesubject";
                  token.triplesContext = triplesContext;
                  token.chainSubject = subject;
            
                  return token;
              })(result2[1], result2[3])
            : null;
          if (result3 !== null) {
            var result1 = result3;
          } else {
            var result1 = null;
            pos = savedPos0;
          }
          if (result1 !== null) {
            var result0 = result1;
          } else {
            var result0 = null;;
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[66] TriplesSameSubject");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_PropertyListNotEmpty() {
        var cacheKey = 'PropertyListNotEmpty@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = parse_Verb();
        if (result3 !== null) {
          var result4 = [];
          var result19 = parse_WS();
          while (result19 !== null) {
            result4.push(result19);
            var result19 = parse_WS();
          }
          if (result4 !== null) {
            var result5 = parse_ObjectList();
            if (result5 !== null) {
              var result6 = [];
              var savedPos2 = pos;
              var result8 = [];
              var result18 = parse_WS();
              while (result18 !== null) {
                result8.push(result18);
                var result18 = parse_WS();
              }
              if (result8 !== null) {
                if (input.substr(pos, 1) === ";") {
                  var result9 = ";";
                  pos += 1;
                } else {
                  var result9 = null;
                  if (reportMatchFailures) {
                    matchFailed("\";\"");
                  }
                }
                if (result9 !== null) {
                  var result10 = [];
                  var result17 = parse_WS();
                  while (result17 !== null) {
                    result10.push(result17);
                    var result17 = parse_WS();
                  }
                  if (result10 !== null) {
                    var savedPos3 = pos;
                    var result13 = parse_Verb();
                    if (result13 !== null) {
                      var result14 = [];
                      var result16 = parse_WS();
                      while (result16 !== null) {
                        result14.push(result16);
                        var result16 = parse_WS();
                      }
                      if (result14 !== null) {
                        var result15 = parse_ObjectList();
                        if (result15 !== null) {
                          var result12 = [result13, result14, result15];
                        } else {
                          var result12 = null;
                          pos = savedPos3;
                        }
                      } else {
                        var result12 = null;
                        pos = savedPos3;
                      }
                    } else {
                      var result12 = null;
                      pos = savedPos3;
                    }
                    var result11 = result12 !== null ? result12 : '';
                    if (result11 !== null) {
                      var result7 = [result8, result9, result10, result11];
                    } else {
                      var result7 = null;
                      pos = savedPos2;
                    }
                  } else {
                    var result7 = null;
                    pos = savedPos2;
                  }
                } else {
                  var result7 = null;
                  pos = savedPos2;
                }
              } else {
                var result7 = null;
                pos = savedPos2;
              }
              while (result7 !== null) {
                result6.push(result7);
                var savedPos2 = pos;
                var result8 = [];
                var result18 = parse_WS();
                while (result18 !== null) {
                  result8.push(result18);
                  var result18 = parse_WS();
                }
                if (result8 !== null) {
                  if (input.substr(pos, 1) === ";") {
                    var result9 = ";";
                    pos += 1;
                  } else {
                    var result9 = null;
                    if (reportMatchFailures) {
                      matchFailed("\";\"");
                    }
                  }
                  if (result9 !== null) {
                    var result10 = [];
                    var result17 = parse_WS();
                    while (result17 !== null) {
                      result10.push(result17);
                      var result17 = parse_WS();
                    }
                    if (result10 !== null) {
                      var savedPos3 = pos;
                      var result13 = parse_Verb();
                      if (result13 !== null) {
                        var result14 = [];
                        var result16 = parse_WS();
                        while (result16 !== null) {
                          result14.push(result16);
                          var result16 = parse_WS();
                        }
                        if (result14 !== null) {
                          var result15 = parse_ObjectList();
                          if (result15 !== null) {
                            var result12 = [result13, result14, result15];
                          } else {
                            var result12 = null;
                            pos = savedPos3;
                          }
                        } else {
                          var result12 = null;
                          pos = savedPos3;
                        }
                      } else {
                        var result12 = null;
                        pos = savedPos3;
                      }
                      var result11 = result12 !== null ? result12 : '';
                      if (result11 !== null) {
                        var result7 = [result8, result9, result10, result11];
                      } else {
                        var result7 = null;
                        pos = savedPos2;
                      }
                    } else {
                      var result7 = null;
                      pos = savedPos2;
                    }
                  } else {
                    var result7 = null;
                    pos = savedPos2;
                  }
                } else {
                  var result7 = null;
                  pos = savedPos2;
                }
              }
              if (result6 !== null) {
                var result1 = [result3, result4, result5, result6];
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(v, ol, rest) {
                token = {}
                token.token = 'propertylist';
                var triplesContext = [];
                var pairs = [];
                var test = [];
          
                for( var i=0; i<ol.length; i++) {
          
                   if(ol[i].triplesContext != null) {
                       triplesContext = triplesContext.concat(ol[i].triplesContext);
                       if(ol[i].token==='triplesnodecollection' && ol[i].chainSubject.length != null) {
                           pairs.push([v, ol[i].chainSubject[0]]);
                       } else {
                           pairs.push([v, ol[i].chainSubject]);
                       }
          
                    } else {
                        pairs.push([v, ol[i]])
                    }
          
                }
          
          
                for(var i=0; i<rest.length; i++) {
                    var tok = rest[i][3];
                    var newVerb  = tok[0];
                    var newObjsList = tok[2] || [];
          
                    for(var j=0; j<newObjsList.length; j++) {
                     if(newObjsList[j].triplesContext != null) {
                        triplesContext = triplesContext.concat(newObjsList[j].triplesContext);
                       pairs.push([newVerb, newObjsList[j].chainSubject]);
                      } else {
                        pairs.push([newVerb, newObjsList[j]])
                      }
                    }
                }
          
                token.pairs = pairs;
                token.triplesContext = triplesContext;
          
                return token;
          
          })(result1[0], result1[2], result1[3])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[67] PropertyListNotEmpty");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_PropertyList() {
        var cacheKey = 'PropertyList@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var result1 = parse_PropertyListNotEmpty();
        var result0 = result1 !== null ? result1 : '';
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[68] PropertyList");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_ObjectList() {
        var cacheKey = 'ObjectList@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = parse_GraphNode();
        if (result3 !== null) {
          var result4 = [];
          var result11 = parse_WS();
          while (result11 !== null) {
            result4.push(result11);
            var result11 = parse_WS();
          }
          if (result4 !== null) {
            var result5 = [];
            var savedPos2 = pos;
            if (input.substr(pos, 1) === ",") {
              var result7 = ",";
              pos += 1;
            } else {
              var result7 = null;
              if (reportMatchFailures) {
                matchFailed("\",\"");
              }
            }
            if (result7 !== null) {
              var result8 = [];
              var result10 = parse_WS();
              while (result10 !== null) {
                result8.push(result10);
                var result10 = parse_WS();
              }
              if (result8 !== null) {
                var result9 = parse_GraphNode();
                if (result9 !== null) {
                  var result6 = [result7, result8, result9];
                } else {
                  var result6 = null;
                  pos = savedPos2;
                }
              } else {
                var result6 = null;
                pos = savedPos2;
              }
            } else {
              var result6 = null;
              pos = savedPos2;
            }
            while (result6 !== null) {
              result5.push(result6);
              var savedPos2 = pos;
              if (input.substr(pos, 1) === ",") {
                var result7 = ",";
                pos += 1;
              } else {
                var result7 = null;
                if (reportMatchFailures) {
                  matchFailed("\",\"");
                }
              }
              if (result7 !== null) {
                var result8 = [];
                var result10 = parse_WS();
                while (result10 !== null) {
                  result8.push(result10);
                  var result10 = parse_WS();
                }
                if (result8 !== null) {
                  var result9 = parse_GraphNode();
                  if (result9 !== null) {
                    var result6 = [result7, result8, result9];
                  } else {
                    var result6 = null;
                    pos = savedPos2;
                  }
                } else {
                  var result6 = null;
                  pos = savedPos2;
                }
              } else {
                var result6 = null;
                pos = savedPos2;
              }
            }
            if (result5 !== null) {
              var result1 = [result3, result4, result5];
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(obj, objs) {
          
                  var toReturn = [];
          
                  toReturn.push(obj);
          
                  for(var i=0; i<objs.length; i++) {
                      for(var j=0; j<objs[i].length; j++) {
                          if(typeof(objs[i][j])=="object" && objs[i][j].token != null) {
                              toReturn.push(objs[i][j]);
                          }
                      }
                  }
          
                  return toReturn;
              })(result1[0], result1[2])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[69] ObjectList");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_Verb() {
        var cacheKey = 'Verb@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var result4 = parse_VarOrIRIref();
        if (result4 !== null) {
          var result0 = result4;
        } else {
          var savedPos0 = pos;
          if (input.substr(pos, 1) === "a") {
            var result2 = "a";
            pos += 1;
          } else {
            var result2 = null;
            if (reportMatchFailures) {
              matchFailed("\"a\"");
            }
          }
          var result3 = result2 !== null
            ? (function() {
                  return{token: 'uri', prefix:null, suffix:null, value:"http://www.w3.org/1999/02/22-rdf-syntax-ns#type"}
              })()
            : null;
          if (result3 !== null) {
            var result1 = result3;
          } else {
            var result1 = null;
            pos = savedPos0;
          }
          if (result1 !== null) {
            var result0 = result1;
          } else {
            var result0 = null;;
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[71] Verb");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_PropertyListNotEmptyPath() {
        var cacheKey = 'PropertyListNotEmptyPath@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var result13 = parse_VerbPath();
        if (result13 !== null) {
          var result1 = result13;
        } else {
          var result12 = parse_Var();
          if (result12 !== null) {
            var result1 = result12;
          } else {
            var result1 = null;;
          };
        }
        if (result1 !== null) {
          var result2 = parse_ObjectList();
          if (result2 !== null) {
            var result3 = [];
            var savedPos1 = pos;
            if (input.substr(pos, 1) === ";") {
              var result5 = ";";
              pos += 1;
            } else {
              var result5 = null;
              if (reportMatchFailures) {
                matchFailed("\";\"");
              }
            }
            if (result5 !== null) {
              var savedPos2 = pos;
              var result11 = parse_VerbPath();
              if (result11 !== null) {
                var result8 = result11;
              } else {
                var result10 = parse_Var();
                if (result10 !== null) {
                  var result8 = result10;
                } else {
                  var result8 = null;;
                };
              }
              if (result8 !== null) {
                var result9 = parse_ObjectList();
                if (result9 !== null) {
                  var result7 = [result8, result9];
                } else {
                  var result7 = null;
                  pos = savedPos2;
                }
              } else {
                var result7 = null;
                pos = savedPos2;
              }
              var result6 = result7 !== null ? result7 : '';
              if (result6 !== null) {
                var result4 = [result5, result6];
              } else {
                var result4 = null;
                pos = savedPos1;
              }
            } else {
              var result4 = null;
              pos = savedPos1;
            }
            while (result4 !== null) {
              result3.push(result4);
              var savedPos1 = pos;
              if (input.substr(pos, 1) === ";") {
                var result5 = ";";
                pos += 1;
              } else {
                var result5 = null;
                if (reportMatchFailures) {
                  matchFailed("\";\"");
                }
              }
              if (result5 !== null) {
                var savedPos2 = pos;
                var result11 = parse_VerbPath();
                if (result11 !== null) {
                  var result8 = result11;
                } else {
                  var result10 = parse_Var();
                  if (result10 !== null) {
                    var result8 = result10;
                  } else {
                    var result8 = null;;
                  };
                }
                if (result8 !== null) {
                  var result9 = parse_ObjectList();
                  if (result9 !== null) {
                    var result7 = [result8, result9];
                  } else {
                    var result7 = null;
                    pos = savedPos2;
                  }
                } else {
                  var result7 = null;
                  pos = savedPos2;
                }
                var result6 = result7 !== null ? result7 : '';
                if (result6 !== null) {
                  var result4 = [result5, result6];
                } else {
                  var result4 = null;
                  pos = savedPos1;
                }
              } else {
                var result4 = null;
                pos = savedPos1;
              }
            }
            if (result3 !== null) {
              var result0 = [result1, result2, result3];
            } else {
              var result0 = null;
              pos = savedPos0;
            }
          } else {
            var result0 = null;
            pos = savedPos0;
          }
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[73] PropertyListNotEmptyPath");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_PropertyListPath() {
        var cacheKey = 'PropertyListPath@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var result1 = parse_PropertyListNotEmpty();
        var result0 = result1 !== null ? result1 : '';
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[74] PropertyListPath");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_VerbPath() {
        var cacheKey = 'VerbPath@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var result1 = parse_PathAlternative();
        var result2 = result1 !== null
          ? (function(p) {
                var path = {};
                path.token = 'path';
                path.value = p;
          
                return p;
          })(result1)
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[75]");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_PathAlternative() {
        var cacheKey = 'PathAlternative@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var result1 = parse_PathSequence();
        if (result1 !== null) {
          var result2 = [];
          var savedPos1 = pos;
          if (input.substr(pos, 1) === "|") {
            var result4 = "|";
            pos += 1;
          } else {
            var result4 = null;
            if (reportMatchFailures) {
              matchFailed("\"|\"");
            }
          }
          if (result4 !== null) {
            var result5 = parse_PathSequence();
            if (result5 !== null) {
              var result3 = [result4, result5];
            } else {
              var result3 = null;
              pos = savedPos1;
            }
          } else {
            var result3 = null;
            pos = savedPos1;
          }
          while (result3 !== null) {
            result2.push(result3);
            var savedPos1 = pos;
            if (input.substr(pos, 1) === "|") {
              var result4 = "|";
              pos += 1;
            } else {
              var result4 = null;
              if (reportMatchFailures) {
                matchFailed("\"|\"");
              }
            }
            if (result4 !== null) {
              var result5 = parse_PathSequence();
              if (result5 !== null) {
                var result3 = [result4, result5];
              } else {
                var result3 = null;
                pos = savedPos1;
              }
            } else {
              var result3 = null;
              pos = savedPos1;
            }
          }
          if (result2 !== null) {
            var result0 = [result1, result2];
          } else {
            var result0 = null;
            pos = savedPos0;
          }
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[78] PathAlternative");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_PathSequence() {
        var cacheKey = 'PathSequence@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var result1 = parse_PathEltOrInverse();
        if (result1 !== null) {
          var result2 = [];
          var savedPos1 = pos;
          if (input.substr(pos, 1) === "/") {
            var result4 = "/";
            pos += 1;
          } else {
            var result4 = null;
            if (reportMatchFailures) {
              matchFailed("\"/\"");
            }
          }
          if (result4 !== null) {
            var result5 = parse_PathEltOrInverse();
            if (result5 !== null) {
              var result3 = [result4, result5];
            } else {
              var result3 = null;
              pos = savedPos1;
            }
          } else {
            var result3 = null;
            pos = savedPos1;
          }
          while (result3 !== null) {
            result2.push(result3);
            var savedPos1 = pos;
            if (input.substr(pos, 1) === "/") {
              var result4 = "/";
              pos += 1;
            } else {
              var result4 = null;
              if (reportMatchFailures) {
                matchFailed("\"/\"");
              }
            }
            if (result4 !== null) {
              var result5 = parse_PathEltOrInverse();
              if (result5 !== null) {
                var result3 = [result4, result5];
              } else {
                var result3 = null;
                pos = savedPos1;
              }
            } else {
              var result3 = null;
              pos = savedPos1;
            }
          }
          if (result2 !== null) {
            var result0 = [result1, result2];
          } else {
            var result0 = null;
            pos = savedPos0;
          }
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[79] PathSequence");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_PathElt() {
        var cacheKey = 'PathElt@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var result1 = parse_PathPrimary();
        if (result1 !== null) {
          var result3 = parse_PathMod();
          var result2 = result3 !== null ? result3 : '';
          if (result2 !== null) {
            var result0 = [result1, result2];
          } else {
            var result0 = null;
            pos = savedPos0;
          }
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[88] PathElt");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_PathEltOrInverse() {
        var cacheKey = 'PathEltOrInverse@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var result4 = parse_PathElt();
        if (result4 !== null) {
          var result0 = result4;
        } else {
          var savedPos0 = pos;
          if (input.substr(pos, 1) === "^") {
            var result2 = "^";
            pos += 1;
          } else {
            var result2 = null;
            if (reportMatchFailures) {
              matchFailed("\"^\"");
            }
          }
          if (result2 !== null) {
            var result3 = parse_PathElt();
            if (result3 !== null) {
              var result1 = [result2, result3];
            } else {
              var result1 = null;
              pos = savedPos0;
            }
          } else {
            var result1 = null;
            pos = savedPos0;
          }
          if (result1 !== null) {
            var result0 = result1;
          } else {
            var result0 = null;;
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[81] PathEltOrInverse");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_PathMod() {
        var cacheKey = 'PathMod@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        if (input.substr(pos, 1) === "*") {
          var result21 = "*";
          pos += 1;
        } else {
          var result21 = null;
          if (reportMatchFailures) {
            matchFailed("\"*\"");
          }
        }
        if (result21 !== null) {
          var result0 = result21;
        } else {
          if (input.substr(pos, 1) === "?") {
            var result20 = "?";
            pos += 1;
          } else {
            var result20 = null;
            if (reportMatchFailures) {
              matchFailed("\"?\"");
            }
          }
          if (result20 !== null) {
            var result0 = result20;
          } else {
            if (input.substr(pos, 1) === "+") {
              var result19 = "+";
              pos += 1;
            } else {
              var result19 = null;
              if (reportMatchFailures) {
                matchFailed("\"+\"");
              }
            }
            if (result19 !== null) {
              var result0 = result19;
            } else {
              var savedPos0 = pos;
              if (input.substr(pos, 1) === "{") {
                var result2 = "{";
                pos += 1;
              } else {
                var result2 = null;
                if (reportMatchFailures) {
                  matchFailed("\"{\"");
                }
              }
              if (result2 !== null) {
                var savedPos2 = pos;
                var result9 = parse_INTEGER();
                if (result9 !== null) {
                  var savedPos3 = pos;
                  if (input.substr(pos, 1) === ",") {
                    var result13 = ",";
                    pos += 1;
                  } else {
                    var result13 = null;
                    if (reportMatchFailures) {
                      matchFailed("\",\"");
                    }
                  }
                  if (result13 !== null) {
                    if (input.substr(pos, 1) === "}") {
                      var result18 = "}";
                      pos += 1;
                    } else {
                      var result18 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"}\"");
                      }
                    }
                    if (result18 !== null) {
                      var result14 = result18;
                    } else {
                      var savedPos4 = pos;
                      var result16 = parse_INTEGER();
                      if (result16 !== null) {
                        if (input.substr(pos, 1) === "}") {
                          var result17 = "}";
                          pos += 1;
                        } else {
                          var result17 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"}\"");
                          }
                        }
                        if (result17 !== null) {
                          var result15 = [result16, result17];
                        } else {
                          var result15 = null;
                          pos = savedPos4;
                        }
                      } else {
                        var result15 = null;
                        pos = savedPos4;
                      }
                      if (result15 !== null) {
                        var result14 = result15;
                      } else {
                        var result14 = null;;
                      };
                    }
                    if (result14 !== null) {
                      var result12 = [result13, result14];
                    } else {
                      var result12 = null;
                      pos = savedPos3;
                    }
                  } else {
                    var result12 = null;
                    pos = savedPos3;
                  }
                  if (result12 !== null) {
                    var result10 = result12;
                  } else {
                    if (input.substr(pos, 1) === "}") {
                      var result11 = "}";
                      pos += 1;
                    } else {
                      var result11 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"}\"");
                      }
                    }
                    if (result11 !== null) {
                      var result10 = result11;
                    } else {
                      var result10 = null;;
                    };
                  }
                  if (result10 !== null) {
                    var result8 = [result9, result10];
                  } else {
                    var result8 = null;
                    pos = savedPos2;
                  }
                } else {
                  var result8 = null;
                  pos = savedPos2;
                }
                if (result8 !== null) {
                  var result3 = result8;
                } else {
                  var savedPos1 = pos;
                  if (input.substr(pos, 1) === ",") {
                    var result5 = ",";
                    pos += 1;
                  } else {
                    var result5 = null;
                    if (reportMatchFailures) {
                      matchFailed("\",\"");
                    }
                  }
                  if (result5 !== null) {
                    var result6 = parse_INTEGER();
                    if (result6 !== null) {
                      if (input.substr(pos, 1) === "}") {
                        var result7 = "}";
                        pos += 1;
                      } else {
                        var result7 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"}\"");
                        }
                      }
                      if (result7 !== null) {
                        var result4 = [result5, result6, result7];
                      } else {
                        var result4 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result4 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result4 = null;
                    pos = savedPos1;
                  }
                  if (result4 !== null) {
                    var result3 = result4;
                  } else {
                    var result3 = null;;
                  };
                }
                if (result3 !== null) {
                  var result1 = [result2, result3];
                } else {
                  var result1 = null;
                  pos = savedPos0;
                }
              } else {
                var result1 = null;
                pos = savedPos0;
              }
              if (result1 !== null) {
                var result0 = result1;
              } else {
                var result0 = null;;
              };
            };
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[82] PathMod");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_PathPrimary() {
        var cacheKey = 'PathPrimary@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var result9 = parse_IRIref();
        if (result9 !== null) {
          var result0 = result9;
        } else {
          if (input.substr(pos, 1) === "a") {
            var result8 = "a";
            pos += 1;
          } else {
            var result8 = null;
            if (reportMatchFailures) {
              matchFailed("\"a\"");
            }
          }
          if (result8 !== null) {
            var result0 = result8;
          } else {
            var savedPos1 = pos;
            if (input.substr(pos, 1) === "!") {
              var result6 = "!";
              pos += 1;
            } else {
              var result6 = null;
              if (reportMatchFailures) {
                matchFailed("\"!\"");
              }
            }
            if (result6 !== null) {
              var result7 = parse_PathNegatedPropertySet();
              if (result7 !== null) {
                var result5 = [result6, result7];
              } else {
                var result5 = null;
                pos = savedPos1;
              }
            } else {
              var result5 = null;
              pos = savedPos1;
            }
            if (result5 !== null) {
              var result0 = result5;
            } else {
              var savedPos0 = pos;
              if (input.substr(pos, 1) === "(") {
                var result2 = "(";
                pos += 1;
              } else {
                var result2 = null;
                if (reportMatchFailures) {
                  matchFailed("\"(\"");
                }
              }
              if (result2 !== null) {
                var result3 = parse_PathAlternative();
                if (result3 !== null) {
                  if (input.substr(pos, 1) === ")") {
                    var result4 = ")";
                    pos += 1;
                  } else {
                    var result4 = null;
                    if (reportMatchFailures) {
                      matchFailed("\")\"");
                    }
                  }
                  if (result4 !== null) {
                    var result1 = [result2, result3, result4];
                  } else {
                    var result1 = null;
                    pos = savedPos0;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos0;
                }
              } else {
                var result1 = null;
                pos = savedPos0;
              }
              if (result1 !== null) {
                var result0 = result1;
              } else {
                var result0 = null;;
              };
            };
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[83] PathPrimary");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_PathNegatedPropertySet() {
        var cacheKey = 'PathNegatedPropertySet@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var result11 = parse_PathOneInPropertySet();
        if (result11 !== null) {
          var result0 = result11;
        } else {
          var savedPos0 = pos;
          if (input.substr(pos, 1) === "(") {
            var result2 = "(";
            pos += 1;
          } else {
            var result2 = null;
            if (reportMatchFailures) {
              matchFailed("\"(\"");
            }
          }
          if (result2 !== null) {
            var savedPos1 = pos;
            var result6 = parse_PathOneInPropertySet();
            if (result6 !== null) {
              var result7 = [];
              var savedPos2 = pos;
              if (input.substr(pos, 1) === "|") {
                var result9 = "|";
                pos += 1;
              } else {
                var result9 = null;
                if (reportMatchFailures) {
                  matchFailed("\"|\"");
                }
              }
              if (result9 !== null) {
                var result10 = parse_PathOneInPropertySet();
                if (result10 !== null) {
                  var result8 = [result9, result10];
                } else {
                  var result8 = null;
                  pos = savedPos2;
                }
              } else {
                var result8 = null;
                pos = savedPos2;
              }
              while (result8 !== null) {
                result7.push(result8);
                var savedPos2 = pos;
                if (input.substr(pos, 1) === "|") {
                  var result9 = "|";
                  pos += 1;
                } else {
                  var result9 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"|\"");
                  }
                }
                if (result9 !== null) {
                  var result10 = parse_PathOneInPropertySet();
                  if (result10 !== null) {
                    var result8 = [result9, result10];
                  } else {
                    var result8 = null;
                    pos = savedPos2;
                  }
                } else {
                  var result8 = null;
                  pos = savedPos2;
                }
              }
              if (result7 !== null) {
                var result5 = [result6, result7];
              } else {
                var result5 = null;
                pos = savedPos1;
              }
            } else {
              var result5 = null;
              pos = savedPos1;
            }
            var result3 = result5 !== null ? result5 : '';
            if (result3 !== null) {
              if (input.substr(pos, 1) === ")") {
                var result4 = ")";
                pos += 1;
              } else {
                var result4 = null;
                if (reportMatchFailures) {
                  matchFailed("\")\"");
                }
              }
              if (result4 !== null) {
                var result1 = [result2, result3, result4];
              } else {
                var result1 = null;
                pos = savedPos0;
              }
            } else {
              var result1 = null;
              pos = savedPos0;
            }
          } else {
            var result1 = null;
            pos = savedPos0;
          }
          if (result1 !== null) {
            var result0 = result1;
          } else {
            var result0 = null;;
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_PathOneInPropertySet() {
        var cacheKey = 'PathOneInPropertySet@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var result7 = parse_IRIref();
        if (result7 !== null) {
          var result0 = result7;
        } else {
          if (input.substr(pos, 1) === "a") {
            var result6 = "a";
            pos += 1;
          } else {
            var result6 = null;
            if (reportMatchFailures) {
              matchFailed("\"a\"");
            }
          }
          if (result6 !== null) {
            var result0 = result6;
          } else {
            var savedPos0 = pos;
            if (input.substr(pos, 1) === "^") {
              var result2 = "^";
              pos += 1;
            } else {
              var result2 = null;
              if (reportMatchFailures) {
                matchFailed("\"^\"");
              }
            }
            if (result2 !== null) {
              var result5 = parse_IRIref();
              if (result5 !== null) {
                var result3 = result5;
              } else {
                if (input.substr(pos, 1) === "a") {
                  var result4 = "a";
                  pos += 1;
                } else {
                  var result4 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"a\"");
                  }
                }
                if (result4 !== null) {
                  var result3 = result4;
                } else {
                  var result3 = null;;
                };
              }
              if (result3 !== null) {
                var result1 = [result2, result3];
              } else {
                var result1 = null;
                pos = savedPos0;
              }
            } else {
              var result1 = null;
              pos = savedPos0;
            }
            if (result1 !== null) {
              var result0 = result1;
            } else {
              var result0 = null;;
            };
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[85] PathOneInPropertySet");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_TriplesNode() {
        var cacheKey = 'TriplesNode@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var result3 = parse_Collection();
        var result4 = result3 !== null
          ? (function(c) {
                triplesContext = [];
                chainSubject = [];
          
                var triple = null;
          
                // catch NIL
                /*
                if(c.length == 1 && c[0].token && c[0].token === 'nil') {
                    GlobalBlankNodeCounter++;
                    return  {token: "triplesnodecollection", 
                             triplesContext:[{subject: {token:'blank', label:("_:"+GlobalBlankNodeCounter)},
                                              predicate:{token:'uri', prefix:null, suffix:null, value:'http://www.w3.org/1999/02/22-rdf-syntax-ns#rest'},
                                              object:  {token:'blank', label:("_:"+(GlobalBlankNodeCounter+1))}}], 
                             chainSubject:{token:'blank', label:("_:"+GlobalBlankNodeCounter)}};
          
                }
                */
          
                // other cases
                for(var i=0; i<c.length; i++) {
                    GlobalBlankNodeCounter++;
                    //_:b0  rdf:first  1 ;
                    //rdf:rest   _:b1 .
                    var nextObject = null;
                    if(c[i].chainSubject == null && c[i].triplesContext == null) {
                        nextObject = c[i];
                    } else {
                        nextObject = c[i].chainSubject;
                        triplesContext = triplesContext.concat(nextSubject.triplesContext);
                    }
                    var currentSubject = null;
                    triple = {subject: {token:'blank', label:("_:"+GlobalBlankNodeCounter)},
                              predicate:{token:'uri', prefix:null, suffix:null, value:'http://www.w3.org/1999/02/22-rdf-syntax-ns#first'},
                              object:nextObject };
          
                    if(i==0) {
                        chainSubject.push(triple.subject);
                    }
          
                    triplesContext.push(triple);
          
                    if(i===(c.length-1)) {
                        triple = {subject: {token:'blank', label:("_:"+GlobalBlankNodeCounter)},
                                  predicate:{token:'uri', prefix:null, suffix:null, value:'http://www.w3.org/1999/02/22-rdf-syntax-ns#rest'},
                                  object:   {token:'uri', prefix:null, suffix:null, value:'http://www.w3.org/1999/02/22-rdf-syntax-ns#nil'}};
                    } else {
                        triple = {subject: {token:'blank', label:("_:"+GlobalBlankNodeCounter)},
                                  predicate:{token:'uri', prefix:null, suffix:null, value:'http://www.w3.org/1999/02/22-rdf-syntax-ns#rest'},
                                  object:  {token:'blank', label:("_:"+(GlobalBlankNodeCounter+1))} };
                    }
          
                    triplesContext.push(triple);
                }
          
                return {token:"triplesnodecollection", triplesContext:triplesContext, chainSubject:chainSubject};
          })(result3)
          : null;
        if (result4 !== null) {
          var result2 = result4;
        } else {
          var result2 = null;
          pos = savedPos0;
        }
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result1 = parse_BlankNodePropertyList();
          if (result1 !== null) {
            var result0 = result1;
          } else {
            var result0 = null;;
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[87] TriplesNode");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_BlankNodePropertyList() {
        var cacheKey = 'BlankNodePropertyList@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = [];
        var result13 = parse_WS();
        while (result13 !== null) {
          result3.push(result13);
          var result13 = parse_WS();
        }
        if (result3 !== null) {
          if (input.substr(pos, 1) === "[") {
            var result4 = "[";
            pos += 1;
          } else {
            var result4 = null;
            if (reportMatchFailures) {
              matchFailed("\"[\"");
            }
          }
          if (result4 !== null) {
            var result5 = [];
            var result12 = parse_WS();
            while (result12 !== null) {
              result5.push(result12);
              var result12 = parse_WS();
            }
            if (result5 !== null) {
              var result6 = parse_PropertyListNotEmpty();
              if (result6 !== null) {
                var result7 = [];
                var result11 = parse_WS();
                while (result11 !== null) {
                  result7.push(result11);
                  var result11 = parse_WS();
                }
                if (result7 !== null) {
                  if (input.substr(pos, 1) === "]") {
                    var result8 = "]";
                    pos += 1;
                  } else {
                    var result8 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"]\"");
                    }
                  }
                  if (result8 !== null) {
                    var result9 = [];
                    var result10 = parse_WS();
                    while (result10 !== null) {
                      result9.push(result10);
                      var result10 = parse_WS();
                    }
                    if (result9 !== null) {
                      var result1 = [result3, result4, result5, result6, result7, result8, result9];
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(pl) {
          
                GlobalBlankNodeCounter++;
                var subject = {token:'blank', label:''+GlobalBlankNodeCounter};
                var newTriples =  [];
          
                for(var i=0; i< pl.pairs.length; i++) {
                    var pair = pl.pairs[i];
                    var triple = {}
                    triple.subject = subject;
                    triple.predicate = pair[0];
                    triple.object = pair[1];
                    newTriples.push(triple);
                }
          
                return {token: 'triplesnode',
                        kind: 'blanknodepropertylist',
                        triplesContext: pl.triplesContext.concat(newTriples),
                        chainSubject: subject};
          })(result1[3])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[88] BlankNodePropertyList");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_Collection() {
        var cacheKey = 'Collection@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = [];
        var result14 = parse_WS();
        while (result14 !== null) {
          result3.push(result14);
          var result14 = parse_WS();
        }
        if (result3 !== null) {
          if (input.substr(pos, 1) === "(") {
            var result4 = "(";
            pos += 1;
          } else {
            var result4 = null;
            if (reportMatchFailures) {
              matchFailed("\"(\"");
            }
          }
          if (result4 !== null) {
            var result5 = [];
            var result13 = parse_WS();
            while (result13 !== null) {
              result5.push(result13);
              var result13 = parse_WS();
            }
            if (result5 !== null) {
              var result12 = parse_GraphNode();
              if (result12 !== null) {
                var result6 = [];
                while (result12 !== null) {
                  result6.push(result12);
                  var result12 = parse_GraphNode();
                }
              } else {
                var result6 = null;
              }
              if (result6 !== null) {
                var result7 = [];
                var result11 = parse_WS();
                while (result11 !== null) {
                  result7.push(result11);
                  var result11 = parse_WS();
                }
                if (result7 !== null) {
                  if (input.substr(pos, 1) === ")") {
                    var result8 = ")";
                    pos += 1;
                  } else {
                    var result8 = null;
                    if (reportMatchFailures) {
                      matchFailed("\")\"");
                    }
                  }
                  if (result8 !== null) {
                    var result9 = [];
                    var result10 = parse_WS();
                    while (result10 !== null) {
                      result9.push(result10);
                      var result10 = parse_WS();
                    }
                    if (result9 !== null) {
                      var result1 = [result3, result4, result5, result6, result7, result8, result9];
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(gn) {
                return gn;
          })(result1[3])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[89] Collection");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_GraphNode() {
        var cacheKey = 'GraphNode@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos2 = pos;
        var result10 = [];
        var result14 = parse_WS();
        while (result14 !== null) {
          result10.push(result14);
          var result14 = parse_WS();
        }
        if (result10 !== null) {
          var result11 = parse_VarOrTerm();
          if (result11 !== null) {
            var result12 = [];
            var result13 = parse_WS();
            while (result13 !== null) {
              result12.push(result13);
              var result13 = parse_WS();
            }
            if (result12 !== null) {
              var result9 = [result10, result11, result12];
            } else {
              var result9 = null;
              pos = savedPos2;
            }
          } else {
            var result9 = null;
            pos = savedPos2;
          }
        } else {
          var result9 = null;
          pos = savedPos2;
        }
        if (result9 !== null) {
          var result1 = result9;
        } else {
          var savedPos1 = pos;
          var result4 = [];
          var result8 = parse_WS();
          while (result8 !== null) {
            result4.push(result8);
            var result8 = parse_WS();
          }
          if (result4 !== null) {
            var result5 = parse_TriplesNode();
            if (result5 !== null) {
              var result6 = [];
              var result7 = parse_WS();
              while (result7 !== null) {
                result6.push(result7);
                var result7 = parse_WS();
              }
              if (result6 !== null) {
                var result3 = [result4, result5, result6];
              } else {
                var result3 = null;
                pos = savedPos1;
              }
            } else {
              var result3 = null;
              pos = savedPos1;
            }
          } else {
            var result3 = null;
            pos = savedPos1;
          }
          if (result3 !== null) {
            var result1 = result3;
          } else {
            var result1 = null;;
          };
        }
        var result2 = result1 !== null
          ? (function(gn) {
            return gn[1];
          })(result1)
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[90] GraphNode");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_VarOrTerm() {
        var cacheKey = 'VarOrTerm@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var result2 = parse_Var();
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result1 = parse_GraphTerm();
          if (result1 !== null) {
            var result0 = result1;
          } else {
            var result0 = null;;
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[91] VarOrTerm");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_VarOrIRIref() {
        var cacheKey = 'VarOrIRIref@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var result2 = parse_Var();
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result1 = parse_IRIref();
          if (result1 !== null) {
            var result0 = result1;
          } else {
            var result0 = null;;
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[92] VarOrIRIref");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_Var() {
        var cacheKey = 'Var@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var result4 = parse_VAR1();
        if (result4 !== null) {
          var result1 = result4;
        } else {
          var result3 = parse_VAR2();
          if (result3 !== null) {
            var result1 = result3;
          } else {
            var result1 = null;;
          };
        }
        var result2 = result1 !== null
          ? (function(v) {
                var term = {};
                term.token = 'var';
                term.value = v;
                return term;
            })(result1)
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[93] Var");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_GraphTerm() {
        var cacheKey = 'GraphTerm@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var result6 = parse_IRIref();
        if (result6 !== null) {
          var result0 = result6;
        } else {
          var result5 = parse_RDFLiteral();
          if (result5 !== null) {
            var result0 = result5;
          } else {
            var result4 = parse_NumericLiteral();
            if (result4 !== null) {
              var result0 = result4;
            } else {
              var result3 = parse_BooleanLiteral();
              if (result3 !== null) {
                var result0 = result3;
              } else {
                var result2 = parse_BlankNode();
                if (result2 !== null) {
                  var result0 = result2;
                } else {
                  var result1 = parse_NIL();
                  if (result1 !== null) {
                    var result0 = result1;
                  } else {
                    var result0 = null;;
                  };
                };
              };
            };
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[94] GraphTerm");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_ConditionalOrExpression() {
        var cacheKey = 'ConditionalOrExpression@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = parse_ConditionalAndExpression();
        if (result3 !== null) {
          var result4 = [];
          var savedPos2 = pos;
          var result6 = [];
          var result11 = parse_WS();
          while (result11 !== null) {
            result6.push(result11);
            var result11 = parse_WS();
          }
          if (result6 !== null) {
            if (input.substr(pos, 2) === "||") {
              var result7 = "||";
              pos += 2;
            } else {
              var result7 = null;
              if (reportMatchFailures) {
                matchFailed("\"||\"");
              }
            }
            if (result7 !== null) {
              var result8 = [];
              var result10 = parse_WS();
              while (result10 !== null) {
                result8.push(result10);
                var result10 = parse_WS();
              }
              if (result8 !== null) {
                var result9 = parse_ConditionalAndExpression();
                if (result9 !== null) {
                  var result5 = [result6, result7, result8, result9];
                } else {
                  var result5 = null;
                  pos = savedPos2;
                }
              } else {
                var result5 = null;
                pos = savedPos2;
              }
            } else {
              var result5 = null;
              pos = savedPos2;
            }
          } else {
            var result5 = null;
            pos = savedPos2;
          }
          while (result5 !== null) {
            result4.push(result5);
            var savedPos2 = pos;
            var result6 = [];
            var result11 = parse_WS();
            while (result11 !== null) {
              result6.push(result11);
              var result11 = parse_WS();
            }
            if (result6 !== null) {
              if (input.substr(pos, 2) === "||") {
                var result7 = "||";
                pos += 2;
              } else {
                var result7 = null;
                if (reportMatchFailures) {
                  matchFailed("\"||\"");
                }
              }
              if (result7 !== null) {
                var result8 = [];
                var result10 = parse_WS();
                while (result10 !== null) {
                  result8.push(result10);
                  var result10 = parse_WS();
                }
                if (result8 !== null) {
                  var result9 = parse_ConditionalAndExpression();
                  if (result9 !== null) {
                    var result5 = [result6, result7, result8, result9];
                  } else {
                    var result5 = null;
                    pos = savedPos2;
                  }
                } else {
                  var result5 = null;
                  pos = savedPos2;
                }
              } else {
                var result5 = null;
                pos = savedPos2;
              }
            } else {
              var result5 = null;
              pos = savedPos2;
            }
          }
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(v, vs) {
                if(vs.length === 0) {
                    return v;
                }
          
                var exp = {};
                exp.token = "expression";
                exp.expressionType = "conditionalor";
                var ops = [v];
          
                for(var i=0; i<vs.length; i++) {
                    ops.push(vs[i][3]);
                }
          
                exp.operands = ops;
          
                return exp;
          })(result1[0], result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[96] ConditionalOrExpression");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_ConditionalAndExpression() {
        var cacheKey = 'ConditionalAndExpression@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = parse_RelationalExpression();
        if (result3 !== null) {
          var result4 = [];
          var savedPos2 = pos;
          var result6 = [];
          var result11 = parse_WS();
          while (result11 !== null) {
            result6.push(result11);
            var result11 = parse_WS();
          }
          if (result6 !== null) {
            if (input.substr(pos, 2) === "&&") {
              var result7 = "&&";
              pos += 2;
            } else {
              var result7 = null;
              if (reportMatchFailures) {
                matchFailed("\"&&\"");
              }
            }
            if (result7 !== null) {
              var result8 = [];
              var result10 = parse_WS();
              while (result10 !== null) {
                result8.push(result10);
                var result10 = parse_WS();
              }
              if (result8 !== null) {
                var result9 = parse_RelationalExpression();
                if (result9 !== null) {
                  var result5 = [result6, result7, result8, result9];
                } else {
                  var result5 = null;
                  pos = savedPos2;
                }
              } else {
                var result5 = null;
                pos = savedPos2;
              }
            } else {
              var result5 = null;
              pos = savedPos2;
            }
          } else {
            var result5 = null;
            pos = savedPos2;
          }
          while (result5 !== null) {
            result4.push(result5);
            var savedPos2 = pos;
            var result6 = [];
            var result11 = parse_WS();
            while (result11 !== null) {
              result6.push(result11);
              var result11 = parse_WS();
            }
            if (result6 !== null) {
              if (input.substr(pos, 2) === "&&") {
                var result7 = "&&";
                pos += 2;
              } else {
                var result7 = null;
                if (reportMatchFailures) {
                  matchFailed("\"&&\"");
                }
              }
              if (result7 !== null) {
                var result8 = [];
                var result10 = parse_WS();
                while (result10 !== null) {
                  result8.push(result10);
                  var result10 = parse_WS();
                }
                if (result8 !== null) {
                  var result9 = parse_RelationalExpression();
                  if (result9 !== null) {
                    var result5 = [result6, result7, result8, result9];
                  } else {
                    var result5 = null;
                    pos = savedPos2;
                  }
                } else {
                  var result5 = null;
                  pos = savedPos2;
                }
              } else {
                var result5 = null;
                pos = savedPos2;
              }
            } else {
              var result5 = null;
              pos = savedPos2;
            }
          }
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(v, vs) {
                if(vs.length === 0) {
                    return v;
                }
                var exp = {};
                exp.token = "expression";
                exp.expressionType = "conditionaland";
                var ops = [v];
          
                for(var i=0; i<vs.length; i++) {
                    ops.push(vs[i][3]);
                }
          
                exp.operands = ops;
          
                return exp;
          })(result1[0], result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[97] ConditionalAndExpression");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_RelationalExpression() {
        var cacheKey = 'RelationalExpression@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = parse_AdditiveExpression();
        if (result3 !== null) {
          var result4 = [];
          var savedPos7 = pos;
          var result42 = [];
          var result47 = parse_WS();
          while (result47 !== null) {
            result42.push(result47);
            var result47 = parse_WS();
          }
          if (result42 !== null) {
            if (input.substr(pos, 1) === "=") {
              var result43 = "=";
              pos += 1;
            } else {
              var result43 = null;
              if (reportMatchFailures) {
                matchFailed("\"=\"");
              }
            }
            if (result43 !== null) {
              var result44 = [];
              var result46 = parse_WS();
              while (result46 !== null) {
                result44.push(result46);
                var result46 = parse_WS();
              }
              if (result44 !== null) {
                var result45 = parse_AdditiveExpression();
                if (result45 !== null) {
                  var result41 = [result42, result43, result44, result45];
                } else {
                  var result41 = null;
                  pos = savedPos7;
                }
              } else {
                var result41 = null;
                pos = savedPos7;
              }
            } else {
              var result41 = null;
              pos = savedPos7;
            }
          } else {
            var result41 = null;
            pos = savedPos7;
          }
          if (result41 !== null) {
            var result5 = result41;
          } else {
            var savedPos6 = pos;
            var result35 = [];
            var result40 = parse_WS();
            while (result40 !== null) {
              result35.push(result40);
              var result40 = parse_WS();
            }
            if (result35 !== null) {
              if (input.substr(pos, 2) === "!=") {
                var result36 = "!=";
                pos += 2;
              } else {
                var result36 = null;
                if (reportMatchFailures) {
                  matchFailed("\"!=\"");
                }
              }
              if (result36 !== null) {
                var result37 = [];
                var result39 = parse_WS();
                while (result39 !== null) {
                  result37.push(result39);
                  var result39 = parse_WS();
                }
                if (result37 !== null) {
                  var result38 = parse_AdditiveExpression();
                  if (result38 !== null) {
                    var result34 = [result35, result36, result37, result38];
                  } else {
                    var result34 = null;
                    pos = savedPos6;
                  }
                } else {
                  var result34 = null;
                  pos = savedPos6;
                }
              } else {
                var result34 = null;
                pos = savedPos6;
              }
            } else {
              var result34 = null;
              pos = savedPos6;
            }
            if (result34 !== null) {
              var result5 = result34;
            } else {
              var savedPos5 = pos;
              var result28 = [];
              var result33 = parse_WS();
              while (result33 !== null) {
                result28.push(result33);
                var result33 = parse_WS();
              }
              if (result28 !== null) {
                if (input.substr(pos, 1) === "<") {
                  var result29 = "<";
                  pos += 1;
                } else {
                  var result29 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"<\"");
                  }
                }
                if (result29 !== null) {
                  var result30 = [];
                  var result32 = parse_WS();
                  while (result32 !== null) {
                    result30.push(result32);
                    var result32 = parse_WS();
                  }
                  if (result30 !== null) {
                    var result31 = parse_AdditiveExpression();
                    if (result31 !== null) {
                      var result27 = [result28, result29, result30, result31];
                    } else {
                      var result27 = null;
                      pos = savedPos5;
                    }
                  } else {
                    var result27 = null;
                    pos = savedPos5;
                  }
                } else {
                  var result27 = null;
                  pos = savedPos5;
                }
              } else {
                var result27 = null;
                pos = savedPos5;
              }
              if (result27 !== null) {
                var result5 = result27;
              } else {
                var savedPos4 = pos;
                var result21 = [];
                var result26 = parse_WS();
                while (result26 !== null) {
                  result21.push(result26);
                  var result26 = parse_WS();
                }
                if (result21 !== null) {
                  if (input.substr(pos, 1) === ">") {
                    var result22 = ">";
                    pos += 1;
                  } else {
                    var result22 = null;
                    if (reportMatchFailures) {
                      matchFailed("\">\"");
                    }
                  }
                  if (result22 !== null) {
                    var result23 = [];
                    var result25 = parse_WS();
                    while (result25 !== null) {
                      result23.push(result25);
                      var result25 = parse_WS();
                    }
                    if (result23 !== null) {
                      var result24 = parse_AdditiveExpression();
                      if (result24 !== null) {
                        var result20 = [result21, result22, result23, result24];
                      } else {
                        var result20 = null;
                        pos = savedPos4;
                      }
                    } else {
                      var result20 = null;
                      pos = savedPos4;
                    }
                  } else {
                    var result20 = null;
                    pos = savedPos4;
                  }
                } else {
                  var result20 = null;
                  pos = savedPos4;
                }
                if (result20 !== null) {
                  var result5 = result20;
                } else {
                  var savedPos3 = pos;
                  var result14 = [];
                  var result19 = parse_WS();
                  while (result19 !== null) {
                    result14.push(result19);
                    var result19 = parse_WS();
                  }
                  if (result14 !== null) {
                    if (input.substr(pos, 2) === "<=") {
                      var result15 = "<=";
                      pos += 2;
                    } else {
                      var result15 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"<=\"");
                      }
                    }
                    if (result15 !== null) {
                      var result16 = [];
                      var result18 = parse_WS();
                      while (result18 !== null) {
                        result16.push(result18);
                        var result18 = parse_WS();
                      }
                      if (result16 !== null) {
                        var result17 = parse_AdditiveExpression();
                        if (result17 !== null) {
                          var result13 = [result14, result15, result16, result17];
                        } else {
                          var result13 = null;
                          pos = savedPos3;
                        }
                      } else {
                        var result13 = null;
                        pos = savedPos3;
                      }
                    } else {
                      var result13 = null;
                      pos = savedPos3;
                    }
                  } else {
                    var result13 = null;
                    pos = savedPos3;
                  }
                  if (result13 !== null) {
                    var result5 = result13;
                  } else {
                    var savedPos2 = pos;
                    var result7 = [];
                    var result12 = parse_WS();
                    while (result12 !== null) {
                      result7.push(result12);
                      var result12 = parse_WS();
                    }
                    if (result7 !== null) {
                      if (input.substr(pos, 2) === ">=") {
                        var result8 = ">=";
                        pos += 2;
                      } else {
                        var result8 = null;
                        if (reportMatchFailures) {
                          matchFailed("\">=\"");
                        }
                      }
                      if (result8 !== null) {
                        var result9 = [];
                        var result11 = parse_WS();
                        while (result11 !== null) {
                          result9.push(result11);
                          var result11 = parse_WS();
                        }
                        if (result9 !== null) {
                          var result10 = parse_AdditiveExpression();
                          if (result10 !== null) {
                            var result6 = [result7, result8, result9, result10];
                          } else {
                            var result6 = null;
                            pos = savedPos2;
                          }
                        } else {
                          var result6 = null;
                          pos = savedPos2;
                        }
                      } else {
                        var result6 = null;
                        pos = savedPos2;
                      }
                    } else {
                      var result6 = null;
                      pos = savedPos2;
                    }
                    if (result6 !== null) {
                      var result5 = result6;
                    } else {
                      var result5 = null;;
                    };
                  };
                };
              };
            };
          }
          while (result5 !== null) {
            result4.push(result5);
            var savedPos7 = pos;
            var result42 = [];
            var result47 = parse_WS();
            while (result47 !== null) {
              result42.push(result47);
              var result47 = parse_WS();
            }
            if (result42 !== null) {
              if (input.substr(pos, 1) === "=") {
                var result43 = "=";
                pos += 1;
              } else {
                var result43 = null;
                if (reportMatchFailures) {
                  matchFailed("\"=\"");
                }
              }
              if (result43 !== null) {
                var result44 = [];
                var result46 = parse_WS();
                while (result46 !== null) {
                  result44.push(result46);
                  var result46 = parse_WS();
                }
                if (result44 !== null) {
                  var result45 = parse_AdditiveExpression();
                  if (result45 !== null) {
                    var result41 = [result42, result43, result44, result45];
                  } else {
                    var result41 = null;
                    pos = savedPos7;
                  }
                } else {
                  var result41 = null;
                  pos = savedPos7;
                }
              } else {
                var result41 = null;
                pos = savedPos7;
              }
            } else {
              var result41 = null;
              pos = savedPos7;
            }
            if (result41 !== null) {
              var result5 = result41;
            } else {
              var savedPos6 = pos;
              var result35 = [];
              var result40 = parse_WS();
              while (result40 !== null) {
                result35.push(result40);
                var result40 = parse_WS();
              }
              if (result35 !== null) {
                if (input.substr(pos, 2) === "!=") {
                  var result36 = "!=";
                  pos += 2;
                } else {
                  var result36 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"!=\"");
                  }
                }
                if (result36 !== null) {
                  var result37 = [];
                  var result39 = parse_WS();
                  while (result39 !== null) {
                    result37.push(result39);
                    var result39 = parse_WS();
                  }
                  if (result37 !== null) {
                    var result38 = parse_AdditiveExpression();
                    if (result38 !== null) {
                      var result34 = [result35, result36, result37, result38];
                    } else {
                      var result34 = null;
                      pos = savedPos6;
                    }
                  } else {
                    var result34 = null;
                    pos = savedPos6;
                  }
                } else {
                  var result34 = null;
                  pos = savedPos6;
                }
              } else {
                var result34 = null;
                pos = savedPos6;
              }
              if (result34 !== null) {
                var result5 = result34;
              } else {
                var savedPos5 = pos;
                var result28 = [];
                var result33 = parse_WS();
                while (result33 !== null) {
                  result28.push(result33);
                  var result33 = parse_WS();
                }
                if (result28 !== null) {
                  if (input.substr(pos, 1) === "<") {
                    var result29 = "<";
                    pos += 1;
                  } else {
                    var result29 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"<\"");
                    }
                  }
                  if (result29 !== null) {
                    var result30 = [];
                    var result32 = parse_WS();
                    while (result32 !== null) {
                      result30.push(result32);
                      var result32 = parse_WS();
                    }
                    if (result30 !== null) {
                      var result31 = parse_AdditiveExpression();
                      if (result31 !== null) {
                        var result27 = [result28, result29, result30, result31];
                      } else {
                        var result27 = null;
                        pos = savedPos5;
                      }
                    } else {
                      var result27 = null;
                      pos = savedPos5;
                    }
                  } else {
                    var result27 = null;
                    pos = savedPos5;
                  }
                } else {
                  var result27 = null;
                  pos = savedPos5;
                }
                if (result27 !== null) {
                  var result5 = result27;
                } else {
                  var savedPos4 = pos;
                  var result21 = [];
                  var result26 = parse_WS();
                  while (result26 !== null) {
                    result21.push(result26);
                    var result26 = parse_WS();
                  }
                  if (result21 !== null) {
                    if (input.substr(pos, 1) === ">") {
                      var result22 = ">";
                      pos += 1;
                    } else {
                      var result22 = null;
                      if (reportMatchFailures) {
                        matchFailed("\">\"");
                      }
                    }
                    if (result22 !== null) {
                      var result23 = [];
                      var result25 = parse_WS();
                      while (result25 !== null) {
                        result23.push(result25);
                        var result25 = parse_WS();
                      }
                      if (result23 !== null) {
                        var result24 = parse_AdditiveExpression();
                        if (result24 !== null) {
                          var result20 = [result21, result22, result23, result24];
                        } else {
                          var result20 = null;
                          pos = savedPos4;
                        }
                      } else {
                        var result20 = null;
                        pos = savedPos4;
                      }
                    } else {
                      var result20 = null;
                      pos = savedPos4;
                    }
                  } else {
                    var result20 = null;
                    pos = savedPos4;
                  }
                  if (result20 !== null) {
                    var result5 = result20;
                  } else {
                    var savedPos3 = pos;
                    var result14 = [];
                    var result19 = parse_WS();
                    while (result19 !== null) {
                      result14.push(result19);
                      var result19 = parse_WS();
                    }
                    if (result14 !== null) {
                      if (input.substr(pos, 2) === "<=") {
                        var result15 = "<=";
                        pos += 2;
                      } else {
                        var result15 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"<=\"");
                        }
                      }
                      if (result15 !== null) {
                        var result16 = [];
                        var result18 = parse_WS();
                        while (result18 !== null) {
                          result16.push(result18);
                          var result18 = parse_WS();
                        }
                        if (result16 !== null) {
                          var result17 = parse_AdditiveExpression();
                          if (result17 !== null) {
                            var result13 = [result14, result15, result16, result17];
                          } else {
                            var result13 = null;
                            pos = savedPos3;
                          }
                        } else {
                          var result13 = null;
                          pos = savedPos3;
                        }
                      } else {
                        var result13 = null;
                        pos = savedPos3;
                      }
                    } else {
                      var result13 = null;
                      pos = savedPos3;
                    }
                    if (result13 !== null) {
                      var result5 = result13;
                    } else {
                      var savedPos2 = pos;
                      var result7 = [];
                      var result12 = parse_WS();
                      while (result12 !== null) {
                        result7.push(result12);
                        var result12 = parse_WS();
                      }
                      if (result7 !== null) {
                        if (input.substr(pos, 2) === ">=") {
                          var result8 = ">=";
                          pos += 2;
                        } else {
                          var result8 = null;
                          if (reportMatchFailures) {
                            matchFailed("\">=\"");
                          }
                        }
                        if (result8 !== null) {
                          var result9 = [];
                          var result11 = parse_WS();
                          while (result11 !== null) {
                            result9.push(result11);
                            var result11 = parse_WS();
                          }
                          if (result9 !== null) {
                            var result10 = parse_AdditiveExpression();
                            if (result10 !== null) {
                              var result6 = [result7, result8, result9, result10];
                            } else {
                              var result6 = null;
                              pos = savedPos2;
                            }
                          } else {
                            var result6 = null;
                            pos = savedPos2;
                          }
                        } else {
                          var result6 = null;
                          pos = savedPos2;
                        }
                      } else {
                        var result6 = null;
                        pos = savedPos2;
                      }
                      if (result6 !== null) {
                        var result5 = result6;
                      } else {
                        var result5 = null;;
                      };
                    };
                  };
                };
              };
            }
          }
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(op1, op2) {
                if(op2.length === 0) {
                    return op1;
                } else {
                  var exp = {};
                  exp.expressionType = "relationalexpression"
                  exp.operator = op2[0][1];
                  exp.op1 = op1;
                  exp.op2 = op2[0][3];
                  exp.token = "expression";
          
                  return exp;
                }
            })(result1[0], result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[99] RelationalExpression");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_AdditiveExpression() {
        var cacheKey = 'AdditiveExpression@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = parse_MultiplicativeExpression();
        if (result3 !== null) {
          var result4 = [];
          var savedPos6 = pos;
          var result34 = [];
          var result39 = parse_WS();
          while (result39 !== null) {
            result34.push(result39);
            var result39 = parse_WS();
          }
          if (result34 !== null) {
            if (input.substr(pos, 1) === "+") {
              var result35 = "+";
              pos += 1;
            } else {
              var result35 = null;
              if (reportMatchFailures) {
                matchFailed("\"+\"");
              }
            }
            if (result35 !== null) {
              var result36 = [];
              var result38 = parse_WS();
              while (result38 !== null) {
                result36.push(result38);
                var result38 = parse_WS();
              }
              if (result36 !== null) {
                var result37 = parse_MultiplicativeExpression();
                if (result37 !== null) {
                  var result33 = [result34, result35, result36, result37];
                } else {
                  var result33 = null;
                  pos = savedPos6;
                }
              } else {
                var result33 = null;
                pos = savedPos6;
              }
            } else {
              var result33 = null;
              pos = savedPos6;
            }
          } else {
            var result33 = null;
            pos = savedPos6;
          }
          if (result33 !== null) {
            var result5 = result33;
          } else {
            var savedPos5 = pos;
            var result27 = [];
            var result32 = parse_WS();
            while (result32 !== null) {
              result27.push(result32);
              var result32 = parse_WS();
            }
            if (result27 !== null) {
              if (input.substr(pos, 1) === "-") {
                var result28 = "-";
                pos += 1;
              } else {
                var result28 = null;
                if (reportMatchFailures) {
                  matchFailed("\"-\"");
                }
              }
              if (result28 !== null) {
                var result29 = [];
                var result31 = parse_WS();
                while (result31 !== null) {
                  result29.push(result31);
                  var result31 = parse_WS();
                }
                if (result29 !== null) {
                  var result30 = parse_MultiplicativeExpression();
                  if (result30 !== null) {
                    var result26 = [result27, result28, result29, result30];
                  } else {
                    var result26 = null;
                    pos = savedPos5;
                  }
                } else {
                  var result26 = null;
                  pos = savedPos5;
                }
              } else {
                var result26 = null;
                pos = savedPos5;
              }
            } else {
              var result26 = null;
              pos = savedPos5;
            }
            if (result26 !== null) {
              var result5 = result26;
            } else {
              var savedPos2 = pos;
              var result25 = parse_NumericLiteralNegative();
              if (result25 !== null) {
                var result7 = result25;
              } else {
                var result24 = parse_NumericLiteralNegative();
                if (result24 !== null) {
                  var result7 = result24;
                } else {
                  var result7 = null;;
                };
              }
              if (result7 !== null) {
                var savedPos4 = pos;
                var result18 = [];
                var result23 = parse_WS();
                while (result23 !== null) {
                  result18.push(result23);
                  var result23 = parse_WS();
                }
                if (result18 !== null) {
                  if (input.substr(pos, 1) === "*") {
                    var result19 = "*";
                    pos += 1;
                  } else {
                    var result19 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"*\"");
                    }
                  }
                  if (result19 !== null) {
                    var result20 = [];
                    var result22 = parse_WS();
                    while (result22 !== null) {
                      result20.push(result22);
                      var result22 = parse_WS();
                    }
                    if (result20 !== null) {
                      var result21 = parse_UnaryExpression();
                      if (result21 !== null) {
                        var result17 = [result18, result19, result20, result21];
                      } else {
                        var result17 = null;
                        pos = savedPos4;
                      }
                    } else {
                      var result17 = null;
                      pos = savedPos4;
                    }
                  } else {
                    var result17 = null;
                    pos = savedPos4;
                  }
                } else {
                  var result17 = null;
                  pos = savedPos4;
                }
                if (result17 !== null) {
                  var result9 = result17;
                } else {
                  var savedPos3 = pos;
                  var result11 = [];
                  var result16 = parse_WS();
                  while (result16 !== null) {
                    result11.push(result16);
                    var result16 = parse_WS();
                  }
                  if (result11 !== null) {
                    if (input.substr(pos, 1) === "/") {
                      var result12 = "/";
                      pos += 1;
                    } else {
                      var result12 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"/\"");
                      }
                    }
                    if (result12 !== null) {
                      var result13 = [];
                      var result15 = parse_WS();
                      while (result15 !== null) {
                        result13.push(result15);
                        var result15 = parse_WS();
                      }
                      if (result13 !== null) {
                        var result14 = parse_UnaryExpression();
                        if (result14 !== null) {
                          var result10 = [result11, result12, result13, result14];
                        } else {
                          var result10 = null;
                          pos = savedPos3;
                        }
                      } else {
                        var result10 = null;
                        pos = savedPos3;
                      }
                    } else {
                      var result10 = null;
                      pos = savedPos3;
                    }
                  } else {
                    var result10 = null;
                    pos = savedPos3;
                  }
                  if (result10 !== null) {
                    var result9 = result10;
                  } else {
                    var result9 = null;;
                  };
                }
                var result8 = result9 !== null ? result9 : '';
                if (result8 !== null) {
                  var result6 = [result7, result8];
                } else {
                  var result6 = null;
                  pos = savedPos2;
                }
              } else {
                var result6 = null;
                pos = savedPos2;
              }
              if (result6 !== null) {
                var result5 = result6;
              } else {
                var result5 = null;;
              };
            };
          }
          while (result5 !== null) {
            result4.push(result5);
            var savedPos6 = pos;
            var result34 = [];
            var result39 = parse_WS();
            while (result39 !== null) {
              result34.push(result39);
              var result39 = parse_WS();
            }
            if (result34 !== null) {
              if (input.substr(pos, 1) === "+") {
                var result35 = "+";
                pos += 1;
              } else {
                var result35 = null;
                if (reportMatchFailures) {
                  matchFailed("\"+\"");
                }
              }
              if (result35 !== null) {
                var result36 = [];
                var result38 = parse_WS();
                while (result38 !== null) {
                  result36.push(result38);
                  var result38 = parse_WS();
                }
                if (result36 !== null) {
                  var result37 = parse_MultiplicativeExpression();
                  if (result37 !== null) {
                    var result33 = [result34, result35, result36, result37];
                  } else {
                    var result33 = null;
                    pos = savedPos6;
                  }
                } else {
                  var result33 = null;
                  pos = savedPos6;
                }
              } else {
                var result33 = null;
                pos = savedPos6;
              }
            } else {
              var result33 = null;
              pos = savedPos6;
            }
            if (result33 !== null) {
              var result5 = result33;
            } else {
              var savedPos5 = pos;
              var result27 = [];
              var result32 = parse_WS();
              while (result32 !== null) {
                result27.push(result32);
                var result32 = parse_WS();
              }
              if (result27 !== null) {
                if (input.substr(pos, 1) === "-") {
                  var result28 = "-";
                  pos += 1;
                } else {
                  var result28 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"-\"");
                  }
                }
                if (result28 !== null) {
                  var result29 = [];
                  var result31 = parse_WS();
                  while (result31 !== null) {
                    result29.push(result31);
                    var result31 = parse_WS();
                  }
                  if (result29 !== null) {
                    var result30 = parse_MultiplicativeExpression();
                    if (result30 !== null) {
                      var result26 = [result27, result28, result29, result30];
                    } else {
                      var result26 = null;
                      pos = savedPos5;
                    }
                  } else {
                    var result26 = null;
                    pos = savedPos5;
                  }
                } else {
                  var result26 = null;
                  pos = savedPos5;
                }
              } else {
                var result26 = null;
                pos = savedPos5;
              }
              if (result26 !== null) {
                var result5 = result26;
              } else {
                var savedPos2 = pos;
                var result25 = parse_NumericLiteralNegative();
                if (result25 !== null) {
                  var result7 = result25;
                } else {
                  var result24 = parse_NumericLiteralNegative();
                  if (result24 !== null) {
                    var result7 = result24;
                  } else {
                    var result7 = null;;
                  };
                }
                if (result7 !== null) {
                  var savedPos4 = pos;
                  var result18 = [];
                  var result23 = parse_WS();
                  while (result23 !== null) {
                    result18.push(result23);
                    var result23 = parse_WS();
                  }
                  if (result18 !== null) {
                    if (input.substr(pos, 1) === "*") {
                      var result19 = "*";
                      pos += 1;
                    } else {
                      var result19 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"*\"");
                      }
                    }
                    if (result19 !== null) {
                      var result20 = [];
                      var result22 = parse_WS();
                      while (result22 !== null) {
                        result20.push(result22);
                        var result22 = parse_WS();
                      }
                      if (result20 !== null) {
                        var result21 = parse_UnaryExpression();
                        if (result21 !== null) {
                          var result17 = [result18, result19, result20, result21];
                        } else {
                          var result17 = null;
                          pos = savedPos4;
                        }
                      } else {
                        var result17 = null;
                        pos = savedPos4;
                      }
                    } else {
                      var result17 = null;
                      pos = savedPos4;
                    }
                  } else {
                    var result17 = null;
                    pos = savedPos4;
                  }
                  if (result17 !== null) {
                    var result9 = result17;
                  } else {
                    var savedPos3 = pos;
                    var result11 = [];
                    var result16 = parse_WS();
                    while (result16 !== null) {
                      result11.push(result16);
                      var result16 = parse_WS();
                    }
                    if (result11 !== null) {
                      if (input.substr(pos, 1) === "/") {
                        var result12 = "/";
                        pos += 1;
                      } else {
                        var result12 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"/\"");
                        }
                      }
                      if (result12 !== null) {
                        var result13 = [];
                        var result15 = parse_WS();
                        while (result15 !== null) {
                          result13.push(result15);
                          var result15 = parse_WS();
                        }
                        if (result13 !== null) {
                          var result14 = parse_UnaryExpression();
                          if (result14 !== null) {
                            var result10 = [result11, result12, result13, result14];
                          } else {
                            var result10 = null;
                            pos = savedPos3;
                          }
                        } else {
                          var result10 = null;
                          pos = savedPos3;
                        }
                      } else {
                        var result10 = null;
                        pos = savedPos3;
                      }
                    } else {
                      var result10 = null;
                      pos = savedPos3;
                    }
                    if (result10 !== null) {
                      var result9 = result10;
                    } else {
                      var result9 = null;;
                    };
                  }
                  var result8 = result9 !== null ? result9 : '';
                  if (result8 !== null) {
                    var result6 = [result7, result8];
                  } else {
                    var result6 = null;
                    pos = savedPos2;
                  }
                } else {
                  var result6 = null;
                  pos = savedPos2;
                }
                if (result6 !== null) {
                  var result5 = result6;
                } else {
                  var result5 = null;;
                };
              };
            }
          }
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(op1, ops) {
                if(ops.length === 0) {
                    return op1;
                }
          
                var ex = {};
                ex.token = 'expression';
                ex.expressionType = 'additiveexpression';
                ex.summand = op1;
                ex.summands = [];
          
                for(var i=0; i<ops.length; i++) {
                    var summand = ops[i];
                    var sum = {};
                    if(summand.length == 4 && typeof(summand[1]) === "string") {
                        sum.operator = summand[1];
                        sum.expression = summand[3];
                    } else {
                        var subexp = {}
                        var firstFactor = sum[0];
                        var operator = sum[1][1];
                        var secondFactor = sum[1][3];
                        var operator = null;
                        if(firstFactor.value < 0) {
                            sum.operator = '-';
                            firstFactor.value = - firstFactor.value;
                        } else {
                            sum.operator = '+';
                        }
                        subexp.token = 'expression';
                        subexp.expressionType = 'multiplicativeexpression';
                        subexp.operator = firstFactor;
                        subexp.factors = [{operator: operator, expression: secondFactor}];
          
                        sum.expression = subexp;
                    }
                    ex.summands.push(sum);
                }
          
                return ex;
          })(result1[0], result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[101] AdditiveExpression");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_MultiplicativeExpression() {
        var cacheKey = 'MultiplicativeExpression@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = parse_UnaryExpression();
        if (result3 !== null) {
          var result4 = [];
          var savedPos3 = pos;
          var result14 = [];
          var result19 = parse_WS();
          while (result19 !== null) {
            result14.push(result19);
            var result19 = parse_WS();
          }
          if (result14 !== null) {
            if (input.substr(pos, 1) === "*") {
              var result15 = "*";
              pos += 1;
            } else {
              var result15 = null;
              if (reportMatchFailures) {
                matchFailed("\"*\"");
              }
            }
            if (result15 !== null) {
              var result16 = [];
              var result18 = parse_WS();
              while (result18 !== null) {
                result16.push(result18);
                var result18 = parse_WS();
              }
              if (result16 !== null) {
                var result17 = parse_UnaryExpression();
                if (result17 !== null) {
                  var result13 = [result14, result15, result16, result17];
                } else {
                  var result13 = null;
                  pos = savedPos3;
                }
              } else {
                var result13 = null;
                pos = savedPos3;
              }
            } else {
              var result13 = null;
              pos = savedPos3;
            }
          } else {
            var result13 = null;
            pos = savedPos3;
          }
          if (result13 !== null) {
            var result5 = result13;
          } else {
            var savedPos2 = pos;
            var result7 = [];
            var result12 = parse_WS();
            while (result12 !== null) {
              result7.push(result12);
              var result12 = parse_WS();
            }
            if (result7 !== null) {
              if (input.substr(pos, 1) === "/") {
                var result8 = "/";
                pos += 1;
              } else {
                var result8 = null;
                if (reportMatchFailures) {
                  matchFailed("\"/\"");
                }
              }
              if (result8 !== null) {
                var result9 = [];
                var result11 = parse_WS();
                while (result11 !== null) {
                  result9.push(result11);
                  var result11 = parse_WS();
                }
                if (result9 !== null) {
                  var result10 = parse_UnaryExpression();
                  if (result10 !== null) {
                    var result6 = [result7, result8, result9, result10];
                  } else {
                    var result6 = null;
                    pos = savedPos2;
                  }
                } else {
                  var result6 = null;
                  pos = savedPos2;
                }
              } else {
                var result6 = null;
                pos = savedPos2;
              }
            } else {
              var result6 = null;
              pos = savedPos2;
            }
            if (result6 !== null) {
              var result5 = result6;
            } else {
              var result5 = null;;
            };
          }
          while (result5 !== null) {
            result4.push(result5);
            var savedPos3 = pos;
            var result14 = [];
            var result19 = parse_WS();
            while (result19 !== null) {
              result14.push(result19);
              var result19 = parse_WS();
            }
            if (result14 !== null) {
              if (input.substr(pos, 1) === "*") {
                var result15 = "*";
                pos += 1;
              } else {
                var result15 = null;
                if (reportMatchFailures) {
                  matchFailed("\"*\"");
                }
              }
              if (result15 !== null) {
                var result16 = [];
                var result18 = parse_WS();
                while (result18 !== null) {
                  result16.push(result18);
                  var result18 = parse_WS();
                }
                if (result16 !== null) {
                  var result17 = parse_UnaryExpression();
                  if (result17 !== null) {
                    var result13 = [result14, result15, result16, result17];
                  } else {
                    var result13 = null;
                    pos = savedPos3;
                  }
                } else {
                  var result13 = null;
                  pos = savedPos3;
                }
              } else {
                var result13 = null;
                pos = savedPos3;
              }
            } else {
              var result13 = null;
              pos = savedPos3;
            }
            if (result13 !== null) {
              var result5 = result13;
            } else {
              var savedPos2 = pos;
              var result7 = [];
              var result12 = parse_WS();
              while (result12 !== null) {
                result7.push(result12);
                var result12 = parse_WS();
              }
              if (result7 !== null) {
                if (input.substr(pos, 1) === "/") {
                  var result8 = "/";
                  pos += 1;
                } else {
                  var result8 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"/\"");
                  }
                }
                if (result8 !== null) {
                  var result9 = [];
                  var result11 = parse_WS();
                  while (result11 !== null) {
                    result9.push(result11);
                    var result11 = parse_WS();
                  }
                  if (result9 !== null) {
                    var result10 = parse_UnaryExpression();
                    if (result10 !== null) {
                      var result6 = [result7, result8, result9, result10];
                    } else {
                      var result6 = null;
                      pos = savedPos2;
                    }
                  } else {
                    var result6 = null;
                    pos = savedPos2;
                  }
                } else {
                  var result6 = null;
                  pos = savedPos2;
                }
              } else {
                var result6 = null;
                pos = savedPos2;
              }
              if (result6 !== null) {
                var result5 = result6;
              } else {
                var result5 = null;;
              };
            }
          }
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(exp, exps) {
                if(exps.length === 0) {
                    return exp;
                }
          
                var ex = {};
                ex.token = 'expression';
                ex.expressionType = 'multiplicativeexpression';
                ex.factor = exp;
                ex.factors = [];
                for(var i=0; i<exps.length; i++) {
                    var factor = exps[i];
                    var fact = {};
                    fact.operator = factor[1];
                    fact.expression = factor[3];
                    ex.factors.push(fact);
                }
          
                return ex;
          })(result1[0], result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[102] MultiplicativeExpression");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_UnaryExpression() {
        var cacheKey = 'UnaryExpression@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos4 = pos;
        var savedPos5 = pos;
        if (input.substr(pos, 1) === "!") {
          var result19 = "!";
          pos += 1;
        } else {
          var result19 = null;
          if (reportMatchFailures) {
            matchFailed("\"!\"");
          }
        }
        if (result19 !== null) {
          var result20 = [];
          var result22 = parse_WS();
          while (result22 !== null) {
            result20.push(result22);
            var result22 = parse_WS();
          }
          if (result20 !== null) {
            var result21 = parse_PrimaryExpression();
            if (result21 !== null) {
              var result17 = [result19, result20, result21];
            } else {
              var result17 = null;
              pos = savedPos5;
            }
          } else {
            var result17 = null;
            pos = savedPos5;
          }
        } else {
          var result17 = null;
          pos = savedPos5;
        }
        var result18 = result17 !== null
          ? (function(e) {
                var ex = {};
                ex.token = 'expression';
                ex.expressionType = 'unaryexpression';
                ex.unaryexpression = "!";
                ex.expression = e;
          
                return ex;
            })(result17[2])
          : null;
        if (result18 !== null) {
          var result16 = result18;
        } else {
          var result16 = null;
          pos = savedPos4;
        }
        if (result16 !== null) {
          var result0 = result16;
        } else {
          var savedPos2 = pos;
          var savedPos3 = pos;
          if (input.substr(pos, 1) === "+") {
            var result12 = "+";
            pos += 1;
          } else {
            var result12 = null;
            if (reportMatchFailures) {
              matchFailed("\"+\"");
            }
          }
          if (result12 !== null) {
            var result13 = [];
            var result15 = parse_WS();
            while (result15 !== null) {
              result13.push(result15);
              var result15 = parse_WS();
            }
            if (result13 !== null) {
              var result14 = parse_PrimaryExpression();
              if (result14 !== null) {
                var result10 = [result12, result13, result14];
              } else {
                var result10 = null;
                pos = savedPos3;
              }
            } else {
              var result10 = null;
              pos = savedPos3;
            }
          } else {
            var result10 = null;
            pos = savedPos3;
          }
          var result11 = result10 !== null
            ? (function(v) {
                  var ex = {};
                  ex.token = 'expression';
                  ex.expressionType = 'unaryexpression';
                  ex.unaryexpression = "+";
                  ex.expression = v;
            
                  return ex;
              })(result10[2])
            : null;
          if (result11 !== null) {
            var result9 = result11;
          } else {
            var result9 = null;
            pos = savedPos2;
          }
          if (result9 !== null) {
            var result0 = result9;
          } else {
            var savedPos0 = pos;
            var savedPos1 = pos;
            if (input.substr(pos, 1) === "-") {
              var result5 = "-";
              pos += 1;
            } else {
              var result5 = null;
              if (reportMatchFailures) {
                matchFailed("\"-\"");
              }
            }
            if (result5 !== null) {
              var result6 = [];
              var result8 = parse_WS();
              while (result8 !== null) {
                result6.push(result8);
                var result8 = parse_WS();
              }
              if (result6 !== null) {
                var result7 = parse_PrimaryExpression();
                if (result7 !== null) {
                  var result3 = [result5, result6, result7];
                } else {
                  var result3 = null;
                  pos = savedPos1;
                }
              } else {
                var result3 = null;
                pos = savedPos1;
              }
            } else {
              var result3 = null;
              pos = savedPos1;
            }
            var result4 = result3 !== null
              ? (function(v) {
                    var ex = {};
                    ex.token = 'expression';
                    ex.expressionType = 'unaryexpression';
                    ex.unaryexpression = "-";
                    ex.expression = v;
              
                    return ex;
                })(result3[2])
              : null;
            if (result4 !== null) {
              var result2 = result4;
            } else {
              var result2 = null;
              pos = savedPos0;
            }
            if (result2 !== null) {
              var result0 = result2;
            } else {
              var result1 = parse_PrimaryExpression();
              if (result1 !== null) {
                var result0 = result1;
              } else {
                var result0 = null;;
              };
            };
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[103] UnaryExpression");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_PrimaryExpression() {
        var cacheKey = 'PrimaryExpression@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var result16 = parse_BrackettedExpression();
        if (result16 !== null) {
          var result0 = result16;
        } else {
          var result15 = parse_BuiltInCall();
          if (result15 !== null) {
            var result0 = result15;
          } else {
            var result14 = parse_IRIrefOrFunction();
            if (result14 !== null) {
              var result0 = result14;
            } else {
              var savedPos3 = pos;
              var result12 = parse_RDFLiteral();
              var result13 = result12 !== null
                ? (function(v) {
                      var ex = {};
                      ex.token = 'expression';
                      ex.expressionType = 'atomic';
                      ex.primaryexpression = 'rdfliteral';
                      ex.value = v;
                
                      return ex;
                  })(result12)
                : null;
              if (result13 !== null) {
                var result11 = result13;
              } else {
                var result11 = null;
                pos = savedPos3;
              }
              if (result11 !== null) {
                var result0 = result11;
              } else {
                var savedPos2 = pos;
                var result9 = parse_NumericLiteral();
                var result10 = result9 !== null
                  ? (function(v) {
                        var ex = {};
                        ex.token = 'expression';
                        ex.expressionType = 'atomic';
                        ex.primaryexpression = 'numericliteral';
                        ex.value = v;
                  
                        return ex;
                    })(result9)
                  : null;
                if (result10 !== null) {
                  var result8 = result10;
                } else {
                  var result8 = null;
                  pos = savedPos2;
                }
                if (result8 !== null) {
                  var result0 = result8;
                } else {
                  var savedPos1 = pos;
                  var result6 = parse_BooleanLiteral();
                  var result7 = result6 !== null
                    ? (function(v) {
                          var ex = {};
                          ex.token = 'expression';
                          ex.expressionType = 'atomic';
                          ex.primaryexpression = 'booleanliteral';
                          ex.value = v;
                    
                          return ex;
                      })(result6)
                    : null;
                  if (result7 !== null) {
                    var result5 = result7;
                  } else {
                    var result5 = null;
                    pos = savedPos1;
                  }
                  if (result5 !== null) {
                    var result0 = result5;
                  } else {
                    var result4 = parse_Aggregate();
                    if (result4 !== null) {
                      var result0 = result4;
                    } else {
                      var savedPos0 = pos;
                      var result2 = parse_Var();
                      var result3 = result2 !== null
                        ? (function(v) {
                              var ex = {};
                              ex.token = 'expression';
                              ex.expressionType = 'atomic';
                              ex.primaryexpression = 'var';
                              ex.value = v;
                        
                              return ex;
                          })(result2)
                        : null;
                      if (result3 !== null) {
                        var result1 = result3;
                      } else {
                        var result1 = null;
                        pos = savedPos0;
                      }
                      if (result1 !== null) {
                        var result0 = result1;
                      } else {
                        var result0 = null;;
                      };
                    };
                  };
                };
              };
            };
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[104] PrimaryExpression");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_BrackettedExpression() {
        var cacheKey = 'BrackettedExpression@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "(") {
          var result3 = "(";
          pos += 1;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("\"(\"");
          }
        }
        if (result3 !== null) {
          var result4 = [];
          var result9 = parse_WS();
          while (result9 !== null) {
            result4.push(result9);
            var result9 = parse_WS();
          }
          if (result4 !== null) {
            var result5 = parse_ConditionalOrExpression();
            if (result5 !== null) {
              var result6 = [];
              var result8 = parse_WS();
              while (result8 !== null) {
                result6.push(result8);
                var result8 = parse_WS();
              }
              if (result6 !== null) {
                if (input.substr(pos, 1) === ")") {
                  var result7 = ")";
                  pos += 1;
                } else {
                  var result7 = null;
                  if (reportMatchFailures) {
                    matchFailed("\")\"");
                  }
                }
                if (result7 !== null) {
                  var result1 = [result3, result4, result5, result6, result7];
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(e) {
                return e;
          })(result1[2])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[105] BrackettedExpression");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_BuiltInCall() {
        var cacheKey = 'BuiltInCall@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos29 = pos;
        var savedPos30 = pos;
        if (input.substr(pos, 1) === "S") {
          var result289 = "S";
          pos += 1;
        } else {
          var result289 = null;
          if (reportMatchFailures) {
            matchFailed("\"S\"");
          }
        }
        if (result289 !== null) {
          var result272 = result289;
        } else {
          if (input.substr(pos, 1) === "s") {
            var result288 = "s";
            pos += 1;
          } else {
            var result288 = null;
            if (reportMatchFailures) {
              matchFailed("\"s\"");
            }
          }
          if (result288 !== null) {
            var result272 = result288;
          } else {
            var result272 = null;;
          };
        }
        if (result272 !== null) {
          if (input.substr(pos, 1) === "T") {
            var result287 = "T";
            pos += 1;
          } else {
            var result287 = null;
            if (reportMatchFailures) {
              matchFailed("\"T\"");
            }
          }
          if (result287 !== null) {
            var result273 = result287;
          } else {
            if (input.substr(pos, 1) === "t") {
              var result286 = "t";
              pos += 1;
            } else {
              var result286 = null;
              if (reportMatchFailures) {
                matchFailed("\"t\"");
              }
            }
            if (result286 !== null) {
              var result273 = result286;
            } else {
              var result273 = null;;
            };
          }
          if (result273 !== null) {
            if (input.substr(pos, 1) === "R") {
              var result285 = "R";
              pos += 1;
            } else {
              var result285 = null;
              if (reportMatchFailures) {
                matchFailed("\"R\"");
              }
            }
            if (result285 !== null) {
              var result274 = result285;
            } else {
              if (input.substr(pos, 1) === "r") {
                var result284 = "r";
                pos += 1;
              } else {
                var result284 = null;
                if (reportMatchFailures) {
                  matchFailed("\"r\"");
                }
              }
              if (result284 !== null) {
                var result274 = result284;
              } else {
                var result274 = null;;
              };
            }
            if (result274 !== null) {
              var result275 = [];
              var result283 = parse_WS();
              while (result283 !== null) {
                result275.push(result283);
                var result283 = parse_WS();
              }
              if (result275 !== null) {
                if (input.substr(pos, 1) === "(") {
                  var result276 = "(";
                  pos += 1;
                } else {
                  var result276 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"(\"");
                  }
                }
                if (result276 !== null) {
                  var result277 = [];
                  var result282 = parse_WS();
                  while (result282 !== null) {
                    result277.push(result282);
                    var result282 = parse_WS();
                  }
                  if (result277 !== null) {
                    var result278 = parse_ConditionalOrExpression();
                    if (result278 !== null) {
                      var result279 = [];
                      var result281 = parse_WS();
                      while (result281 !== null) {
                        result279.push(result281);
                        var result281 = parse_WS();
                      }
                      if (result279 !== null) {
                        if (input.substr(pos, 1) === ")") {
                          var result280 = ")";
                          pos += 1;
                        } else {
                          var result280 = null;
                          if (reportMatchFailures) {
                            matchFailed("\")\"");
                          }
                        }
                        if (result280 !== null) {
                          var result270 = [result272, result273, result274, result275, result276, result277, result278, result279, result280];
                        } else {
                          var result270 = null;
                          pos = savedPos30;
                        }
                      } else {
                        var result270 = null;
                        pos = savedPos30;
                      }
                    } else {
                      var result270 = null;
                      pos = savedPos30;
                    }
                  } else {
                    var result270 = null;
                    pos = savedPos30;
                  }
                } else {
                  var result270 = null;
                  pos = savedPos30;
                }
              } else {
                var result270 = null;
                pos = savedPos30;
              }
            } else {
              var result270 = null;
              pos = savedPos30;
            }
          } else {
            var result270 = null;
            pos = savedPos30;
          }
        } else {
          var result270 = null;
          pos = savedPos30;
        }
        var result271 = result270 !== null
          ? (function(e) {
                var ex = {};
                ex.token = 'expression'
                ex.expressionType = 'builtincall'
                ex.builtincall = 'str'
                ex.args = [e]
          
                return ex;
            })(result270[6])
          : null;
        if (result271 !== null) {
          var result269 = result271;
        } else {
          var result269 = null;
          pos = savedPos29;
        }
        if (result269 !== null) {
          var result0 = result269;
        } else {
          var savedPos27 = pos;
          var savedPos28 = pos;
          if (input.substr(pos, 1) === "L") {
            var result268 = "L";
            pos += 1;
          } else {
            var result268 = null;
            if (reportMatchFailures) {
              matchFailed("\"L\"");
            }
          }
          if (result268 !== null) {
            var result248 = result268;
          } else {
            if (input.substr(pos, 1) === "l") {
              var result267 = "l";
              pos += 1;
            } else {
              var result267 = null;
              if (reportMatchFailures) {
                matchFailed("\"l\"");
              }
            }
            if (result267 !== null) {
              var result248 = result267;
            } else {
              var result248 = null;;
            };
          }
          if (result248 !== null) {
            if (input.substr(pos, 1) === "A") {
              var result266 = "A";
              pos += 1;
            } else {
              var result266 = null;
              if (reportMatchFailures) {
                matchFailed("\"A\"");
              }
            }
            if (result266 !== null) {
              var result249 = result266;
            } else {
              if (input.substr(pos, 1) === "a") {
                var result265 = "a";
                pos += 1;
              } else {
                var result265 = null;
                if (reportMatchFailures) {
                  matchFailed("\"a\"");
                }
              }
              if (result265 !== null) {
                var result249 = result265;
              } else {
                var result249 = null;;
              };
            }
            if (result249 !== null) {
              if (input.substr(pos, 1) === "N") {
                var result264 = "N";
                pos += 1;
              } else {
                var result264 = null;
                if (reportMatchFailures) {
                  matchFailed("\"N\"");
                }
              }
              if (result264 !== null) {
                var result250 = result264;
              } else {
                if (input.substr(pos, 1) === "n") {
                  var result263 = "n";
                  pos += 1;
                } else {
                  var result263 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"n\"");
                  }
                }
                if (result263 !== null) {
                  var result250 = result263;
                } else {
                  var result250 = null;;
                };
              }
              if (result250 !== null) {
                if (input.substr(pos, 1) === "G") {
                  var result262 = "G";
                  pos += 1;
                } else {
                  var result262 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"G\"");
                  }
                }
                if (result262 !== null) {
                  var result251 = result262;
                } else {
                  if (input.substr(pos, 1) === "g") {
                    var result261 = "g";
                    pos += 1;
                  } else {
                    var result261 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"g\"");
                    }
                  }
                  if (result261 !== null) {
                    var result251 = result261;
                  } else {
                    var result251 = null;;
                  };
                }
                if (result251 !== null) {
                  var result252 = [];
                  var result260 = parse_WS();
                  while (result260 !== null) {
                    result252.push(result260);
                    var result260 = parse_WS();
                  }
                  if (result252 !== null) {
                    if (input.substr(pos, 1) === "(") {
                      var result253 = "(";
                      pos += 1;
                    } else {
                      var result253 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"(\"");
                      }
                    }
                    if (result253 !== null) {
                      var result254 = [];
                      var result259 = parse_WS();
                      while (result259 !== null) {
                        result254.push(result259);
                        var result259 = parse_WS();
                      }
                      if (result254 !== null) {
                        var result255 = parse_ConditionalOrExpression();
                        if (result255 !== null) {
                          var result256 = [];
                          var result258 = parse_WS();
                          while (result258 !== null) {
                            result256.push(result258);
                            var result258 = parse_WS();
                          }
                          if (result256 !== null) {
                            if (input.substr(pos, 1) === ")") {
                              var result257 = ")";
                              pos += 1;
                            } else {
                              var result257 = null;
                              if (reportMatchFailures) {
                                matchFailed("\")\"");
                              }
                            }
                            if (result257 !== null) {
                              var result246 = [result248, result249, result250, result251, result252, result253, result254, result255, result256, result257];
                            } else {
                              var result246 = null;
                              pos = savedPos28;
                            }
                          } else {
                            var result246 = null;
                            pos = savedPos28;
                          }
                        } else {
                          var result246 = null;
                          pos = savedPos28;
                        }
                      } else {
                        var result246 = null;
                        pos = savedPos28;
                      }
                    } else {
                      var result246 = null;
                      pos = savedPos28;
                    }
                  } else {
                    var result246 = null;
                    pos = savedPos28;
                  }
                } else {
                  var result246 = null;
                  pos = savedPos28;
                }
              } else {
                var result246 = null;
                pos = savedPos28;
              }
            } else {
              var result246 = null;
              pos = savedPos28;
            }
          } else {
            var result246 = null;
            pos = savedPos28;
          }
          var result247 = result246 !== null
            ? (function(e) {
                  var ex = {};
                  ex.token = 'expression'
                  ex.expressionType = 'builtincall'
                  ex.builtincall = 'lang'
                  ex.args = [e]
            
                  return ex;
            })(result246[7])
            : null;
          if (result247 !== null) {
            var result245 = result247;
          } else {
            var result245 = null;
            pos = savedPos27;
          }
          if (result245 !== null) {
            var result0 = result245;
          } else {
            var savedPos25 = pos;
            var savedPos26 = pos;
            if (input.substr(pos, 11) === "LANGMATCHES") {
              var result229 = "LANGMATCHES";
              pos += 11;
            } else {
              var result229 = null;
              if (reportMatchFailures) {
                matchFailed("\"LANGMATCHES\"");
              }
            }
            if (result229 !== null) {
              var result230 = [];
              var result244 = parse_WS();
              while (result244 !== null) {
                result230.push(result244);
                var result244 = parse_WS();
              }
              if (result230 !== null) {
                if (input.substr(pos, 1) === "(") {
                  var result231 = "(";
                  pos += 1;
                } else {
                  var result231 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"(\"");
                  }
                }
                if (result231 !== null) {
                  var result232 = [];
                  var result243 = parse_WS();
                  while (result243 !== null) {
                    result232.push(result243);
                    var result243 = parse_WS();
                  }
                  if (result232 !== null) {
                    var result233 = parse_ConditionalOrExpression();
                    if (result233 !== null) {
                      var result234 = [];
                      var result242 = parse_WS();
                      while (result242 !== null) {
                        result234.push(result242);
                        var result242 = parse_WS();
                      }
                      if (result234 !== null) {
                        if (input.substr(pos, 1) === ",") {
                          var result235 = ",";
                          pos += 1;
                        } else {
                          var result235 = null;
                          if (reportMatchFailures) {
                            matchFailed("\",\"");
                          }
                        }
                        if (result235 !== null) {
                          var result236 = [];
                          var result241 = parse_WS();
                          while (result241 !== null) {
                            result236.push(result241);
                            var result241 = parse_WS();
                          }
                          if (result236 !== null) {
                            var result237 = parse_ConditionalOrExpression();
                            if (result237 !== null) {
                              var result238 = [];
                              var result240 = parse_WS();
                              while (result240 !== null) {
                                result238.push(result240);
                                var result240 = parse_WS();
                              }
                              if (result238 !== null) {
                                if (input.substr(pos, 1) === ")") {
                                  var result239 = ")";
                                  pos += 1;
                                } else {
                                  var result239 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\")\"");
                                  }
                                }
                                if (result239 !== null) {
                                  var result227 = [result229, result230, result231, result232, result233, result234, result235, result236, result237, result238, result239];
                                } else {
                                  var result227 = null;
                                  pos = savedPos26;
                                }
                              } else {
                                var result227 = null;
                                pos = savedPos26;
                              }
                            } else {
                              var result227 = null;
                              pos = savedPos26;
                            }
                          } else {
                            var result227 = null;
                            pos = savedPos26;
                          }
                        } else {
                          var result227 = null;
                          pos = savedPos26;
                        }
                      } else {
                        var result227 = null;
                        pos = savedPos26;
                      }
                    } else {
                      var result227 = null;
                      pos = savedPos26;
                    }
                  } else {
                    var result227 = null;
                    pos = savedPos26;
                  }
                } else {
                  var result227 = null;
                  pos = savedPos26;
                }
              } else {
                var result227 = null;
                pos = savedPos26;
              }
            } else {
              var result227 = null;
              pos = savedPos26;
            }
            var result228 = result227 !== null
              ? (function(e1, e2) {
                    var ex = {};
                    ex.token = 'expression'
                    ex.expressionType = 'builtincall'
                    ex.builtincall = 'langmatches'
                    ex.args = [e1,e2]
              
                    return ex;
              })(result227[4], result227[8])
              : null;
            if (result228 !== null) {
              var result226 = result228;
            } else {
              var result226 = null;
              pos = savedPos25;
            }
            if (result226 !== null) {
              var result0 = result226;
            } else {
              var savedPos23 = pos;
              var savedPos24 = pos;
              if (input.substr(pos, 1) === "D") {
                var result225 = "D";
                pos += 1;
              } else {
                var result225 = null;
                if (reportMatchFailures) {
                  matchFailed("\"D\"");
                }
              }
              if (result225 !== null) {
                var result193 = result225;
              } else {
                if (input.substr(pos, 1) === "d") {
                  var result224 = "d";
                  pos += 1;
                } else {
                  var result224 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"d\"");
                  }
                }
                if (result224 !== null) {
                  var result193 = result224;
                } else {
                  var result193 = null;;
                };
              }
              if (result193 !== null) {
                if (input.substr(pos, 1) === "A") {
                  var result223 = "A";
                  pos += 1;
                } else {
                  var result223 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"A\"");
                  }
                }
                if (result223 !== null) {
                  var result194 = result223;
                } else {
                  if (input.substr(pos, 1) === "a") {
                    var result222 = "a";
                    pos += 1;
                  } else {
                    var result222 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"a\"");
                    }
                  }
                  if (result222 !== null) {
                    var result194 = result222;
                  } else {
                    var result194 = null;;
                  };
                }
                if (result194 !== null) {
                  if (input.substr(pos, 1) === "T") {
                    var result221 = "T";
                    pos += 1;
                  } else {
                    var result221 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"T\"");
                    }
                  }
                  if (result221 !== null) {
                    var result195 = result221;
                  } else {
                    if (input.substr(pos, 1) === "t") {
                      var result220 = "t";
                      pos += 1;
                    } else {
                      var result220 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"t\"");
                      }
                    }
                    if (result220 !== null) {
                      var result195 = result220;
                    } else {
                      var result195 = null;;
                    };
                  }
                  if (result195 !== null) {
                    if (input.substr(pos, 1) === "A") {
                      var result219 = "A";
                      pos += 1;
                    } else {
                      var result219 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"A\"");
                      }
                    }
                    if (result219 !== null) {
                      var result196 = result219;
                    } else {
                      if (input.substr(pos, 1) === "a") {
                        var result218 = "a";
                        pos += 1;
                      } else {
                        var result218 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"a\"");
                        }
                      }
                      if (result218 !== null) {
                        var result196 = result218;
                      } else {
                        var result196 = null;;
                      };
                    }
                    if (result196 !== null) {
                      if (input.substr(pos, 1) === "T") {
                        var result217 = "T";
                        pos += 1;
                      } else {
                        var result217 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"T\"");
                        }
                      }
                      if (result217 !== null) {
                        var result197 = result217;
                      } else {
                        if (input.substr(pos, 1) === "t") {
                          var result216 = "t";
                          pos += 1;
                        } else {
                          var result216 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"t\"");
                          }
                        }
                        if (result216 !== null) {
                          var result197 = result216;
                        } else {
                          var result197 = null;;
                        };
                      }
                      if (result197 !== null) {
                        if (input.substr(pos, 1) === "Y") {
                          var result215 = "Y";
                          pos += 1;
                        } else {
                          var result215 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"Y\"");
                          }
                        }
                        if (result215 !== null) {
                          var result198 = result215;
                        } else {
                          if (input.substr(pos, 1) === "y") {
                            var result214 = "y";
                            pos += 1;
                          } else {
                            var result214 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"y\"");
                            }
                          }
                          if (result214 !== null) {
                            var result198 = result214;
                          } else {
                            var result198 = null;;
                          };
                        }
                        if (result198 !== null) {
                          if (input.substr(pos, 1) === "P") {
                            var result213 = "P";
                            pos += 1;
                          } else {
                            var result213 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"P\"");
                            }
                          }
                          if (result213 !== null) {
                            var result199 = result213;
                          } else {
                            if (input.substr(pos, 1) === "p") {
                              var result212 = "p";
                              pos += 1;
                            } else {
                              var result212 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"p\"");
                              }
                            }
                            if (result212 !== null) {
                              var result199 = result212;
                            } else {
                              var result199 = null;;
                            };
                          }
                          if (result199 !== null) {
                            if (input.substr(pos, 1) === "E") {
                              var result211 = "E";
                              pos += 1;
                            } else {
                              var result211 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"E\"");
                              }
                            }
                            if (result211 !== null) {
                              var result200 = result211;
                            } else {
                              if (input.substr(pos, 1) === "e") {
                                var result210 = "e";
                                pos += 1;
                              } else {
                                var result210 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\"e\"");
                                }
                              }
                              if (result210 !== null) {
                                var result200 = result210;
                              } else {
                                var result200 = null;;
                              };
                            }
                            if (result200 !== null) {
                              var result201 = [];
                              var result209 = parse_WS();
                              while (result209 !== null) {
                                result201.push(result209);
                                var result209 = parse_WS();
                              }
                              if (result201 !== null) {
                                if (input.substr(pos, 1) === "(") {
                                  var result202 = "(";
                                  pos += 1;
                                } else {
                                  var result202 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\"(\"");
                                  }
                                }
                                if (result202 !== null) {
                                  var result203 = [];
                                  var result208 = parse_WS();
                                  while (result208 !== null) {
                                    result203.push(result208);
                                    var result208 = parse_WS();
                                  }
                                  if (result203 !== null) {
                                    var result204 = parse_ConditionalOrExpression();
                                    if (result204 !== null) {
                                      var result205 = [];
                                      var result207 = parse_WS();
                                      while (result207 !== null) {
                                        result205.push(result207);
                                        var result207 = parse_WS();
                                      }
                                      if (result205 !== null) {
                                        if (input.substr(pos, 1) === ")") {
                                          var result206 = ")";
                                          pos += 1;
                                        } else {
                                          var result206 = null;
                                          if (reportMatchFailures) {
                                            matchFailed("\")\"");
                                          }
                                        }
                                        if (result206 !== null) {
                                          var result191 = [result193, result194, result195, result196, result197, result198, result199, result200, result201, result202, result203, result204, result205, result206];
                                        } else {
                                          var result191 = null;
                                          pos = savedPos24;
                                        }
                                      } else {
                                        var result191 = null;
                                        pos = savedPos24;
                                      }
                                    } else {
                                      var result191 = null;
                                      pos = savedPos24;
                                    }
                                  } else {
                                    var result191 = null;
                                    pos = savedPos24;
                                  }
                                } else {
                                  var result191 = null;
                                  pos = savedPos24;
                                }
                              } else {
                                var result191 = null;
                                pos = savedPos24;
                              }
                            } else {
                              var result191 = null;
                              pos = savedPos24;
                            }
                          } else {
                            var result191 = null;
                            pos = savedPos24;
                          }
                        } else {
                          var result191 = null;
                          pos = savedPos24;
                        }
                      } else {
                        var result191 = null;
                        pos = savedPos24;
                      }
                    } else {
                      var result191 = null;
                      pos = savedPos24;
                    }
                  } else {
                    var result191 = null;
                    pos = savedPos24;
                  }
                } else {
                  var result191 = null;
                  pos = savedPos24;
                }
              } else {
                var result191 = null;
                pos = savedPos24;
              }
              var result192 = result191 !== null
                ? (function(e) {
                      var ex = {};
                      ex.token = 'expression'
                      ex.expressionType = 'builtincall'
                      ex.builtincall = 'datatype'
                      ex.args = [e]
                
                      return ex;
                })(result191[11])
                : null;
              if (result192 !== null) {
                var result190 = result192;
              } else {
                var result190 = null;
                pos = savedPos23;
              }
              if (result190 !== null) {
                var result0 = result190;
              } else {
                var savedPos21 = pos;
                var savedPos22 = pos;
                if (input.substr(pos, 5) === "BOUND") {
                  var result180 = "BOUND";
                  pos += 5;
                } else {
                  var result180 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"BOUND\"");
                  }
                }
                if (result180 !== null) {
                  var result181 = [];
                  var result189 = parse_WS();
                  while (result189 !== null) {
                    result181.push(result189);
                    var result189 = parse_WS();
                  }
                  if (result181 !== null) {
                    if (input.substr(pos, 1) === "(") {
                      var result182 = "(";
                      pos += 1;
                    } else {
                      var result182 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"(\"");
                      }
                    }
                    if (result182 !== null) {
                      var result183 = [];
                      var result188 = parse_WS();
                      while (result188 !== null) {
                        result183.push(result188);
                        var result188 = parse_WS();
                      }
                      if (result183 !== null) {
                        var result184 = parse_Var();
                        if (result184 !== null) {
                          var result185 = [];
                          var result187 = parse_WS();
                          while (result187 !== null) {
                            result185.push(result187);
                            var result187 = parse_WS();
                          }
                          if (result185 !== null) {
                            if (input.substr(pos, 1) === ")") {
                              var result186 = ")";
                              pos += 1;
                            } else {
                              var result186 = null;
                              if (reportMatchFailures) {
                                matchFailed("\")\"");
                              }
                            }
                            if (result186 !== null) {
                              var result178 = [result180, result181, result182, result183, result184, result185, result186];
                            } else {
                              var result178 = null;
                              pos = savedPos22;
                            }
                          } else {
                            var result178 = null;
                            pos = savedPos22;
                          }
                        } else {
                          var result178 = null;
                          pos = savedPos22;
                        }
                      } else {
                        var result178 = null;
                        pos = savedPos22;
                      }
                    } else {
                      var result178 = null;
                      pos = savedPos22;
                    }
                  } else {
                    var result178 = null;
                    pos = savedPos22;
                  }
                } else {
                  var result178 = null;
                  pos = savedPos22;
                }
                var result179 = result178 !== null
                  ? (function(v) {
                        var ex = {};
                        ex.token = 'expression'
                        ex.expressionType = 'builtincall'
                        ex.builtincall = 'bound'
                        ex.args = [v]
                  
                        return ex;
                  })(result178[4])
                  : null;
                if (result179 !== null) {
                  var result177 = result179;
                } else {
                  var result177 = null;
                  pos = savedPos21;
                }
                if (result177 !== null) {
                  var result0 = result177;
                } else {
                  var savedPos19 = pos;
                  var savedPos20 = pos;
                  if (input.substr(pos, 3) === "IRI") {
                    var result167 = "IRI";
                    pos += 3;
                  } else {
                    var result167 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"IRI\"");
                    }
                  }
                  if (result167 !== null) {
                    var result168 = [];
                    var result176 = parse_WS();
                    while (result176 !== null) {
                      result168.push(result176);
                      var result176 = parse_WS();
                    }
                    if (result168 !== null) {
                      if (input.substr(pos, 1) === "(") {
                        var result169 = "(";
                        pos += 1;
                      } else {
                        var result169 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"(\"");
                        }
                      }
                      if (result169 !== null) {
                        var result170 = [];
                        var result175 = parse_WS();
                        while (result175 !== null) {
                          result170.push(result175);
                          var result175 = parse_WS();
                        }
                        if (result170 !== null) {
                          var result171 = parse_ConditionalOrExpression();
                          if (result171 !== null) {
                            var result172 = [];
                            var result174 = parse_WS();
                            while (result174 !== null) {
                              result172.push(result174);
                              var result174 = parse_WS();
                            }
                            if (result172 !== null) {
                              if (input.substr(pos, 1) === ")") {
                                var result173 = ")";
                                pos += 1;
                              } else {
                                var result173 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\")\"");
                                }
                              }
                              if (result173 !== null) {
                                var result165 = [result167, result168, result169, result170, result171, result172, result173];
                              } else {
                                var result165 = null;
                                pos = savedPos20;
                              }
                            } else {
                              var result165 = null;
                              pos = savedPos20;
                            }
                          } else {
                            var result165 = null;
                            pos = savedPos20;
                          }
                        } else {
                          var result165 = null;
                          pos = savedPos20;
                        }
                      } else {
                        var result165 = null;
                        pos = savedPos20;
                      }
                    } else {
                      var result165 = null;
                      pos = savedPos20;
                    }
                  } else {
                    var result165 = null;
                    pos = savedPos20;
                  }
                  var result166 = result165 !== null
                    ? (function(e) {
                          var ex = {};
                          ex.token = 'expression';
                          ex.expressionType = 'builtincall';
                          ex.builtincall = 'iri'
                          ex.args = [e];
                    
                          return ex;
                    })(result165[4])
                    : null;
                  if (result166 !== null) {
                    var result164 = result166;
                  } else {
                    var result164 = null;
                    pos = savedPos19;
                  }
                  if (result164 !== null) {
                    var result0 = result164;
                  } else {
                    var savedPos17 = pos;
                    var savedPos18 = pos;
                    if (input.substr(pos, 3) === "URI") {
                      var result154 = "URI";
                      pos += 3;
                    } else {
                      var result154 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"URI\"");
                      }
                    }
                    if (result154 !== null) {
                      var result155 = [];
                      var result163 = parse_WS();
                      while (result163 !== null) {
                        result155.push(result163);
                        var result163 = parse_WS();
                      }
                      if (result155 !== null) {
                        if (input.substr(pos, 1) === "(") {
                          var result156 = "(";
                          pos += 1;
                        } else {
                          var result156 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"(\"");
                          }
                        }
                        if (result156 !== null) {
                          var result157 = [];
                          var result162 = parse_WS();
                          while (result162 !== null) {
                            result157.push(result162);
                            var result162 = parse_WS();
                          }
                          if (result157 !== null) {
                            var result158 = parse_ConditionalOrExpression();
                            if (result158 !== null) {
                              var result159 = [];
                              var result161 = parse_WS();
                              while (result161 !== null) {
                                result159.push(result161);
                                var result161 = parse_WS();
                              }
                              if (result159 !== null) {
                                if (input.substr(pos, 1) === ")") {
                                  var result160 = ")";
                                  pos += 1;
                                } else {
                                  var result160 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\")\"");
                                  }
                                }
                                if (result160 !== null) {
                                  var result152 = [result154, result155, result156, result157, result158, result159, result160];
                                } else {
                                  var result152 = null;
                                  pos = savedPos18;
                                }
                              } else {
                                var result152 = null;
                                pos = savedPos18;
                              }
                            } else {
                              var result152 = null;
                              pos = savedPos18;
                            }
                          } else {
                            var result152 = null;
                            pos = savedPos18;
                          }
                        } else {
                          var result152 = null;
                          pos = savedPos18;
                        }
                      } else {
                        var result152 = null;
                        pos = savedPos18;
                      }
                    } else {
                      var result152 = null;
                      pos = savedPos18;
                    }
                    var result153 = result152 !== null
                      ? (function(e) {
                            var ex = {};
                            ex.token = 'expression';
                            ex.expressionType = 'builtincall';
                            ex.builtincall = 'uri'
                            ex.args = [e];
                      
                            return ex;
                      })(result152[4])
                      : null;
                    if (result153 !== null) {
                      var result151 = result153;
                    } else {
                      var result151 = null;
                      pos = savedPos17;
                    }
                    if (result151 !== null) {
                      var result0 = result151;
                    } else {
                      var savedPos14 = pos;
                      var savedPos15 = pos;
                      if (input.substr(pos, 5) === "BNODE") {
                        var result138 = "BNODE";
                        pos += 5;
                      } else {
                        var result138 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"BNODE\"");
                        }
                      }
                      if (result138 !== null) {
                        var result139 = [];
                        var result150 = parse_WS();
                        while (result150 !== null) {
                          result139.push(result150);
                          var result150 = parse_WS();
                        }
                        if (result139 !== null) {
                          var savedPos16 = pos;
                          if (input.substr(pos, 1) === "(") {
                            var result143 = "(";
                            pos += 1;
                          } else {
                            var result143 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"(\"");
                            }
                          }
                          if (result143 !== null) {
                            var result144 = [];
                            var result149 = parse_WS();
                            while (result149 !== null) {
                              result144.push(result149);
                              var result149 = parse_WS();
                            }
                            if (result144 !== null) {
                              var result145 = parse_ConditionalOrExpression();
                              if (result145 !== null) {
                                var result146 = [];
                                var result148 = parse_WS();
                                while (result148 !== null) {
                                  result146.push(result148);
                                  var result148 = parse_WS();
                                }
                                if (result146 !== null) {
                                  if (input.substr(pos, 1) === ")") {
                                    var result147 = ")";
                                    pos += 1;
                                  } else {
                                    var result147 = null;
                                    if (reportMatchFailures) {
                                      matchFailed("\")\"");
                                    }
                                  }
                                  if (result147 !== null) {
                                    var result142 = [result143, result144, result145, result146, result147];
                                  } else {
                                    var result142 = null;
                                    pos = savedPos16;
                                  }
                                } else {
                                  var result142 = null;
                                  pos = savedPos16;
                                }
                              } else {
                                var result142 = null;
                                pos = savedPos16;
                              }
                            } else {
                              var result142 = null;
                              pos = savedPos16;
                            }
                          } else {
                            var result142 = null;
                            pos = savedPos16;
                          }
                          if (result142 !== null) {
                            var result140 = result142;
                          } else {
                            var result141 = parse_NIL();
                            if (result141 !== null) {
                              var result140 = result141;
                            } else {
                              var result140 = null;;
                            };
                          }
                          if (result140 !== null) {
                            var result136 = [result138, result139, result140];
                          } else {
                            var result136 = null;
                            pos = savedPos15;
                          }
                        } else {
                          var result136 = null;
                          pos = savedPos15;
                        }
                      } else {
                        var result136 = null;
                        pos = savedPos15;
                      }
                      var result137 = result136 !== null
                        ? (function(arg) {
                              var ex = {};
                              ex.token = 'expression';
                              ex.expressionType = 'builtincall';
                              ex.builtincall = 'bnode';
                              if(arg.length === 5) {
                                  ex.args = [arg[2]];
                              } else {
                                  ex.args = null;
                              }
                        
                              return ex;
                        })(result136[2])
                        : null;
                      if (result137 !== null) {
                        var result135 = result137;
                      } else {
                        var result135 = null;
                        pos = savedPos14;
                      }
                      if (result135 !== null) {
                        var result0 = result135;
                      } else {
                        var savedPos12 = pos;
                        var savedPos13 = pos;
                        if (input.substr(pos, 8) === "COALESCE") {
                          var result131 = "COALESCE";
                          pos += 8;
                        } else {
                          var result131 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"COALESCE\"");
                          }
                        }
                        if (result131 !== null) {
                          var result132 = [];
                          var result134 = parse_WS();
                          while (result134 !== null) {
                            result132.push(result134);
                            var result134 = parse_WS();
                          }
                          if (result132 !== null) {
                            var result133 = parse_ExpressionList();
                            if (result133 !== null) {
                              var result129 = [result131, result132, result133];
                            } else {
                              var result129 = null;
                              pos = savedPos13;
                            }
                          } else {
                            var result129 = null;
                            pos = savedPos13;
                          }
                        } else {
                          var result129 = null;
                          pos = savedPos13;
                        }
                        var result130 = result129 !== null
                          ? (function(args) {
                                var ex = {};
                                ex.token = 'expression';
                                ex.expressionType = 'builtincall';
                                ex.builtincall = 'coalesce';
                                ex.args = args;
                          
                                return ex;    
                          })(result129[2])
                          : null;
                        if (result130 !== null) {
                          var result128 = result130;
                        } else {
                          var result128 = null;
                          pos = savedPos12;
                        }
                        if (result128 !== null) {
                          var result0 = result128;
                        } else {
                          var savedPos10 = pos;
                          var savedPos11 = pos;
                          if (input.substr(pos, 2) === "IF") {
                            var result106 = "IF";
                            pos += 2;
                          } else {
                            var result106 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"IF\"");
                            }
                          }
                          if (result106 !== null) {
                            var result107 = [];
                            var result127 = parse_WS();
                            while (result127 !== null) {
                              result107.push(result127);
                              var result127 = parse_WS();
                            }
                            if (result107 !== null) {
                              if (input.substr(pos, 1) === "(") {
                                var result108 = "(";
                                pos += 1;
                              } else {
                                var result108 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\"(\"");
                                }
                              }
                              if (result108 !== null) {
                                var result109 = [];
                                var result126 = parse_WS();
                                while (result126 !== null) {
                                  result109.push(result126);
                                  var result126 = parse_WS();
                                }
                                if (result109 !== null) {
                                  var result110 = parse_ConditionalOrExpression();
                                  if (result110 !== null) {
                                    var result111 = [];
                                    var result125 = parse_WS();
                                    while (result125 !== null) {
                                      result111.push(result125);
                                      var result125 = parse_WS();
                                    }
                                    if (result111 !== null) {
                                      if (input.substr(pos, 1) === ",") {
                                        var result112 = ",";
                                        pos += 1;
                                      } else {
                                        var result112 = null;
                                        if (reportMatchFailures) {
                                          matchFailed("\",\"");
                                        }
                                      }
                                      if (result112 !== null) {
                                        var result113 = [];
                                        var result124 = parse_WS();
                                        while (result124 !== null) {
                                          result113.push(result124);
                                          var result124 = parse_WS();
                                        }
                                        if (result113 !== null) {
                                          var result114 = parse_ConditionalOrExpression();
                                          if (result114 !== null) {
                                            var result115 = [];
                                            var result123 = parse_WS();
                                            while (result123 !== null) {
                                              result115.push(result123);
                                              var result123 = parse_WS();
                                            }
                                            if (result115 !== null) {
                                              if (input.substr(pos, 1) === ",") {
                                                var result116 = ",";
                                                pos += 1;
                                              } else {
                                                var result116 = null;
                                                if (reportMatchFailures) {
                                                  matchFailed("\",\"");
                                                }
                                              }
                                              if (result116 !== null) {
                                                var result117 = [];
                                                var result122 = parse_WS();
                                                while (result122 !== null) {
                                                  result117.push(result122);
                                                  var result122 = parse_WS();
                                                }
                                                if (result117 !== null) {
                                                  var result118 = parse_ConditionalOrExpression();
                                                  if (result118 !== null) {
                                                    var result119 = [];
                                                    var result121 = parse_WS();
                                                    while (result121 !== null) {
                                                      result119.push(result121);
                                                      var result121 = parse_WS();
                                                    }
                                                    if (result119 !== null) {
                                                      if (input.substr(pos, 1) === ")") {
                                                        var result120 = ")";
                                                        pos += 1;
                                                      } else {
                                                        var result120 = null;
                                                        if (reportMatchFailures) {
                                                          matchFailed("\")\"");
                                                        }
                                                      }
                                                      if (result120 !== null) {
                                                        var result104 = [result106, result107, result108, result109, result110, result111, result112, result113, result114, result115, result116, result117, result118, result119, result120];
                                                      } else {
                                                        var result104 = null;
                                                        pos = savedPos11;
                                                      }
                                                    } else {
                                                      var result104 = null;
                                                      pos = savedPos11;
                                                    }
                                                  } else {
                                                    var result104 = null;
                                                    pos = savedPos11;
                                                  }
                                                } else {
                                                  var result104 = null;
                                                  pos = savedPos11;
                                                }
                                              } else {
                                                var result104 = null;
                                                pos = savedPos11;
                                              }
                                            } else {
                                              var result104 = null;
                                              pos = savedPos11;
                                            }
                                          } else {
                                            var result104 = null;
                                            pos = savedPos11;
                                          }
                                        } else {
                                          var result104 = null;
                                          pos = savedPos11;
                                        }
                                      } else {
                                        var result104 = null;
                                        pos = savedPos11;
                                      }
                                    } else {
                                      var result104 = null;
                                      pos = savedPos11;
                                    }
                                  } else {
                                    var result104 = null;
                                    pos = savedPos11;
                                  }
                                } else {
                                  var result104 = null;
                                  pos = savedPos11;
                                }
                              } else {
                                var result104 = null;
                                pos = savedPos11;
                              }
                            } else {
                              var result104 = null;
                              pos = savedPos11;
                            }
                          } else {
                            var result104 = null;
                            pos = savedPos11;
                          }
                          var result105 = result104 !== null
                            ? (function(test, trueCond, falseCond) {
                                var ex = {};
                                ex.token = 'expression';
                                ex.expressionType = 'builtincall';
                                ex.builtincall = 'if';
                                ex.args = [test,trueCond,falseCond];
                            
                                return ex;
                            })(result104[4], result104[8], result104[12])
                            : null;
                          if (result105 !== null) {
                            var result103 = result105;
                          } else {
                            var result103 = null;
                            pos = savedPos10;
                          }
                          if (result103 !== null) {
                            var result0 = result103;
                          } else {
                            var savedPos8 = pos;
                            var savedPos9 = pos;
                            if (input.substr(pos, 9) === "ISLITERAL") {
                              var result93 = "ISLITERAL";
                              pos += 9;
                            } else {
                              var result93 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"ISLITERAL\"");
                              }
                            }
                            if (result93 !== null) {
                              var result94 = [];
                              var result102 = parse_WS();
                              while (result102 !== null) {
                                result94.push(result102);
                                var result102 = parse_WS();
                              }
                              if (result94 !== null) {
                                if (input.substr(pos, 1) === "(") {
                                  var result95 = "(";
                                  pos += 1;
                                } else {
                                  var result95 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\"(\"");
                                  }
                                }
                                if (result95 !== null) {
                                  var result96 = [];
                                  var result101 = parse_WS();
                                  while (result101 !== null) {
                                    result96.push(result101);
                                    var result101 = parse_WS();
                                  }
                                  if (result96 !== null) {
                                    var result97 = parse_ConditionalOrExpression();
                                    if (result97 !== null) {
                                      var result98 = [];
                                      var result100 = parse_WS();
                                      while (result100 !== null) {
                                        result98.push(result100);
                                        var result100 = parse_WS();
                                      }
                                      if (result98 !== null) {
                                        if (input.substr(pos, 1) === ")") {
                                          var result99 = ")";
                                          pos += 1;
                                        } else {
                                          var result99 = null;
                                          if (reportMatchFailures) {
                                            matchFailed("\")\"");
                                          }
                                        }
                                        if (result99 !== null) {
                                          var result91 = [result93, result94, result95, result96, result97, result98, result99];
                                        } else {
                                          var result91 = null;
                                          pos = savedPos9;
                                        }
                                      } else {
                                        var result91 = null;
                                        pos = savedPos9;
                                      }
                                    } else {
                                      var result91 = null;
                                      pos = savedPos9;
                                    }
                                  } else {
                                    var result91 = null;
                                    pos = savedPos9;
                                  }
                                } else {
                                  var result91 = null;
                                  pos = savedPos9;
                                }
                              } else {
                                var result91 = null;
                                pos = savedPos9;
                              }
                            } else {
                              var result91 = null;
                              pos = savedPos9;
                            }
                            var result92 = result91 !== null
                              ? (function(arg) {
                                  var ex = {};
                                  ex.token = 'expression';
                                  ex.expressionType = 'builtincall';
                                  ex.builtincall = 'isliteral';
                                  ex.args = [arg];
                              
                                  return ex;
                              })(result91[4])
                              : null;
                            if (result92 !== null) {
                              var result90 = result92;
                            } else {
                              var result90 = null;
                              pos = savedPos8;
                            }
                            if (result90 !== null) {
                              var result0 = result90;
                            } else {
                              var savedPos6 = pos;
                              var savedPos7 = pos;
                              if (input.substr(pos, 7) === "ISBLANK") {
                                var result80 = "ISBLANK";
                                pos += 7;
                              } else {
                                var result80 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\"ISBLANK\"");
                                }
                              }
                              if (result80 !== null) {
                                var result81 = [];
                                var result89 = parse_WS();
                                while (result89 !== null) {
                                  result81.push(result89);
                                  var result89 = parse_WS();
                                }
                                if (result81 !== null) {
                                  if (input.substr(pos, 1) === "(") {
                                    var result82 = "(";
                                    pos += 1;
                                  } else {
                                    var result82 = null;
                                    if (reportMatchFailures) {
                                      matchFailed("\"(\"");
                                    }
                                  }
                                  if (result82 !== null) {
                                    var result83 = [];
                                    var result88 = parse_WS();
                                    while (result88 !== null) {
                                      result83.push(result88);
                                      var result88 = parse_WS();
                                    }
                                    if (result83 !== null) {
                                      var result84 = parse_ConditionalOrExpression();
                                      if (result84 !== null) {
                                        var result85 = [];
                                        var result87 = parse_WS();
                                        while (result87 !== null) {
                                          result85.push(result87);
                                          var result87 = parse_WS();
                                        }
                                        if (result85 !== null) {
                                          if (input.substr(pos, 1) === ")") {
                                            var result86 = ")";
                                            pos += 1;
                                          } else {
                                            var result86 = null;
                                            if (reportMatchFailures) {
                                              matchFailed("\")\"");
                                            }
                                          }
                                          if (result86 !== null) {
                                            var result78 = [result80, result81, result82, result83, result84, result85, result86];
                                          } else {
                                            var result78 = null;
                                            pos = savedPos7;
                                          }
                                        } else {
                                          var result78 = null;
                                          pos = savedPos7;
                                        }
                                      } else {
                                        var result78 = null;
                                        pos = savedPos7;
                                      }
                                    } else {
                                      var result78 = null;
                                      pos = savedPos7;
                                    }
                                  } else {
                                    var result78 = null;
                                    pos = savedPos7;
                                  }
                                } else {
                                  var result78 = null;
                                  pos = savedPos7;
                                }
                              } else {
                                var result78 = null;
                                pos = savedPos7;
                              }
                              var result79 = result78 !== null
                                ? (function(arg) {
                                    var ex = {};
                                    ex.token = 'expression';
                                    ex.expressionType = 'builtincall';
                                    ex.builtincall = 'isblank';
                                    ex.args = [arg];
                                
                                    return ex;
                                })(result78[4])
                                : null;
                              if (result79 !== null) {
                                var result77 = result79;
                              } else {
                                var result77 = null;
                                pos = savedPos6;
                              }
                              if (result77 !== null) {
                                var result0 = result77;
                              } else {
                                var savedPos4 = pos;
                                var savedPos5 = pos;
                                if (input.substr(pos, 8) === "SAMETERM") {
                                  var result61 = "SAMETERM";
                                  pos += 8;
                                } else {
                                  var result61 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\"SAMETERM\"");
                                  }
                                }
                                if (result61 !== null) {
                                  var result62 = [];
                                  var result76 = parse_WS();
                                  while (result76 !== null) {
                                    result62.push(result76);
                                    var result76 = parse_WS();
                                  }
                                  if (result62 !== null) {
                                    if (input.substr(pos, 1) === "(") {
                                      var result63 = "(";
                                      pos += 1;
                                    } else {
                                      var result63 = null;
                                      if (reportMatchFailures) {
                                        matchFailed("\"(\"");
                                      }
                                    }
                                    if (result63 !== null) {
                                      var result64 = [];
                                      var result75 = parse_WS();
                                      while (result75 !== null) {
                                        result64.push(result75);
                                        var result75 = parse_WS();
                                      }
                                      if (result64 !== null) {
                                        var result65 = parse_ConditionalOrExpression();
                                        if (result65 !== null) {
                                          var result66 = [];
                                          var result74 = parse_WS();
                                          while (result74 !== null) {
                                            result66.push(result74);
                                            var result74 = parse_WS();
                                          }
                                          if (result66 !== null) {
                                            if (input.substr(pos, 1) === ",") {
                                              var result67 = ",";
                                              pos += 1;
                                            } else {
                                              var result67 = null;
                                              if (reportMatchFailures) {
                                                matchFailed("\",\"");
                                              }
                                            }
                                            if (result67 !== null) {
                                              var result68 = [];
                                              var result73 = parse_WS();
                                              while (result73 !== null) {
                                                result68.push(result73);
                                                var result73 = parse_WS();
                                              }
                                              if (result68 !== null) {
                                                var result69 = parse_ConditionalOrExpression();
                                                if (result69 !== null) {
                                                  var result70 = [];
                                                  var result72 = parse_WS();
                                                  while (result72 !== null) {
                                                    result70.push(result72);
                                                    var result72 = parse_WS();
                                                  }
                                                  if (result70 !== null) {
                                                    if (input.substr(pos, 1) === ")") {
                                                      var result71 = ")";
                                                      pos += 1;
                                                    } else {
                                                      var result71 = null;
                                                      if (reportMatchFailures) {
                                                        matchFailed("\")\"");
                                                      }
                                                    }
                                                    if (result71 !== null) {
                                                      var result59 = [result61, result62, result63, result64, result65, result66, result67, result68, result69, result70, result71];
                                                    } else {
                                                      var result59 = null;
                                                      pos = savedPos5;
                                                    }
                                                  } else {
                                                    var result59 = null;
                                                    pos = savedPos5;
                                                  }
                                                } else {
                                                  var result59 = null;
                                                  pos = savedPos5;
                                                }
                                              } else {
                                                var result59 = null;
                                                pos = savedPos5;
                                              }
                                            } else {
                                              var result59 = null;
                                              pos = savedPos5;
                                            }
                                          } else {
                                            var result59 = null;
                                            pos = savedPos5;
                                          }
                                        } else {
                                          var result59 = null;
                                          pos = savedPos5;
                                        }
                                      } else {
                                        var result59 = null;
                                        pos = savedPos5;
                                      }
                                    } else {
                                      var result59 = null;
                                      pos = savedPos5;
                                    }
                                  } else {
                                    var result59 = null;
                                    pos = savedPos5;
                                  }
                                } else {
                                  var result59 = null;
                                  pos = savedPos5;
                                }
                                var result60 = result59 !== null
                                  ? (function(e1, e2) {
                                      var ex = {};
                                      ex.token = 'expression';
                                      ex.expressionType = 'builtincall';
                                      ex.builtincall = 'sameterm';
                                      ex.args = [e1, e2];
                                      return ex;
                                  })(result59[4], result59[8])
                                  : null;
                                if (result60 !== null) {
                                  var result58 = result60;
                                } else {
                                  var result58 = null;
                                  pos = savedPos4;
                                }
                                if (result58 !== null) {
                                  var result0 = result58;
                                } else {
                                  var savedPos2 = pos;
                                  var savedPos3 = pos;
                                  if (input.substr(pos, 1) === "I") {
                                    var result57 = "I";
                                    pos += 1;
                                  } else {
                                    var result57 = null;
                                    if (reportMatchFailures) {
                                      matchFailed("\"I\"");
                                    }
                                  }
                                  if (result57 !== null) {
                                    var result34 = result57;
                                  } else {
                                    if (input.substr(pos, 1) === "i") {
                                      var result56 = "i";
                                      pos += 1;
                                    } else {
                                      var result56 = null;
                                      if (reportMatchFailures) {
                                        matchFailed("\"i\"");
                                      }
                                    }
                                    if (result56 !== null) {
                                      var result34 = result56;
                                    } else {
                                      var result34 = null;;
                                    };
                                  }
                                  if (result34 !== null) {
                                    if (input.substr(pos, 1) === "S") {
                                      var result55 = "S";
                                      pos += 1;
                                    } else {
                                      var result55 = null;
                                      if (reportMatchFailures) {
                                        matchFailed("\"S\"");
                                      }
                                    }
                                    if (result55 !== null) {
                                      var result35 = result55;
                                    } else {
                                      if (input.substr(pos, 1) === "s") {
                                        var result54 = "s";
                                        pos += 1;
                                      } else {
                                        var result54 = null;
                                        if (reportMatchFailures) {
                                          matchFailed("\"s\"");
                                        }
                                      }
                                      if (result54 !== null) {
                                        var result35 = result54;
                                      } else {
                                        var result35 = null;;
                                      };
                                    }
                                    if (result35 !== null) {
                                      if (input.substr(pos, 1) === "U") {
                                        var result53 = "U";
                                        pos += 1;
                                      } else {
                                        var result53 = null;
                                        if (reportMatchFailures) {
                                          matchFailed("\"U\"");
                                        }
                                      }
                                      if (result53 !== null) {
                                        var result36 = result53;
                                      } else {
                                        if (input.substr(pos, 1) === "u") {
                                          var result52 = "u";
                                          pos += 1;
                                        } else {
                                          var result52 = null;
                                          if (reportMatchFailures) {
                                            matchFailed("\"u\"");
                                          }
                                        }
                                        if (result52 !== null) {
                                          var result36 = result52;
                                        } else {
                                          var result36 = null;;
                                        };
                                      }
                                      if (result36 !== null) {
                                        if (input.substr(pos, 1) === "R") {
                                          var result51 = "R";
                                          pos += 1;
                                        } else {
                                          var result51 = null;
                                          if (reportMatchFailures) {
                                            matchFailed("\"R\"");
                                          }
                                        }
                                        if (result51 !== null) {
                                          var result37 = result51;
                                        } else {
                                          if (input.substr(pos, 1) === "r") {
                                            var result50 = "r";
                                            pos += 1;
                                          } else {
                                            var result50 = null;
                                            if (reportMatchFailures) {
                                              matchFailed("\"r\"");
                                            }
                                          }
                                          if (result50 !== null) {
                                            var result37 = result50;
                                          } else {
                                            var result37 = null;;
                                          };
                                        }
                                        if (result37 !== null) {
                                          if (input.substr(pos, 1) === "I") {
                                            var result49 = "I";
                                            pos += 1;
                                          } else {
                                            var result49 = null;
                                            if (reportMatchFailures) {
                                              matchFailed("\"I\"");
                                            }
                                          }
                                          if (result49 !== null) {
                                            var result38 = result49;
                                          } else {
                                            if (input.substr(pos, 1) === "i") {
                                              var result48 = "i";
                                              pos += 1;
                                            } else {
                                              var result48 = null;
                                              if (reportMatchFailures) {
                                                matchFailed("\"i\"");
                                              }
                                            }
                                            if (result48 !== null) {
                                              var result38 = result48;
                                            } else {
                                              var result38 = null;;
                                            };
                                          }
                                          if (result38 !== null) {
                                            var result39 = [];
                                            var result47 = parse_WS();
                                            while (result47 !== null) {
                                              result39.push(result47);
                                              var result47 = parse_WS();
                                            }
                                            if (result39 !== null) {
                                              if (input.substr(pos, 1) === "(") {
                                                var result40 = "(";
                                                pos += 1;
                                              } else {
                                                var result40 = null;
                                                if (reportMatchFailures) {
                                                  matchFailed("\"(\"");
                                                }
                                              }
                                              if (result40 !== null) {
                                                var result41 = [];
                                                var result46 = parse_WS();
                                                while (result46 !== null) {
                                                  result41.push(result46);
                                                  var result46 = parse_WS();
                                                }
                                                if (result41 !== null) {
                                                  var result42 = parse_ConditionalOrExpression();
                                                  if (result42 !== null) {
                                                    var result43 = [];
                                                    var result45 = parse_WS();
                                                    while (result45 !== null) {
                                                      result43.push(result45);
                                                      var result45 = parse_WS();
                                                    }
                                                    if (result43 !== null) {
                                                      if (input.substr(pos, 1) === ")") {
                                                        var result44 = ")";
                                                        pos += 1;
                                                      } else {
                                                        var result44 = null;
                                                        if (reportMatchFailures) {
                                                          matchFailed("\")\"");
                                                        }
                                                      }
                                                      if (result44 !== null) {
                                                        var result32 = [result34, result35, result36, result37, result38, result39, result40, result41, result42, result43, result44];
                                                      } else {
                                                        var result32 = null;
                                                        pos = savedPos3;
                                                      }
                                                    } else {
                                                      var result32 = null;
                                                      pos = savedPos3;
                                                    }
                                                  } else {
                                                    var result32 = null;
                                                    pos = savedPos3;
                                                  }
                                                } else {
                                                  var result32 = null;
                                                  pos = savedPos3;
                                                }
                                              } else {
                                                var result32 = null;
                                                pos = savedPos3;
                                              }
                                            } else {
                                              var result32 = null;
                                              pos = savedPos3;
                                            }
                                          } else {
                                            var result32 = null;
                                            pos = savedPos3;
                                          }
                                        } else {
                                          var result32 = null;
                                          pos = savedPos3;
                                        }
                                      } else {
                                        var result32 = null;
                                        pos = savedPos3;
                                      }
                                    } else {
                                      var result32 = null;
                                      pos = savedPos3;
                                    }
                                  } else {
                                    var result32 = null;
                                    pos = savedPos3;
                                  }
                                  var result33 = result32 !== null
                                    ? (function(arg) {
                                        var ex = {};
                                        ex.token = 'expression';
                                        ex.expressionType = 'builtincall';
                                        ex.builtincall = 'isuri';
                                        ex.args = [arg];
                                    
                                        return ex;
                                    })(result32[8])
                                    : null;
                                  if (result33 !== null) {
                                    var result31 = result33;
                                  } else {
                                    var result31 = null;
                                    pos = savedPos2;
                                  }
                                  if (result31 !== null) {
                                    var result0 = result31;
                                  } else {
                                    var savedPos0 = pos;
                                    var savedPos1 = pos;
                                    if (input.substr(pos, 1) === "I") {
                                      var result30 = "I";
                                      pos += 1;
                                    } else {
                                      var result30 = null;
                                      if (reportMatchFailures) {
                                        matchFailed("\"I\"");
                                      }
                                    }
                                    if (result30 !== null) {
                                      var result7 = result30;
                                    } else {
                                      if (input.substr(pos, 1) === "i") {
                                        var result29 = "i";
                                        pos += 1;
                                      } else {
                                        var result29 = null;
                                        if (reportMatchFailures) {
                                          matchFailed("\"i\"");
                                        }
                                      }
                                      if (result29 !== null) {
                                        var result7 = result29;
                                      } else {
                                        var result7 = null;;
                                      };
                                    }
                                    if (result7 !== null) {
                                      if (input.substr(pos, 1) === "S") {
                                        var result28 = "S";
                                        pos += 1;
                                      } else {
                                        var result28 = null;
                                        if (reportMatchFailures) {
                                          matchFailed("\"S\"");
                                        }
                                      }
                                      if (result28 !== null) {
                                        var result8 = result28;
                                      } else {
                                        if (input.substr(pos, 1) === "s") {
                                          var result27 = "s";
                                          pos += 1;
                                        } else {
                                          var result27 = null;
                                          if (reportMatchFailures) {
                                            matchFailed("\"s\"");
                                          }
                                        }
                                        if (result27 !== null) {
                                          var result8 = result27;
                                        } else {
                                          var result8 = null;;
                                        };
                                      }
                                      if (result8 !== null) {
                                        if (input.substr(pos, 1) === "I") {
                                          var result26 = "I";
                                          pos += 1;
                                        } else {
                                          var result26 = null;
                                          if (reportMatchFailures) {
                                            matchFailed("\"I\"");
                                          }
                                        }
                                        if (result26 !== null) {
                                          var result9 = result26;
                                        } else {
                                          if (input.substr(pos, 1) === "i") {
                                            var result25 = "i";
                                            pos += 1;
                                          } else {
                                            var result25 = null;
                                            if (reportMatchFailures) {
                                              matchFailed("\"i\"");
                                            }
                                          }
                                          if (result25 !== null) {
                                            var result9 = result25;
                                          } else {
                                            var result9 = null;;
                                          };
                                        }
                                        if (result9 !== null) {
                                          if (input.substr(pos, 1) === "R") {
                                            var result24 = "R";
                                            pos += 1;
                                          } else {
                                            var result24 = null;
                                            if (reportMatchFailures) {
                                              matchFailed("\"R\"");
                                            }
                                          }
                                          if (result24 !== null) {
                                            var result10 = result24;
                                          } else {
                                            if (input.substr(pos, 1) === "r") {
                                              var result23 = "r";
                                              pos += 1;
                                            } else {
                                              var result23 = null;
                                              if (reportMatchFailures) {
                                                matchFailed("\"r\"");
                                              }
                                            }
                                            if (result23 !== null) {
                                              var result10 = result23;
                                            } else {
                                              var result10 = null;;
                                            };
                                          }
                                          if (result10 !== null) {
                                            if (input.substr(pos, 1) === "I") {
                                              var result22 = "I";
                                              pos += 1;
                                            } else {
                                              var result22 = null;
                                              if (reportMatchFailures) {
                                                matchFailed("\"I\"");
                                              }
                                            }
                                            if (result22 !== null) {
                                              var result11 = result22;
                                            } else {
                                              if (input.substr(pos, 1) === "i") {
                                                var result21 = "i";
                                                pos += 1;
                                              } else {
                                                var result21 = null;
                                                if (reportMatchFailures) {
                                                  matchFailed("\"i\"");
                                                }
                                              }
                                              if (result21 !== null) {
                                                var result11 = result21;
                                              } else {
                                                var result11 = null;;
                                              };
                                            }
                                            if (result11 !== null) {
                                              var result12 = [];
                                              var result20 = parse_WS();
                                              while (result20 !== null) {
                                                result12.push(result20);
                                                var result20 = parse_WS();
                                              }
                                              if (result12 !== null) {
                                                if (input.substr(pos, 1) === "(") {
                                                  var result13 = "(";
                                                  pos += 1;
                                                } else {
                                                  var result13 = null;
                                                  if (reportMatchFailures) {
                                                    matchFailed("\"(\"");
                                                  }
                                                }
                                                if (result13 !== null) {
                                                  var result14 = [];
                                                  var result19 = parse_WS();
                                                  while (result19 !== null) {
                                                    result14.push(result19);
                                                    var result19 = parse_WS();
                                                  }
                                                  if (result14 !== null) {
                                                    var result15 = parse_ConditionalOrExpression();
                                                    if (result15 !== null) {
                                                      var result16 = [];
                                                      var result18 = parse_WS();
                                                      while (result18 !== null) {
                                                        result16.push(result18);
                                                        var result18 = parse_WS();
                                                      }
                                                      if (result16 !== null) {
                                                        if (input.substr(pos, 1) === ")") {
                                                          var result17 = ")";
                                                          pos += 1;
                                                        } else {
                                                          var result17 = null;
                                                          if (reportMatchFailures) {
                                                            matchFailed("\")\"");
                                                          }
                                                        }
                                                        if (result17 !== null) {
                                                          var result5 = [result7, result8, result9, result10, result11, result12, result13, result14, result15, result16, result17];
                                                        } else {
                                                          var result5 = null;
                                                          pos = savedPos1;
                                                        }
                                                      } else {
                                                        var result5 = null;
                                                        pos = savedPos1;
                                                      }
                                                    } else {
                                                      var result5 = null;
                                                      pos = savedPos1;
                                                    }
                                                  } else {
                                                    var result5 = null;
                                                    pos = savedPos1;
                                                  }
                                                } else {
                                                  var result5 = null;
                                                  pos = savedPos1;
                                                }
                                              } else {
                                                var result5 = null;
                                                pos = savedPos1;
                                              }
                                            } else {
                                              var result5 = null;
                                              pos = savedPos1;
                                            }
                                          } else {
                                            var result5 = null;
                                            pos = savedPos1;
                                          }
                                        } else {
                                          var result5 = null;
                                          pos = savedPos1;
                                        }
                                      } else {
                                        var result5 = null;
                                        pos = savedPos1;
                                      }
                                    } else {
                                      var result5 = null;
                                      pos = savedPos1;
                                    }
                                    var result6 = result5 !== null
                                      ? (function(arg) {
                                          var ex = {};
                                          ex.token = 'expression';
                                          ex.expressionType = 'builtincall';
                                          ex.builtincall = 'isuri';
                                          ex.args = [arg];
                                      
                                          return ex;
                                      })(result5[8])
                                      : null;
                                    if (result6 !== null) {
                                      var result4 = result6;
                                    } else {
                                      var result4 = null;
                                      pos = savedPos0;
                                    }
                                    if (result4 !== null) {
                                      var result0 = result4;
                                    } else {
                                      var result3 = parse_RegexExpression();
                                      if (result3 !== null) {
                                        var result0 = result3;
                                      } else {
                                        var result2 = parse_ExistsFunc();
                                        if (result2 !== null) {
                                          var result0 = result2;
                                        } else {
                                          var result1 = parse_NotExistsFunc();
                                          if (result1 !== null) {
                                            var result0 = result1;
                                          } else {
                                            var result0 = null;;
                                          };
                                        };
                                      };
                                    };
                                  };
                                };
                              };
                            };
                          };
                        };
                      };
                    };
                  };
                };
              };
            };
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[106] BuiltInCall");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_RegexExpression() {
        var cacheKey = 'RegexExpression@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "R") {
          var result40 = "R";
          pos += 1;
        } else {
          var result40 = null;
          if (reportMatchFailures) {
            matchFailed("\"R\"");
          }
        }
        if (result40 !== null) {
          var result3 = result40;
        } else {
          if (input.substr(pos, 1) === "r") {
            var result39 = "r";
            pos += 1;
          } else {
            var result39 = null;
            if (reportMatchFailures) {
              matchFailed("\"r\"");
            }
          }
          if (result39 !== null) {
            var result3 = result39;
          } else {
            var result3 = null;;
          };
        }
        if (result3 !== null) {
          if (input.substr(pos, 1) === "E") {
            var result38 = "E";
            pos += 1;
          } else {
            var result38 = null;
            if (reportMatchFailures) {
              matchFailed("\"E\"");
            }
          }
          if (result38 !== null) {
            var result4 = result38;
          } else {
            if (input.substr(pos, 1) === "e") {
              var result37 = "e";
              pos += 1;
            } else {
              var result37 = null;
              if (reportMatchFailures) {
                matchFailed("\"e\"");
              }
            }
            if (result37 !== null) {
              var result4 = result37;
            } else {
              var result4 = null;;
            };
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === "G") {
              var result36 = "G";
              pos += 1;
            } else {
              var result36 = null;
              if (reportMatchFailures) {
                matchFailed("\"G\"");
              }
            }
            if (result36 !== null) {
              var result5 = result36;
            } else {
              if (input.substr(pos, 1) === "g") {
                var result35 = "g";
                pos += 1;
              } else {
                var result35 = null;
                if (reportMatchFailures) {
                  matchFailed("\"g\"");
                }
              }
              if (result35 !== null) {
                var result5 = result35;
              } else {
                var result5 = null;;
              };
            }
            if (result5 !== null) {
              if (input.substr(pos, 1) === "E") {
                var result34 = "E";
                pos += 1;
              } else {
                var result34 = null;
                if (reportMatchFailures) {
                  matchFailed("\"E\"");
                }
              }
              if (result34 !== null) {
                var result6 = result34;
              } else {
                if (input.substr(pos, 1) === "e") {
                  var result33 = "e";
                  pos += 1;
                } else {
                  var result33 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"e\"");
                  }
                }
                if (result33 !== null) {
                  var result6 = result33;
                } else {
                  var result6 = null;;
                };
              }
              if (result6 !== null) {
                if (input.substr(pos, 1) === "X") {
                  var result32 = "X";
                  pos += 1;
                } else {
                  var result32 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"X\"");
                  }
                }
                if (result32 !== null) {
                  var result7 = result32;
                } else {
                  if (input.substr(pos, 1) === "x") {
                    var result31 = "x";
                    pos += 1;
                  } else {
                    var result31 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"x\"");
                    }
                  }
                  if (result31 !== null) {
                    var result7 = result31;
                  } else {
                    var result7 = null;;
                  };
                }
                if (result7 !== null) {
                  var result8 = [];
                  var result30 = parse_WS();
                  while (result30 !== null) {
                    result8.push(result30);
                    var result30 = parse_WS();
                  }
                  if (result8 !== null) {
                    if (input.substr(pos, 1) === "(") {
                      var result9 = "(";
                      pos += 1;
                    } else {
                      var result9 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"(\"");
                      }
                    }
                    if (result9 !== null) {
                      var result10 = [];
                      var result29 = parse_WS();
                      while (result29 !== null) {
                        result10.push(result29);
                        var result29 = parse_WS();
                      }
                      if (result10 !== null) {
                        var result11 = parse_ConditionalOrExpression();
                        if (result11 !== null) {
                          var result12 = [];
                          var result28 = parse_WS();
                          while (result28 !== null) {
                            result12.push(result28);
                            var result28 = parse_WS();
                          }
                          if (result12 !== null) {
                            if (input.substr(pos, 1) === ",") {
                              var result13 = ",";
                              pos += 1;
                            } else {
                              var result13 = null;
                              if (reportMatchFailures) {
                                matchFailed("\",\"");
                              }
                            }
                            if (result13 !== null) {
                              var result14 = [];
                              var result27 = parse_WS();
                              while (result27 !== null) {
                                result14.push(result27);
                                var result27 = parse_WS();
                              }
                              if (result14 !== null) {
                                var result15 = parse_ConditionalOrExpression();
                                if (result15 !== null) {
                                  var result16 = [];
                                  var result26 = parse_WS();
                                  while (result26 !== null) {
                                    result16.push(result26);
                                    var result26 = parse_WS();
                                  }
                                  if (result16 !== null) {
                                    var savedPos2 = pos;
                                    if (input.substr(pos, 1) === ",") {
                                      var result22 = ",";
                                      pos += 1;
                                    } else {
                                      var result22 = null;
                                      if (reportMatchFailures) {
                                        matchFailed("\",\"");
                                      }
                                    }
                                    if (result22 !== null) {
                                      var result23 = [];
                                      var result25 = parse_WS();
                                      while (result25 !== null) {
                                        result23.push(result25);
                                        var result25 = parse_WS();
                                      }
                                      if (result23 !== null) {
                                        var result24 = parse_ConditionalOrExpression();
                                        if (result24 !== null) {
                                          var result21 = [result22, result23, result24];
                                        } else {
                                          var result21 = null;
                                          pos = savedPos2;
                                        }
                                      } else {
                                        var result21 = null;
                                        pos = savedPos2;
                                      }
                                    } else {
                                      var result21 = null;
                                      pos = savedPos2;
                                    }
                                    var result17 = result21 !== null ? result21 : '';
                                    if (result17 !== null) {
                                      var result18 = [];
                                      var result20 = parse_WS();
                                      while (result20 !== null) {
                                        result18.push(result20);
                                        var result20 = parse_WS();
                                      }
                                      if (result18 !== null) {
                                        if (input.substr(pos, 1) === ")") {
                                          var result19 = ")";
                                          pos += 1;
                                        } else {
                                          var result19 = null;
                                          if (reportMatchFailures) {
                                            matchFailed("\")\"");
                                          }
                                        }
                                        if (result19 !== null) {
                                          var result1 = [result3, result4, result5, result6, result7, result8, result9, result10, result11, result12, result13, result14, result15, result16, result17, result18, result19];
                                        } else {
                                          var result1 = null;
                                          pos = savedPos1;
                                        }
                                      } else {
                                        var result1 = null;
                                        pos = savedPos1;
                                      }
                                    } else {
                                      var result1 = null;
                                      pos = savedPos1;
                                    }
                                  } else {
                                    var result1 = null;
                                    pos = savedPos1;
                                  }
                                } else {
                                  var result1 = null;
                                  pos = savedPos1;
                                }
                              } else {
                                var result1 = null;
                                pos = savedPos1;
                              }
                            } else {
                              var result1 = null;
                              pos = savedPos1;
                            }
                          } else {
                            var result1 = null;
                            pos = savedPos1;
                          }
                        } else {
                          var result1 = null;
                          pos = savedPos1;
                        }
                      } else {
                        var result1 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(e1, e2, eo) {
                var regex = {};
                regex.token = 'expression';
                regex.expressionType = 'regex';
                regex.text = e1;
                regex.pattern = e2;
                regex.flags = eo[2];
          
                return regex;
          })(result1[8], result1[12], result1[14])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[107] RegexExpression");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_ExistsFunc() {
        var cacheKey = 'ExistsFunc@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "E") {
          var result23 = "E";
          pos += 1;
        } else {
          var result23 = null;
          if (reportMatchFailures) {
            matchFailed("\"E\"");
          }
        }
        if (result23 !== null) {
          var result3 = result23;
        } else {
          if (input.substr(pos, 1) === "e") {
            var result22 = "e";
            pos += 1;
          } else {
            var result22 = null;
            if (reportMatchFailures) {
              matchFailed("\"e\"");
            }
          }
          if (result22 !== null) {
            var result3 = result22;
          } else {
            var result3 = null;;
          };
        }
        if (result3 !== null) {
          if (input.substr(pos, 1) === "X") {
            var result21 = "X";
            pos += 1;
          } else {
            var result21 = null;
            if (reportMatchFailures) {
              matchFailed("\"X\"");
            }
          }
          if (result21 !== null) {
            var result4 = result21;
          } else {
            if (input.substr(pos, 1) === "x") {
              var result20 = "x";
              pos += 1;
            } else {
              var result20 = null;
              if (reportMatchFailures) {
                matchFailed("\"x\"");
              }
            }
            if (result20 !== null) {
              var result4 = result20;
            } else {
              var result4 = null;;
            };
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === "I") {
              var result19 = "I";
              pos += 1;
            } else {
              var result19 = null;
              if (reportMatchFailures) {
                matchFailed("\"I\"");
              }
            }
            if (result19 !== null) {
              var result5 = result19;
            } else {
              if (input.substr(pos, 1) === "i") {
                var result18 = "i";
                pos += 1;
              } else {
                var result18 = null;
                if (reportMatchFailures) {
                  matchFailed("\"i\"");
                }
              }
              if (result18 !== null) {
                var result5 = result18;
              } else {
                var result5 = null;;
              };
            }
            if (result5 !== null) {
              if (input.substr(pos, 1) === "S") {
                var result17 = "S";
                pos += 1;
              } else {
                var result17 = null;
                if (reportMatchFailures) {
                  matchFailed("\"S\"");
                }
              }
              if (result17 !== null) {
                var result6 = result17;
              } else {
                if (input.substr(pos, 1) === "s") {
                  var result16 = "s";
                  pos += 1;
                } else {
                  var result16 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"s\"");
                  }
                }
                if (result16 !== null) {
                  var result6 = result16;
                } else {
                  var result6 = null;;
                };
              }
              if (result6 !== null) {
                if (input.substr(pos, 1) === "T") {
                  var result15 = "T";
                  pos += 1;
                } else {
                  var result15 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"T\"");
                  }
                }
                if (result15 !== null) {
                  var result7 = result15;
                } else {
                  if (input.substr(pos, 1) === "t") {
                    var result14 = "t";
                    pos += 1;
                  } else {
                    var result14 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"t\"");
                    }
                  }
                  if (result14 !== null) {
                    var result7 = result14;
                  } else {
                    var result7 = null;;
                  };
                }
                if (result7 !== null) {
                  if (input.substr(pos, 1) === "S") {
                    var result13 = "S";
                    pos += 1;
                  } else {
                    var result13 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"S\"");
                    }
                  }
                  if (result13 !== null) {
                    var result8 = result13;
                  } else {
                    if (input.substr(pos, 1) === "s") {
                      var result12 = "s";
                      pos += 1;
                    } else {
                      var result12 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"s\"");
                      }
                    }
                    if (result12 !== null) {
                      var result8 = result12;
                    } else {
                      var result8 = null;;
                    };
                  }
                  if (result8 !== null) {
                    var result9 = [];
                    var result11 = parse_WS();
                    while (result11 !== null) {
                      result9.push(result11);
                      var result11 = parse_WS();
                    }
                    if (result9 !== null) {
                      var result10 = parse_GroupGraphPattern();
                      if (result10 !== null) {
                        var result1 = [result3, result4, result5, result6, result7, result8, result9, result10];
                      } else {
                        var result1 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(ggp) {
              var ex = {};
              ex.token = 'expression';
              ex.expressionType = 'builtincall';
              ex.builtincall = 'exists';
              ex.args = [ggp];
          
              return ex;
          })(result1[7])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[108] ExistsFunc");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_NotExistsFunc() {
        var cacheKey = 'NotExistsFunc@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "N") {
          var result34 = "N";
          pos += 1;
        } else {
          var result34 = null;
          if (reportMatchFailures) {
            matchFailed("\"N\"");
          }
        }
        if (result34 !== null) {
          var result3 = result34;
        } else {
          if (input.substr(pos, 1) === "n") {
            var result33 = "n";
            pos += 1;
          } else {
            var result33 = null;
            if (reportMatchFailures) {
              matchFailed("\"n\"");
            }
          }
          if (result33 !== null) {
            var result3 = result33;
          } else {
            var result3 = null;;
          };
        }
        if (result3 !== null) {
          if (input.substr(pos, 1) === "O") {
            var result32 = "O";
            pos += 1;
          } else {
            var result32 = null;
            if (reportMatchFailures) {
              matchFailed("\"O\"");
            }
          }
          if (result32 !== null) {
            var result4 = result32;
          } else {
            if (input.substr(pos, 1) === "o") {
              var result31 = "o";
              pos += 1;
            } else {
              var result31 = null;
              if (reportMatchFailures) {
                matchFailed("\"o\"");
              }
            }
            if (result31 !== null) {
              var result4 = result31;
            } else {
              var result4 = null;;
            };
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === "T") {
              var result30 = "T";
              pos += 1;
            } else {
              var result30 = null;
              if (reportMatchFailures) {
                matchFailed("\"T\"");
              }
            }
            if (result30 !== null) {
              var result5 = result30;
            } else {
              if (input.substr(pos, 1) === "t") {
                var result29 = "t";
                pos += 1;
              } else {
                var result29 = null;
                if (reportMatchFailures) {
                  matchFailed("\"t\"");
                }
              }
              if (result29 !== null) {
                var result5 = result29;
              } else {
                var result5 = null;;
              };
            }
            if (result5 !== null) {
              var result6 = [];
              var result28 = parse_WS();
              while (result28 !== null) {
                result6.push(result28);
                var result28 = parse_WS();
              }
              if (result6 !== null) {
                if (input.substr(pos, 1) === "E") {
                  var result27 = "E";
                  pos += 1;
                } else {
                  var result27 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"E\"");
                  }
                }
                if (result27 !== null) {
                  var result7 = result27;
                } else {
                  if (input.substr(pos, 1) === "e") {
                    var result26 = "e";
                    pos += 1;
                  } else {
                    var result26 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"e\"");
                    }
                  }
                  if (result26 !== null) {
                    var result7 = result26;
                  } else {
                    var result7 = null;;
                  };
                }
                if (result7 !== null) {
                  if (input.substr(pos, 1) === "X") {
                    var result25 = "X";
                    pos += 1;
                  } else {
                    var result25 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"X\"");
                    }
                  }
                  if (result25 !== null) {
                    var result8 = result25;
                  } else {
                    if (input.substr(pos, 1) === "x") {
                      var result24 = "x";
                      pos += 1;
                    } else {
                      var result24 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"x\"");
                      }
                    }
                    if (result24 !== null) {
                      var result8 = result24;
                    } else {
                      var result8 = null;;
                    };
                  }
                  if (result8 !== null) {
                    if (input.substr(pos, 1) === "I") {
                      var result23 = "I";
                      pos += 1;
                    } else {
                      var result23 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"I\"");
                      }
                    }
                    if (result23 !== null) {
                      var result9 = result23;
                    } else {
                      if (input.substr(pos, 1) === "i") {
                        var result22 = "i";
                        pos += 1;
                      } else {
                        var result22 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"i\"");
                        }
                      }
                      if (result22 !== null) {
                        var result9 = result22;
                      } else {
                        var result9 = null;;
                      };
                    }
                    if (result9 !== null) {
                      if (input.substr(pos, 1) === "S") {
                        var result21 = "S";
                        pos += 1;
                      } else {
                        var result21 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"S\"");
                        }
                      }
                      if (result21 !== null) {
                        var result10 = result21;
                      } else {
                        if (input.substr(pos, 1) === "s") {
                          var result20 = "s";
                          pos += 1;
                        } else {
                          var result20 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"s\"");
                          }
                        }
                        if (result20 !== null) {
                          var result10 = result20;
                        } else {
                          var result10 = null;;
                        };
                      }
                      if (result10 !== null) {
                        if (input.substr(pos, 1) === "T") {
                          var result19 = "T";
                          pos += 1;
                        } else {
                          var result19 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"T\"");
                          }
                        }
                        if (result19 !== null) {
                          var result11 = result19;
                        } else {
                          if (input.substr(pos, 1) === "t") {
                            var result18 = "t";
                            pos += 1;
                          } else {
                            var result18 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"t\"");
                            }
                          }
                          if (result18 !== null) {
                            var result11 = result18;
                          } else {
                            var result11 = null;;
                          };
                        }
                        if (result11 !== null) {
                          if (input.substr(pos, 1) === "S") {
                            var result17 = "S";
                            pos += 1;
                          } else {
                            var result17 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"S\"");
                            }
                          }
                          if (result17 !== null) {
                            var result12 = result17;
                          } else {
                            if (input.substr(pos, 1) === "s") {
                              var result16 = "s";
                              pos += 1;
                            } else {
                              var result16 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"s\"");
                              }
                            }
                            if (result16 !== null) {
                              var result12 = result16;
                            } else {
                              var result12 = null;;
                            };
                          }
                          if (result12 !== null) {
                            var result13 = [];
                            var result15 = parse_WS();
                            while (result15 !== null) {
                              result13.push(result15);
                              var result15 = parse_WS();
                            }
                            if (result13 !== null) {
                              var result14 = parse_GroupGraphPattern();
                              if (result14 !== null) {
                                var result1 = [result3, result4, result5, result6, result7, result8, result9, result10, result11, result12, result13, result14];
                              } else {
                                var result1 = null;
                                pos = savedPos1;
                              }
                            } else {
                              var result1 = null;
                              pos = savedPos1;
                            }
                          } else {
                            var result1 = null;
                            pos = savedPos1;
                          }
                        } else {
                          var result1 = null;
                          pos = savedPos1;
                        }
                      } else {
                        var result1 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(ggp) {
              var ex = {};
              ex.token = 'expression';
              ex.expressionType = 'builtincall';
              ex.builtincall = 'notexists';
              ex.args = [ggp];
          
              return ex;
          })(result1[11])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[109] NotExistsFunc");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_Aggregate() {
        var cacheKey = 'Aggregate@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos12 = pos;
        var savedPos13 = pos;
        if (input.substr(pos, 1) === "C") {
          var result263 = "C";
          pos += 1;
        } else {
          var result263 = null;
          if (reportMatchFailures) {
            matchFailed("\"C\"");
          }
        }
        if (result263 !== null) {
          var result208 = result263;
        } else {
          if (input.substr(pos, 1) === "c") {
            var result262 = "c";
            pos += 1;
          } else {
            var result262 = null;
            if (reportMatchFailures) {
              matchFailed("\"c\"");
            }
          }
          if (result262 !== null) {
            var result208 = result262;
          } else {
            var result208 = null;;
          };
        }
        if (result208 !== null) {
          if (input.substr(pos, 1) === "O") {
            var result261 = "O";
            pos += 1;
          } else {
            var result261 = null;
            if (reportMatchFailures) {
              matchFailed("\"O\"");
            }
          }
          if (result261 !== null) {
            var result209 = result261;
          } else {
            if (input.substr(pos, 1) === "o") {
              var result260 = "o";
              pos += 1;
            } else {
              var result260 = null;
              if (reportMatchFailures) {
                matchFailed("\"o\"");
              }
            }
            if (result260 !== null) {
              var result209 = result260;
            } else {
              var result209 = null;;
            };
          }
          if (result209 !== null) {
            if (input.substr(pos, 1) === "U") {
              var result259 = "U";
              pos += 1;
            } else {
              var result259 = null;
              if (reportMatchFailures) {
                matchFailed("\"U\"");
              }
            }
            if (result259 !== null) {
              var result210 = result259;
            } else {
              if (input.substr(pos, 1) === "u") {
                var result258 = "u";
                pos += 1;
              } else {
                var result258 = null;
                if (reportMatchFailures) {
                  matchFailed("\"u\"");
                }
              }
              if (result258 !== null) {
                var result210 = result258;
              } else {
                var result210 = null;;
              };
            }
            if (result210 !== null) {
              if (input.substr(pos, 1) === "N") {
                var result257 = "N";
                pos += 1;
              } else {
                var result257 = null;
                if (reportMatchFailures) {
                  matchFailed("\"N\"");
                }
              }
              if (result257 !== null) {
                var result211 = result257;
              } else {
                if (input.substr(pos, 1) === "n") {
                  var result256 = "n";
                  pos += 1;
                } else {
                  var result256 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"n\"");
                  }
                }
                if (result256 !== null) {
                  var result211 = result256;
                } else {
                  var result211 = null;;
                };
              }
              if (result211 !== null) {
                if (input.substr(pos, 1) === "T") {
                  var result255 = "T";
                  pos += 1;
                } else {
                  var result255 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"T\"");
                  }
                }
                if (result255 !== null) {
                  var result212 = result255;
                } else {
                  if (input.substr(pos, 1) === "t") {
                    var result254 = "t";
                    pos += 1;
                  } else {
                    var result254 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"t\"");
                    }
                  }
                  if (result254 !== null) {
                    var result212 = result254;
                  } else {
                    var result212 = null;;
                  };
                }
                if (result212 !== null) {
                  var result213 = [];
                  var result253 = parse_WS();
                  while (result253 !== null) {
                    result213.push(result253);
                    var result253 = parse_WS();
                  }
                  if (result213 !== null) {
                    if (input.substr(pos, 1) === "(") {
                      var result214 = "(";
                      pos += 1;
                    } else {
                      var result214 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"(\"");
                      }
                    }
                    if (result214 !== null) {
                      var result215 = [];
                      var result252 = parse_WS();
                      while (result252 !== null) {
                        result215.push(result252);
                        var result252 = parse_WS();
                      }
                      if (result215 !== null) {
                        var savedPos14 = pos;
                        if (input.substr(pos, 1) === "D") {
                          var result251 = "D";
                          pos += 1;
                        } else {
                          var result251 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"D\"");
                          }
                        }
                        if (result251 !== null) {
                          var result228 = result251;
                        } else {
                          if (input.substr(pos, 1) === "d") {
                            var result250 = "d";
                            pos += 1;
                          } else {
                            var result250 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"d\"");
                            }
                          }
                          if (result250 !== null) {
                            var result228 = result250;
                          } else {
                            var result228 = null;;
                          };
                        }
                        if (result228 !== null) {
                          if (input.substr(pos, 1) === "I") {
                            var result249 = "I";
                            pos += 1;
                          } else {
                            var result249 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"I\"");
                            }
                          }
                          if (result249 !== null) {
                            var result229 = result249;
                          } else {
                            if (input.substr(pos, 1) === "i") {
                              var result248 = "i";
                              pos += 1;
                            } else {
                              var result248 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"i\"");
                              }
                            }
                            if (result248 !== null) {
                              var result229 = result248;
                            } else {
                              var result229 = null;;
                            };
                          }
                          if (result229 !== null) {
                            if (input.substr(pos, 1) === "S") {
                              var result247 = "S";
                              pos += 1;
                            } else {
                              var result247 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"S\"");
                              }
                            }
                            if (result247 !== null) {
                              var result230 = result247;
                            } else {
                              if (input.substr(pos, 1) === "s") {
                                var result246 = "s";
                                pos += 1;
                              } else {
                                var result246 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\"s\"");
                                }
                              }
                              if (result246 !== null) {
                                var result230 = result246;
                              } else {
                                var result230 = null;;
                              };
                            }
                            if (result230 !== null) {
                              if (input.substr(pos, 1) === "T") {
                                var result245 = "T";
                                pos += 1;
                              } else {
                                var result245 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\"T\"");
                                }
                              }
                              if (result245 !== null) {
                                var result231 = result245;
                              } else {
                                if (input.substr(pos, 1) === "t") {
                                  var result244 = "t";
                                  pos += 1;
                                } else {
                                  var result244 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\"t\"");
                                  }
                                }
                                if (result244 !== null) {
                                  var result231 = result244;
                                } else {
                                  var result231 = null;;
                                };
                              }
                              if (result231 !== null) {
                                if (input.substr(pos, 1) === "I") {
                                  var result243 = "I";
                                  pos += 1;
                                } else {
                                  var result243 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\"I\"");
                                  }
                                }
                                if (result243 !== null) {
                                  var result232 = result243;
                                } else {
                                  if (input.substr(pos, 1) === "i") {
                                    var result242 = "i";
                                    pos += 1;
                                  } else {
                                    var result242 = null;
                                    if (reportMatchFailures) {
                                      matchFailed("\"i\"");
                                    }
                                  }
                                  if (result242 !== null) {
                                    var result232 = result242;
                                  } else {
                                    var result232 = null;;
                                  };
                                }
                                if (result232 !== null) {
                                  if (input.substr(pos, 1) === "N") {
                                    var result241 = "N";
                                    pos += 1;
                                  } else {
                                    var result241 = null;
                                    if (reportMatchFailures) {
                                      matchFailed("\"N\"");
                                    }
                                  }
                                  if (result241 !== null) {
                                    var result233 = result241;
                                  } else {
                                    if (input.substr(pos, 1) === "n") {
                                      var result240 = "n";
                                      pos += 1;
                                    } else {
                                      var result240 = null;
                                      if (reportMatchFailures) {
                                        matchFailed("\"n\"");
                                      }
                                    }
                                    if (result240 !== null) {
                                      var result233 = result240;
                                    } else {
                                      var result233 = null;;
                                    };
                                  }
                                  if (result233 !== null) {
                                    if (input.substr(pos, 1) === "C") {
                                      var result239 = "C";
                                      pos += 1;
                                    } else {
                                      var result239 = null;
                                      if (reportMatchFailures) {
                                        matchFailed("\"C\"");
                                      }
                                    }
                                    if (result239 !== null) {
                                      var result234 = result239;
                                    } else {
                                      if (input.substr(pos, 1) === "c") {
                                        var result238 = "c";
                                        pos += 1;
                                      } else {
                                        var result238 = null;
                                        if (reportMatchFailures) {
                                          matchFailed("\"c\"");
                                        }
                                      }
                                      if (result238 !== null) {
                                        var result234 = result238;
                                      } else {
                                        var result234 = null;;
                                      };
                                    }
                                    if (result234 !== null) {
                                      if (input.substr(pos, 1) === "T") {
                                        var result237 = "T";
                                        pos += 1;
                                      } else {
                                        var result237 = null;
                                        if (reportMatchFailures) {
                                          matchFailed("\"T\"");
                                        }
                                      }
                                      if (result237 !== null) {
                                        var result235 = result237;
                                      } else {
                                        if (input.substr(pos, 1) === "t") {
                                          var result236 = "t";
                                          pos += 1;
                                        } else {
                                          var result236 = null;
                                          if (reportMatchFailures) {
                                            matchFailed("\"t\"");
                                          }
                                        }
                                        if (result236 !== null) {
                                          var result235 = result236;
                                        } else {
                                          var result235 = null;;
                                        };
                                      }
                                      if (result235 !== null) {
                                        var result227 = [result228, result229, result230, result231, result232, result233, result234, result235];
                                      } else {
                                        var result227 = null;
                                        pos = savedPos14;
                                      }
                                    } else {
                                      var result227 = null;
                                      pos = savedPos14;
                                    }
                                  } else {
                                    var result227 = null;
                                    pos = savedPos14;
                                  }
                                } else {
                                  var result227 = null;
                                  pos = savedPos14;
                                }
                              } else {
                                var result227 = null;
                                pos = savedPos14;
                              }
                            } else {
                              var result227 = null;
                              pos = savedPos14;
                            }
                          } else {
                            var result227 = null;
                            pos = savedPos14;
                          }
                        } else {
                          var result227 = null;
                          pos = savedPos14;
                        }
                        var result216 = result227 !== null ? result227 : '';
                        if (result216 !== null) {
                          var result217 = [];
                          var result226 = parse_WS();
                          while (result226 !== null) {
                            result217.push(result226);
                            var result226 = parse_WS();
                          }
                          if (result217 !== null) {
                            if (input.substr(pos, 1) === "*") {
                              var result225 = "*";
                              pos += 1;
                            } else {
                              var result225 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"*\"");
                              }
                            }
                            if (result225 !== null) {
                              var result218 = result225;
                            } else {
                              var result224 = parse_ConditionalOrExpression();
                              if (result224 !== null) {
                                var result218 = result224;
                              } else {
                                var result218 = null;;
                              };
                            }
                            if (result218 !== null) {
                              var result219 = [];
                              var result223 = parse_WS();
                              while (result223 !== null) {
                                result219.push(result223);
                                var result223 = parse_WS();
                              }
                              if (result219 !== null) {
                                if (input.substr(pos, 1) === ")") {
                                  var result220 = ")";
                                  pos += 1;
                                } else {
                                  var result220 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\")\"");
                                  }
                                }
                                if (result220 !== null) {
                                  var result221 = [];
                                  var result222 = parse_WS();
                                  while (result222 !== null) {
                                    result221.push(result222);
                                    var result222 = parse_WS();
                                  }
                                  if (result221 !== null) {
                                    var result206 = [result208, result209, result210, result211, result212, result213, result214, result215, result216, result217, result218, result219, result220, result221];
                                  } else {
                                    var result206 = null;
                                    pos = savedPos13;
                                  }
                                } else {
                                  var result206 = null;
                                  pos = savedPos13;
                                }
                              } else {
                                var result206 = null;
                                pos = savedPos13;
                              }
                            } else {
                              var result206 = null;
                              pos = savedPos13;
                            }
                          } else {
                            var result206 = null;
                            pos = savedPos13;
                          }
                        } else {
                          var result206 = null;
                          pos = savedPos13;
                        }
                      } else {
                        var result206 = null;
                        pos = savedPos13;
                      }
                    } else {
                      var result206 = null;
                      pos = savedPos13;
                    }
                  } else {
                    var result206 = null;
                    pos = savedPos13;
                  }
                } else {
                  var result206 = null;
                  pos = savedPos13;
                }
              } else {
                var result206 = null;
                pos = savedPos13;
              }
            } else {
              var result206 = null;
              pos = savedPos13;
            }
          } else {
            var result206 = null;
            pos = savedPos13;
          }
        } else {
          var result206 = null;
          pos = savedPos13;
        }
        var result207 = result206 !== null
          ? (function(d, e) {
                exp = {};
                exp.token = 'expression';
                exp.expressionType = 'aggregate';
                exp.aggregateType = 'count';
                exp.distinct = (d != "" ? 'DISTINCT' : d);
                exp.expression = e;
          
                return exp;
          
            })(result206[8], result206[10])
          : null;
        if (result207 !== null) {
          var result205 = result207;
        } else {
          var result205 = null;
          pos = savedPos12;
        }
        if (result205 !== null) {
          var result0 = result205;
        } else {
          var savedPos9 = pos;
          var savedPos10 = pos;
          if (input.substr(pos, 1) === "S") {
            var result204 = "S";
            pos += 1;
          } else {
            var result204 = null;
            if (reportMatchFailures) {
              matchFailed("\"S\"");
            }
          }
          if (result204 !== null) {
            var result157 = result204;
          } else {
            if (input.substr(pos, 1) === "s") {
              var result203 = "s";
              pos += 1;
            } else {
              var result203 = null;
              if (reportMatchFailures) {
                matchFailed("\"s\"");
              }
            }
            if (result203 !== null) {
              var result157 = result203;
            } else {
              var result157 = null;;
            };
          }
          if (result157 !== null) {
            if (input.substr(pos, 1) === "U") {
              var result202 = "U";
              pos += 1;
            } else {
              var result202 = null;
              if (reportMatchFailures) {
                matchFailed("\"U\"");
              }
            }
            if (result202 !== null) {
              var result158 = result202;
            } else {
              if (input.substr(pos, 1) === "u") {
                var result201 = "u";
                pos += 1;
              } else {
                var result201 = null;
                if (reportMatchFailures) {
                  matchFailed("\"u\"");
                }
              }
              if (result201 !== null) {
                var result158 = result201;
              } else {
                var result158 = null;;
              };
            }
            if (result158 !== null) {
              if (input.substr(pos, 1) === "M") {
                var result200 = "M";
                pos += 1;
              } else {
                var result200 = null;
                if (reportMatchFailures) {
                  matchFailed("\"M\"");
                }
              }
              if (result200 !== null) {
                var result159 = result200;
              } else {
                if (input.substr(pos, 1) === "m") {
                  var result199 = "m";
                  pos += 1;
                } else {
                  var result199 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"m\"");
                  }
                }
                if (result199 !== null) {
                  var result159 = result199;
                } else {
                  var result159 = null;;
                };
              }
              if (result159 !== null) {
                var result160 = [];
                var result198 = parse_WS();
                while (result198 !== null) {
                  result160.push(result198);
                  var result198 = parse_WS();
                }
                if (result160 !== null) {
                  if (input.substr(pos, 1) === "(") {
                    var result161 = "(";
                    pos += 1;
                  } else {
                    var result161 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"(\"");
                    }
                  }
                  if (result161 !== null) {
                    var result162 = [];
                    var result197 = parse_WS();
                    while (result197 !== null) {
                      result162.push(result197);
                      var result197 = parse_WS();
                    }
                    if (result162 !== null) {
                      var savedPos11 = pos;
                      if (input.substr(pos, 1) === "D") {
                        var result196 = "D";
                        pos += 1;
                      } else {
                        var result196 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"D\"");
                        }
                      }
                      if (result196 !== null) {
                        var result173 = result196;
                      } else {
                        if (input.substr(pos, 1) === "d") {
                          var result195 = "d";
                          pos += 1;
                        } else {
                          var result195 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"d\"");
                          }
                        }
                        if (result195 !== null) {
                          var result173 = result195;
                        } else {
                          var result173 = null;;
                        };
                      }
                      if (result173 !== null) {
                        if (input.substr(pos, 1) === "I") {
                          var result194 = "I";
                          pos += 1;
                        } else {
                          var result194 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"I\"");
                          }
                        }
                        if (result194 !== null) {
                          var result174 = result194;
                        } else {
                          if (input.substr(pos, 1) === "i") {
                            var result193 = "i";
                            pos += 1;
                          } else {
                            var result193 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"i\"");
                            }
                          }
                          if (result193 !== null) {
                            var result174 = result193;
                          } else {
                            var result174 = null;;
                          };
                        }
                        if (result174 !== null) {
                          if (input.substr(pos, 1) === "S") {
                            var result192 = "S";
                            pos += 1;
                          } else {
                            var result192 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"S\"");
                            }
                          }
                          if (result192 !== null) {
                            var result175 = result192;
                          } else {
                            if (input.substr(pos, 1) === "s") {
                              var result191 = "s";
                              pos += 1;
                            } else {
                              var result191 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"s\"");
                              }
                            }
                            if (result191 !== null) {
                              var result175 = result191;
                            } else {
                              var result175 = null;;
                            };
                          }
                          if (result175 !== null) {
                            if (input.substr(pos, 1) === "T") {
                              var result190 = "T";
                              pos += 1;
                            } else {
                              var result190 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"T\"");
                              }
                            }
                            if (result190 !== null) {
                              var result176 = result190;
                            } else {
                              if (input.substr(pos, 1) === "t") {
                                var result189 = "t";
                                pos += 1;
                              } else {
                                var result189 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\"t\"");
                                }
                              }
                              if (result189 !== null) {
                                var result176 = result189;
                              } else {
                                var result176 = null;;
                              };
                            }
                            if (result176 !== null) {
                              if (input.substr(pos, 1) === "I") {
                                var result188 = "I";
                                pos += 1;
                              } else {
                                var result188 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\"I\"");
                                }
                              }
                              if (result188 !== null) {
                                var result177 = result188;
                              } else {
                                if (input.substr(pos, 1) === "i") {
                                  var result187 = "i";
                                  pos += 1;
                                } else {
                                  var result187 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\"i\"");
                                  }
                                }
                                if (result187 !== null) {
                                  var result177 = result187;
                                } else {
                                  var result177 = null;;
                                };
                              }
                              if (result177 !== null) {
                                if (input.substr(pos, 1) === "N") {
                                  var result186 = "N";
                                  pos += 1;
                                } else {
                                  var result186 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\"N\"");
                                  }
                                }
                                if (result186 !== null) {
                                  var result178 = result186;
                                } else {
                                  if (input.substr(pos, 1) === "n") {
                                    var result185 = "n";
                                    pos += 1;
                                  } else {
                                    var result185 = null;
                                    if (reportMatchFailures) {
                                      matchFailed("\"n\"");
                                    }
                                  }
                                  if (result185 !== null) {
                                    var result178 = result185;
                                  } else {
                                    var result178 = null;;
                                  };
                                }
                                if (result178 !== null) {
                                  if (input.substr(pos, 1) === "C") {
                                    var result184 = "C";
                                    pos += 1;
                                  } else {
                                    var result184 = null;
                                    if (reportMatchFailures) {
                                      matchFailed("\"C\"");
                                    }
                                  }
                                  if (result184 !== null) {
                                    var result179 = result184;
                                  } else {
                                    if (input.substr(pos, 1) === "c") {
                                      var result183 = "c";
                                      pos += 1;
                                    } else {
                                      var result183 = null;
                                      if (reportMatchFailures) {
                                        matchFailed("\"c\"");
                                      }
                                    }
                                    if (result183 !== null) {
                                      var result179 = result183;
                                    } else {
                                      var result179 = null;;
                                    };
                                  }
                                  if (result179 !== null) {
                                    if (input.substr(pos, 1) === "T") {
                                      var result182 = "T";
                                      pos += 1;
                                    } else {
                                      var result182 = null;
                                      if (reportMatchFailures) {
                                        matchFailed("\"T\"");
                                      }
                                    }
                                    if (result182 !== null) {
                                      var result180 = result182;
                                    } else {
                                      if (input.substr(pos, 1) === "t") {
                                        var result181 = "t";
                                        pos += 1;
                                      } else {
                                        var result181 = null;
                                        if (reportMatchFailures) {
                                          matchFailed("\"t\"");
                                        }
                                      }
                                      if (result181 !== null) {
                                        var result180 = result181;
                                      } else {
                                        var result180 = null;;
                                      };
                                    }
                                    if (result180 !== null) {
                                      var result172 = [result173, result174, result175, result176, result177, result178, result179, result180];
                                    } else {
                                      var result172 = null;
                                      pos = savedPos11;
                                    }
                                  } else {
                                    var result172 = null;
                                    pos = savedPos11;
                                  }
                                } else {
                                  var result172 = null;
                                  pos = savedPos11;
                                }
                              } else {
                                var result172 = null;
                                pos = savedPos11;
                              }
                            } else {
                              var result172 = null;
                              pos = savedPos11;
                            }
                          } else {
                            var result172 = null;
                            pos = savedPos11;
                          }
                        } else {
                          var result172 = null;
                          pos = savedPos11;
                        }
                      } else {
                        var result172 = null;
                        pos = savedPos11;
                      }
                      var result163 = result172 !== null ? result172 : '';
                      if (result163 !== null) {
                        var result164 = [];
                        var result171 = parse_WS();
                        while (result171 !== null) {
                          result164.push(result171);
                          var result171 = parse_WS();
                        }
                        if (result164 !== null) {
                          var result165 = parse_ConditionalOrExpression();
                          if (result165 !== null) {
                            var result166 = [];
                            var result170 = parse_WS();
                            while (result170 !== null) {
                              result166.push(result170);
                              var result170 = parse_WS();
                            }
                            if (result166 !== null) {
                              if (input.substr(pos, 1) === ")") {
                                var result167 = ")";
                                pos += 1;
                              } else {
                                var result167 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\")\"");
                                }
                              }
                              if (result167 !== null) {
                                var result168 = [];
                                var result169 = parse_WS();
                                while (result169 !== null) {
                                  result168.push(result169);
                                  var result169 = parse_WS();
                                }
                                if (result168 !== null) {
                                  var result155 = [result157, result158, result159, result160, result161, result162, result163, result164, result165, result166, result167, result168];
                                } else {
                                  var result155 = null;
                                  pos = savedPos10;
                                }
                              } else {
                                var result155 = null;
                                pos = savedPos10;
                              }
                            } else {
                              var result155 = null;
                              pos = savedPos10;
                            }
                          } else {
                            var result155 = null;
                            pos = savedPos10;
                          }
                        } else {
                          var result155 = null;
                          pos = savedPos10;
                        }
                      } else {
                        var result155 = null;
                        pos = savedPos10;
                      }
                    } else {
                      var result155 = null;
                      pos = savedPos10;
                    }
                  } else {
                    var result155 = null;
                    pos = savedPos10;
                  }
                } else {
                  var result155 = null;
                  pos = savedPos10;
                }
              } else {
                var result155 = null;
                pos = savedPos10;
              }
            } else {
              var result155 = null;
              pos = savedPos10;
            }
          } else {
            var result155 = null;
            pos = savedPos10;
          }
          var result156 = result155 !== null
            ? (function(d, e) {
                  exp = {};
                  exp.token = 'expression';
                  exp.expressionType = 'aggregate';
                  exp.aggregateType = 'sum';
                  exp.distinct = (d != "" ? 'DISTINCT' : d);
                  exp.expression = e;
            
                  return exp;
            
              })(result155[6], result155[8])
            : null;
          if (result156 !== null) {
            var result154 = result156;
          } else {
            var result154 = null;
            pos = savedPos9;
          }
          if (result154 !== null) {
            var result0 = result154;
          } else {
            var savedPos6 = pos;
            var savedPos7 = pos;
            if (input.substr(pos, 1) === "M") {
              var result153 = "M";
              pos += 1;
            } else {
              var result153 = null;
              if (reportMatchFailures) {
                matchFailed("\"M\"");
              }
            }
            if (result153 !== null) {
              var result106 = result153;
            } else {
              if (input.substr(pos, 1) === "m") {
                var result152 = "m";
                pos += 1;
              } else {
                var result152 = null;
                if (reportMatchFailures) {
                  matchFailed("\"m\"");
                }
              }
              if (result152 !== null) {
                var result106 = result152;
              } else {
                var result106 = null;;
              };
            }
            if (result106 !== null) {
              if (input.substr(pos, 1) === "I") {
                var result151 = "I";
                pos += 1;
              } else {
                var result151 = null;
                if (reportMatchFailures) {
                  matchFailed("\"I\"");
                }
              }
              if (result151 !== null) {
                var result107 = result151;
              } else {
                if (input.substr(pos, 1) === "i") {
                  var result150 = "i";
                  pos += 1;
                } else {
                  var result150 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"i\"");
                  }
                }
                if (result150 !== null) {
                  var result107 = result150;
                } else {
                  var result107 = null;;
                };
              }
              if (result107 !== null) {
                if (input.substr(pos, 1) === "N") {
                  var result149 = "N";
                  pos += 1;
                } else {
                  var result149 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"N\"");
                  }
                }
                if (result149 !== null) {
                  var result108 = result149;
                } else {
                  if (input.substr(pos, 1) === "n") {
                    var result148 = "n";
                    pos += 1;
                  } else {
                    var result148 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"n\"");
                    }
                  }
                  if (result148 !== null) {
                    var result108 = result148;
                  } else {
                    var result108 = null;;
                  };
                }
                if (result108 !== null) {
                  var result109 = [];
                  var result147 = parse_WS();
                  while (result147 !== null) {
                    result109.push(result147);
                    var result147 = parse_WS();
                  }
                  if (result109 !== null) {
                    if (input.substr(pos, 1) === "(") {
                      var result110 = "(";
                      pos += 1;
                    } else {
                      var result110 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"(\"");
                      }
                    }
                    if (result110 !== null) {
                      var result111 = [];
                      var result146 = parse_WS();
                      while (result146 !== null) {
                        result111.push(result146);
                        var result146 = parse_WS();
                      }
                      if (result111 !== null) {
                        var savedPos8 = pos;
                        if (input.substr(pos, 1) === "D") {
                          var result145 = "D";
                          pos += 1;
                        } else {
                          var result145 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"D\"");
                          }
                        }
                        if (result145 !== null) {
                          var result122 = result145;
                        } else {
                          if (input.substr(pos, 1) === "d") {
                            var result144 = "d";
                            pos += 1;
                          } else {
                            var result144 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"d\"");
                            }
                          }
                          if (result144 !== null) {
                            var result122 = result144;
                          } else {
                            var result122 = null;;
                          };
                        }
                        if (result122 !== null) {
                          if (input.substr(pos, 1) === "I") {
                            var result143 = "I";
                            pos += 1;
                          } else {
                            var result143 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"I\"");
                            }
                          }
                          if (result143 !== null) {
                            var result123 = result143;
                          } else {
                            if (input.substr(pos, 1) === "i") {
                              var result142 = "i";
                              pos += 1;
                            } else {
                              var result142 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"i\"");
                              }
                            }
                            if (result142 !== null) {
                              var result123 = result142;
                            } else {
                              var result123 = null;;
                            };
                          }
                          if (result123 !== null) {
                            if (input.substr(pos, 1) === "S") {
                              var result141 = "S";
                              pos += 1;
                            } else {
                              var result141 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"S\"");
                              }
                            }
                            if (result141 !== null) {
                              var result124 = result141;
                            } else {
                              if (input.substr(pos, 1) === "s") {
                                var result140 = "s";
                                pos += 1;
                              } else {
                                var result140 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\"s\"");
                                }
                              }
                              if (result140 !== null) {
                                var result124 = result140;
                              } else {
                                var result124 = null;;
                              };
                            }
                            if (result124 !== null) {
                              if (input.substr(pos, 1) === "T") {
                                var result139 = "T";
                                pos += 1;
                              } else {
                                var result139 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\"T\"");
                                }
                              }
                              if (result139 !== null) {
                                var result125 = result139;
                              } else {
                                if (input.substr(pos, 1) === "t") {
                                  var result138 = "t";
                                  pos += 1;
                                } else {
                                  var result138 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\"t\"");
                                  }
                                }
                                if (result138 !== null) {
                                  var result125 = result138;
                                } else {
                                  var result125 = null;;
                                };
                              }
                              if (result125 !== null) {
                                if (input.substr(pos, 1) === "I") {
                                  var result137 = "I";
                                  pos += 1;
                                } else {
                                  var result137 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\"I\"");
                                  }
                                }
                                if (result137 !== null) {
                                  var result126 = result137;
                                } else {
                                  if (input.substr(pos, 1) === "i") {
                                    var result136 = "i";
                                    pos += 1;
                                  } else {
                                    var result136 = null;
                                    if (reportMatchFailures) {
                                      matchFailed("\"i\"");
                                    }
                                  }
                                  if (result136 !== null) {
                                    var result126 = result136;
                                  } else {
                                    var result126 = null;;
                                  };
                                }
                                if (result126 !== null) {
                                  if (input.substr(pos, 1) === "N") {
                                    var result135 = "N";
                                    pos += 1;
                                  } else {
                                    var result135 = null;
                                    if (reportMatchFailures) {
                                      matchFailed("\"N\"");
                                    }
                                  }
                                  if (result135 !== null) {
                                    var result127 = result135;
                                  } else {
                                    if (input.substr(pos, 1) === "n") {
                                      var result134 = "n";
                                      pos += 1;
                                    } else {
                                      var result134 = null;
                                      if (reportMatchFailures) {
                                        matchFailed("\"n\"");
                                      }
                                    }
                                    if (result134 !== null) {
                                      var result127 = result134;
                                    } else {
                                      var result127 = null;;
                                    };
                                  }
                                  if (result127 !== null) {
                                    if (input.substr(pos, 1) === "C") {
                                      var result133 = "C";
                                      pos += 1;
                                    } else {
                                      var result133 = null;
                                      if (reportMatchFailures) {
                                        matchFailed("\"C\"");
                                      }
                                    }
                                    if (result133 !== null) {
                                      var result128 = result133;
                                    } else {
                                      if (input.substr(pos, 1) === "c") {
                                        var result132 = "c";
                                        pos += 1;
                                      } else {
                                        var result132 = null;
                                        if (reportMatchFailures) {
                                          matchFailed("\"c\"");
                                        }
                                      }
                                      if (result132 !== null) {
                                        var result128 = result132;
                                      } else {
                                        var result128 = null;;
                                      };
                                    }
                                    if (result128 !== null) {
                                      if (input.substr(pos, 1) === "T") {
                                        var result131 = "T";
                                        pos += 1;
                                      } else {
                                        var result131 = null;
                                        if (reportMatchFailures) {
                                          matchFailed("\"T\"");
                                        }
                                      }
                                      if (result131 !== null) {
                                        var result129 = result131;
                                      } else {
                                        if (input.substr(pos, 1) === "t") {
                                          var result130 = "t";
                                          pos += 1;
                                        } else {
                                          var result130 = null;
                                          if (reportMatchFailures) {
                                            matchFailed("\"t\"");
                                          }
                                        }
                                        if (result130 !== null) {
                                          var result129 = result130;
                                        } else {
                                          var result129 = null;;
                                        };
                                      }
                                      if (result129 !== null) {
                                        var result121 = [result122, result123, result124, result125, result126, result127, result128, result129];
                                      } else {
                                        var result121 = null;
                                        pos = savedPos8;
                                      }
                                    } else {
                                      var result121 = null;
                                      pos = savedPos8;
                                    }
                                  } else {
                                    var result121 = null;
                                    pos = savedPos8;
                                  }
                                } else {
                                  var result121 = null;
                                  pos = savedPos8;
                                }
                              } else {
                                var result121 = null;
                                pos = savedPos8;
                              }
                            } else {
                              var result121 = null;
                              pos = savedPos8;
                            }
                          } else {
                            var result121 = null;
                            pos = savedPos8;
                          }
                        } else {
                          var result121 = null;
                          pos = savedPos8;
                        }
                        var result112 = result121 !== null ? result121 : '';
                        if (result112 !== null) {
                          var result113 = [];
                          var result120 = parse_WS();
                          while (result120 !== null) {
                            result113.push(result120);
                            var result120 = parse_WS();
                          }
                          if (result113 !== null) {
                            var result114 = parse_ConditionalOrExpression();
                            if (result114 !== null) {
                              var result115 = [];
                              var result119 = parse_WS();
                              while (result119 !== null) {
                                result115.push(result119);
                                var result119 = parse_WS();
                              }
                              if (result115 !== null) {
                                if (input.substr(pos, 1) === ")") {
                                  var result116 = ")";
                                  pos += 1;
                                } else {
                                  var result116 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\")\"");
                                  }
                                }
                                if (result116 !== null) {
                                  var result117 = [];
                                  var result118 = parse_WS();
                                  while (result118 !== null) {
                                    result117.push(result118);
                                    var result118 = parse_WS();
                                  }
                                  if (result117 !== null) {
                                    var result104 = [result106, result107, result108, result109, result110, result111, result112, result113, result114, result115, result116, result117];
                                  } else {
                                    var result104 = null;
                                    pos = savedPos7;
                                  }
                                } else {
                                  var result104 = null;
                                  pos = savedPos7;
                                }
                              } else {
                                var result104 = null;
                                pos = savedPos7;
                              }
                            } else {
                              var result104 = null;
                              pos = savedPos7;
                            }
                          } else {
                            var result104 = null;
                            pos = savedPos7;
                          }
                        } else {
                          var result104 = null;
                          pos = savedPos7;
                        }
                      } else {
                        var result104 = null;
                        pos = savedPos7;
                      }
                    } else {
                      var result104 = null;
                      pos = savedPos7;
                    }
                  } else {
                    var result104 = null;
                    pos = savedPos7;
                  }
                } else {
                  var result104 = null;
                  pos = savedPos7;
                }
              } else {
                var result104 = null;
                pos = savedPos7;
              }
            } else {
              var result104 = null;
              pos = savedPos7;
            }
            var result105 = result104 !== null
              ? (function(d, e) {
                    exp = {};
                    exp.token = 'expression';
                    exp.expressionType = 'aggregate';
                    exp.aggregateType = 'min';
                    exp.distinct = (d != "" ? 'DISTINCT' : d);
                    exp.expression = e;
              
                    return exp;
              
                })(result104[6], result104[8])
              : null;
            if (result105 !== null) {
              var result103 = result105;
            } else {
              var result103 = null;
              pos = savedPos6;
            }
            if (result103 !== null) {
              var result0 = result103;
            } else {
              var savedPos3 = pos;
              var savedPos4 = pos;
              if (input.substr(pos, 1) === "M") {
                var result102 = "M";
                pos += 1;
              } else {
                var result102 = null;
                if (reportMatchFailures) {
                  matchFailed("\"M\"");
                }
              }
              if (result102 !== null) {
                var result55 = result102;
              } else {
                if (input.substr(pos, 1) === "m") {
                  var result101 = "m";
                  pos += 1;
                } else {
                  var result101 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"m\"");
                  }
                }
                if (result101 !== null) {
                  var result55 = result101;
                } else {
                  var result55 = null;;
                };
              }
              if (result55 !== null) {
                if (input.substr(pos, 1) === "A") {
                  var result100 = "A";
                  pos += 1;
                } else {
                  var result100 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"A\"");
                  }
                }
                if (result100 !== null) {
                  var result56 = result100;
                } else {
                  if (input.substr(pos, 1) === "a") {
                    var result99 = "a";
                    pos += 1;
                  } else {
                    var result99 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"a\"");
                    }
                  }
                  if (result99 !== null) {
                    var result56 = result99;
                  } else {
                    var result56 = null;;
                  };
                }
                if (result56 !== null) {
                  if (input.substr(pos, 1) === "X") {
                    var result98 = "X";
                    pos += 1;
                  } else {
                    var result98 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"X\"");
                    }
                  }
                  if (result98 !== null) {
                    var result57 = result98;
                  } else {
                    if (input.substr(pos, 1) === "x") {
                      var result97 = "x";
                      pos += 1;
                    } else {
                      var result97 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"x\"");
                      }
                    }
                    if (result97 !== null) {
                      var result57 = result97;
                    } else {
                      var result57 = null;;
                    };
                  }
                  if (result57 !== null) {
                    var result58 = [];
                    var result96 = parse_WS();
                    while (result96 !== null) {
                      result58.push(result96);
                      var result96 = parse_WS();
                    }
                    if (result58 !== null) {
                      if (input.substr(pos, 1) === "(") {
                        var result59 = "(";
                        pos += 1;
                      } else {
                        var result59 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"(\"");
                        }
                      }
                      if (result59 !== null) {
                        var result60 = [];
                        var result95 = parse_WS();
                        while (result95 !== null) {
                          result60.push(result95);
                          var result95 = parse_WS();
                        }
                        if (result60 !== null) {
                          var savedPos5 = pos;
                          if (input.substr(pos, 1) === "D") {
                            var result94 = "D";
                            pos += 1;
                          } else {
                            var result94 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"D\"");
                            }
                          }
                          if (result94 !== null) {
                            var result71 = result94;
                          } else {
                            if (input.substr(pos, 1) === "d") {
                              var result93 = "d";
                              pos += 1;
                            } else {
                              var result93 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"d\"");
                              }
                            }
                            if (result93 !== null) {
                              var result71 = result93;
                            } else {
                              var result71 = null;;
                            };
                          }
                          if (result71 !== null) {
                            if (input.substr(pos, 1) === "I") {
                              var result92 = "I";
                              pos += 1;
                            } else {
                              var result92 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"I\"");
                              }
                            }
                            if (result92 !== null) {
                              var result72 = result92;
                            } else {
                              if (input.substr(pos, 1) === "i") {
                                var result91 = "i";
                                pos += 1;
                              } else {
                                var result91 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\"i\"");
                                }
                              }
                              if (result91 !== null) {
                                var result72 = result91;
                              } else {
                                var result72 = null;;
                              };
                            }
                            if (result72 !== null) {
                              if (input.substr(pos, 1) === "S") {
                                var result90 = "S";
                                pos += 1;
                              } else {
                                var result90 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\"S\"");
                                }
                              }
                              if (result90 !== null) {
                                var result73 = result90;
                              } else {
                                if (input.substr(pos, 1) === "s") {
                                  var result89 = "s";
                                  pos += 1;
                                } else {
                                  var result89 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\"s\"");
                                  }
                                }
                                if (result89 !== null) {
                                  var result73 = result89;
                                } else {
                                  var result73 = null;;
                                };
                              }
                              if (result73 !== null) {
                                if (input.substr(pos, 1) === "T") {
                                  var result88 = "T";
                                  pos += 1;
                                } else {
                                  var result88 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\"T\"");
                                  }
                                }
                                if (result88 !== null) {
                                  var result74 = result88;
                                } else {
                                  if (input.substr(pos, 1) === "t") {
                                    var result87 = "t";
                                    pos += 1;
                                  } else {
                                    var result87 = null;
                                    if (reportMatchFailures) {
                                      matchFailed("\"t\"");
                                    }
                                  }
                                  if (result87 !== null) {
                                    var result74 = result87;
                                  } else {
                                    var result74 = null;;
                                  };
                                }
                                if (result74 !== null) {
                                  if (input.substr(pos, 1) === "I") {
                                    var result86 = "I";
                                    pos += 1;
                                  } else {
                                    var result86 = null;
                                    if (reportMatchFailures) {
                                      matchFailed("\"I\"");
                                    }
                                  }
                                  if (result86 !== null) {
                                    var result75 = result86;
                                  } else {
                                    if (input.substr(pos, 1) === "i") {
                                      var result85 = "i";
                                      pos += 1;
                                    } else {
                                      var result85 = null;
                                      if (reportMatchFailures) {
                                        matchFailed("\"i\"");
                                      }
                                    }
                                    if (result85 !== null) {
                                      var result75 = result85;
                                    } else {
                                      var result75 = null;;
                                    };
                                  }
                                  if (result75 !== null) {
                                    if (input.substr(pos, 1) === "N") {
                                      var result84 = "N";
                                      pos += 1;
                                    } else {
                                      var result84 = null;
                                      if (reportMatchFailures) {
                                        matchFailed("\"N\"");
                                      }
                                    }
                                    if (result84 !== null) {
                                      var result76 = result84;
                                    } else {
                                      if (input.substr(pos, 1) === "n") {
                                        var result83 = "n";
                                        pos += 1;
                                      } else {
                                        var result83 = null;
                                        if (reportMatchFailures) {
                                          matchFailed("\"n\"");
                                        }
                                      }
                                      if (result83 !== null) {
                                        var result76 = result83;
                                      } else {
                                        var result76 = null;;
                                      };
                                    }
                                    if (result76 !== null) {
                                      if (input.substr(pos, 1) === "C") {
                                        var result82 = "C";
                                        pos += 1;
                                      } else {
                                        var result82 = null;
                                        if (reportMatchFailures) {
                                          matchFailed("\"C\"");
                                        }
                                      }
                                      if (result82 !== null) {
                                        var result77 = result82;
                                      } else {
                                        if (input.substr(pos, 1) === "c") {
                                          var result81 = "c";
                                          pos += 1;
                                        } else {
                                          var result81 = null;
                                          if (reportMatchFailures) {
                                            matchFailed("\"c\"");
                                          }
                                        }
                                        if (result81 !== null) {
                                          var result77 = result81;
                                        } else {
                                          var result77 = null;;
                                        };
                                      }
                                      if (result77 !== null) {
                                        if (input.substr(pos, 1) === "T") {
                                          var result80 = "T";
                                          pos += 1;
                                        } else {
                                          var result80 = null;
                                          if (reportMatchFailures) {
                                            matchFailed("\"T\"");
                                          }
                                        }
                                        if (result80 !== null) {
                                          var result78 = result80;
                                        } else {
                                          if (input.substr(pos, 1) === "t") {
                                            var result79 = "t";
                                            pos += 1;
                                          } else {
                                            var result79 = null;
                                            if (reportMatchFailures) {
                                              matchFailed("\"t\"");
                                            }
                                          }
                                          if (result79 !== null) {
                                            var result78 = result79;
                                          } else {
                                            var result78 = null;;
                                          };
                                        }
                                        if (result78 !== null) {
                                          var result70 = [result71, result72, result73, result74, result75, result76, result77, result78];
                                        } else {
                                          var result70 = null;
                                          pos = savedPos5;
                                        }
                                      } else {
                                        var result70 = null;
                                        pos = savedPos5;
                                      }
                                    } else {
                                      var result70 = null;
                                      pos = savedPos5;
                                    }
                                  } else {
                                    var result70 = null;
                                    pos = savedPos5;
                                  }
                                } else {
                                  var result70 = null;
                                  pos = savedPos5;
                                }
                              } else {
                                var result70 = null;
                                pos = savedPos5;
                              }
                            } else {
                              var result70 = null;
                              pos = savedPos5;
                            }
                          } else {
                            var result70 = null;
                            pos = savedPos5;
                          }
                          var result61 = result70 !== null ? result70 : '';
                          if (result61 !== null) {
                            var result62 = [];
                            var result69 = parse_WS();
                            while (result69 !== null) {
                              result62.push(result69);
                              var result69 = parse_WS();
                            }
                            if (result62 !== null) {
                              var result63 = parse_ConditionalOrExpression();
                              if (result63 !== null) {
                                var result64 = [];
                                var result68 = parse_WS();
                                while (result68 !== null) {
                                  result64.push(result68);
                                  var result68 = parse_WS();
                                }
                                if (result64 !== null) {
                                  if (input.substr(pos, 1) === ")") {
                                    var result65 = ")";
                                    pos += 1;
                                  } else {
                                    var result65 = null;
                                    if (reportMatchFailures) {
                                      matchFailed("\")\"");
                                    }
                                  }
                                  if (result65 !== null) {
                                    var result66 = [];
                                    var result67 = parse_WS();
                                    while (result67 !== null) {
                                      result66.push(result67);
                                      var result67 = parse_WS();
                                    }
                                    if (result66 !== null) {
                                      var result53 = [result55, result56, result57, result58, result59, result60, result61, result62, result63, result64, result65, result66];
                                    } else {
                                      var result53 = null;
                                      pos = savedPos4;
                                    }
                                  } else {
                                    var result53 = null;
                                    pos = savedPos4;
                                  }
                                } else {
                                  var result53 = null;
                                  pos = savedPos4;
                                }
                              } else {
                                var result53 = null;
                                pos = savedPos4;
                              }
                            } else {
                              var result53 = null;
                              pos = savedPos4;
                            }
                          } else {
                            var result53 = null;
                            pos = savedPos4;
                          }
                        } else {
                          var result53 = null;
                          pos = savedPos4;
                        }
                      } else {
                        var result53 = null;
                        pos = savedPos4;
                      }
                    } else {
                      var result53 = null;
                      pos = savedPos4;
                    }
                  } else {
                    var result53 = null;
                    pos = savedPos4;
                  }
                } else {
                  var result53 = null;
                  pos = savedPos4;
                }
              } else {
                var result53 = null;
                pos = savedPos4;
              }
              var result54 = result53 !== null
                ? (function(d, e) {
                      exp = {};
                      exp.token = 'expression'
                      exp.expressionType = 'aggregate'
                      exp.aggregateType = 'max'
                      exp.distinct = (d != "" ? 'DISTINCT' : d);
                      exp.expression = e
                
                      return exp
                
                  })(result53[6], result53[8])
                : null;
              if (result54 !== null) {
                var result52 = result54;
              } else {
                var result52 = null;
                pos = savedPos3;
              }
              if (result52 !== null) {
                var result0 = result52;
              } else {
                var savedPos0 = pos;
                var savedPos1 = pos;
                if (input.substr(pos, 1) === "A") {
                  var result51 = "A";
                  pos += 1;
                } else {
                  var result51 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"A\"");
                  }
                }
                if (result51 !== null) {
                  var result4 = result51;
                } else {
                  if (input.substr(pos, 1) === "a") {
                    var result50 = "a";
                    pos += 1;
                  } else {
                    var result50 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"a\"");
                    }
                  }
                  if (result50 !== null) {
                    var result4 = result50;
                  } else {
                    var result4 = null;;
                  };
                }
                if (result4 !== null) {
                  if (input.substr(pos, 1) === "V") {
                    var result49 = "V";
                    pos += 1;
                  } else {
                    var result49 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"V\"");
                    }
                  }
                  if (result49 !== null) {
                    var result5 = result49;
                  } else {
                    if (input.substr(pos, 1) === "v") {
                      var result48 = "v";
                      pos += 1;
                    } else {
                      var result48 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"v\"");
                      }
                    }
                    if (result48 !== null) {
                      var result5 = result48;
                    } else {
                      var result5 = null;;
                    };
                  }
                  if (result5 !== null) {
                    if (input.substr(pos, 1) === "G") {
                      var result47 = "G";
                      pos += 1;
                    } else {
                      var result47 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"G\"");
                      }
                    }
                    if (result47 !== null) {
                      var result6 = result47;
                    } else {
                      if (input.substr(pos, 1) === "g") {
                        var result46 = "g";
                        pos += 1;
                      } else {
                        var result46 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"g\"");
                        }
                      }
                      if (result46 !== null) {
                        var result6 = result46;
                      } else {
                        var result6 = null;;
                      };
                    }
                    if (result6 !== null) {
                      var result7 = [];
                      var result45 = parse_WS();
                      while (result45 !== null) {
                        result7.push(result45);
                        var result45 = parse_WS();
                      }
                      if (result7 !== null) {
                        if (input.substr(pos, 1) === "(") {
                          var result8 = "(";
                          pos += 1;
                        } else {
                          var result8 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"(\"");
                          }
                        }
                        if (result8 !== null) {
                          var result9 = [];
                          var result44 = parse_WS();
                          while (result44 !== null) {
                            result9.push(result44);
                            var result44 = parse_WS();
                          }
                          if (result9 !== null) {
                            var savedPos2 = pos;
                            if (input.substr(pos, 1) === "D") {
                              var result43 = "D";
                              pos += 1;
                            } else {
                              var result43 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"D\"");
                              }
                            }
                            if (result43 !== null) {
                              var result20 = result43;
                            } else {
                              if (input.substr(pos, 1) === "d") {
                                var result42 = "d";
                                pos += 1;
                              } else {
                                var result42 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\"d\"");
                                }
                              }
                              if (result42 !== null) {
                                var result20 = result42;
                              } else {
                                var result20 = null;;
                              };
                            }
                            if (result20 !== null) {
                              if (input.substr(pos, 1) === "I") {
                                var result41 = "I";
                                pos += 1;
                              } else {
                                var result41 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\"I\"");
                                }
                              }
                              if (result41 !== null) {
                                var result21 = result41;
                              } else {
                                if (input.substr(pos, 1) === "i") {
                                  var result40 = "i";
                                  pos += 1;
                                } else {
                                  var result40 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\"i\"");
                                  }
                                }
                                if (result40 !== null) {
                                  var result21 = result40;
                                } else {
                                  var result21 = null;;
                                };
                              }
                              if (result21 !== null) {
                                if (input.substr(pos, 1) === "S") {
                                  var result39 = "S";
                                  pos += 1;
                                } else {
                                  var result39 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\"S\"");
                                  }
                                }
                                if (result39 !== null) {
                                  var result22 = result39;
                                } else {
                                  if (input.substr(pos, 1) === "s") {
                                    var result38 = "s";
                                    pos += 1;
                                  } else {
                                    var result38 = null;
                                    if (reportMatchFailures) {
                                      matchFailed("\"s\"");
                                    }
                                  }
                                  if (result38 !== null) {
                                    var result22 = result38;
                                  } else {
                                    var result22 = null;;
                                  };
                                }
                                if (result22 !== null) {
                                  if (input.substr(pos, 1) === "T") {
                                    var result37 = "T";
                                    pos += 1;
                                  } else {
                                    var result37 = null;
                                    if (reportMatchFailures) {
                                      matchFailed("\"T\"");
                                    }
                                  }
                                  if (result37 !== null) {
                                    var result23 = result37;
                                  } else {
                                    if (input.substr(pos, 1) === "t") {
                                      var result36 = "t";
                                      pos += 1;
                                    } else {
                                      var result36 = null;
                                      if (reportMatchFailures) {
                                        matchFailed("\"t\"");
                                      }
                                    }
                                    if (result36 !== null) {
                                      var result23 = result36;
                                    } else {
                                      var result23 = null;;
                                    };
                                  }
                                  if (result23 !== null) {
                                    if (input.substr(pos, 1) === "I") {
                                      var result35 = "I";
                                      pos += 1;
                                    } else {
                                      var result35 = null;
                                      if (reportMatchFailures) {
                                        matchFailed("\"I\"");
                                      }
                                    }
                                    if (result35 !== null) {
                                      var result24 = result35;
                                    } else {
                                      if (input.substr(pos, 1) === "i") {
                                        var result34 = "i";
                                        pos += 1;
                                      } else {
                                        var result34 = null;
                                        if (reportMatchFailures) {
                                          matchFailed("\"i\"");
                                        }
                                      }
                                      if (result34 !== null) {
                                        var result24 = result34;
                                      } else {
                                        var result24 = null;;
                                      };
                                    }
                                    if (result24 !== null) {
                                      if (input.substr(pos, 1) === "N") {
                                        var result33 = "N";
                                        pos += 1;
                                      } else {
                                        var result33 = null;
                                        if (reportMatchFailures) {
                                          matchFailed("\"N\"");
                                        }
                                      }
                                      if (result33 !== null) {
                                        var result25 = result33;
                                      } else {
                                        if (input.substr(pos, 1) === "n") {
                                          var result32 = "n";
                                          pos += 1;
                                        } else {
                                          var result32 = null;
                                          if (reportMatchFailures) {
                                            matchFailed("\"n\"");
                                          }
                                        }
                                        if (result32 !== null) {
                                          var result25 = result32;
                                        } else {
                                          var result25 = null;;
                                        };
                                      }
                                      if (result25 !== null) {
                                        if (input.substr(pos, 1) === "C") {
                                          var result31 = "C";
                                          pos += 1;
                                        } else {
                                          var result31 = null;
                                          if (reportMatchFailures) {
                                            matchFailed("\"C\"");
                                          }
                                        }
                                        if (result31 !== null) {
                                          var result26 = result31;
                                        } else {
                                          if (input.substr(pos, 1) === "c") {
                                            var result30 = "c";
                                            pos += 1;
                                          } else {
                                            var result30 = null;
                                            if (reportMatchFailures) {
                                              matchFailed("\"c\"");
                                            }
                                          }
                                          if (result30 !== null) {
                                            var result26 = result30;
                                          } else {
                                            var result26 = null;;
                                          };
                                        }
                                        if (result26 !== null) {
                                          if (input.substr(pos, 1) === "T") {
                                            var result29 = "T";
                                            pos += 1;
                                          } else {
                                            var result29 = null;
                                            if (reportMatchFailures) {
                                              matchFailed("\"T\"");
                                            }
                                          }
                                          if (result29 !== null) {
                                            var result27 = result29;
                                          } else {
                                            if (input.substr(pos, 1) === "t") {
                                              var result28 = "t";
                                              pos += 1;
                                            } else {
                                              var result28 = null;
                                              if (reportMatchFailures) {
                                                matchFailed("\"t\"");
                                              }
                                            }
                                            if (result28 !== null) {
                                              var result27 = result28;
                                            } else {
                                              var result27 = null;;
                                            };
                                          }
                                          if (result27 !== null) {
                                            var result19 = [result20, result21, result22, result23, result24, result25, result26, result27];
                                          } else {
                                            var result19 = null;
                                            pos = savedPos2;
                                          }
                                        } else {
                                          var result19 = null;
                                          pos = savedPos2;
                                        }
                                      } else {
                                        var result19 = null;
                                        pos = savedPos2;
                                      }
                                    } else {
                                      var result19 = null;
                                      pos = savedPos2;
                                    }
                                  } else {
                                    var result19 = null;
                                    pos = savedPos2;
                                  }
                                } else {
                                  var result19 = null;
                                  pos = savedPos2;
                                }
                              } else {
                                var result19 = null;
                                pos = savedPos2;
                              }
                            } else {
                              var result19 = null;
                              pos = savedPos2;
                            }
                            var result10 = result19 !== null ? result19 : '';
                            if (result10 !== null) {
                              var result11 = [];
                              var result18 = parse_WS();
                              while (result18 !== null) {
                                result11.push(result18);
                                var result18 = parse_WS();
                              }
                              if (result11 !== null) {
                                var result12 = parse_ConditionalOrExpression();
                                if (result12 !== null) {
                                  var result13 = [];
                                  var result17 = parse_WS();
                                  while (result17 !== null) {
                                    result13.push(result17);
                                    var result17 = parse_WS();
                                  }
                                  if (result13 !== null) {
                                    if (input.substr(pos, 1) === ")") {
                                      var result14 = ")";
                                      pos += 1;
                                    } else {
                                      var result14 = null;
                                      if (reportMatchFailures) {
                                        matchFailed("\")\"");
                                      }
                                    }
                                    if (result14 !== null) {
                                      var result15 = [];
                                      var result16 = parse_WS();
                                      while (result16 !== null) {
                                        result15.push(result16);
                                        var result16 = parse_WS();
                                      }
                                      if (result15 !== null) {
                                        var result2 = [result4, result5, result6, result7, result8, result9, result10, result11, result12, result13, result14, result15];
                                      } else {
                                        var result2 = null;
                                        pos = savedPos1;
                                      }
                                    } else {
                                      var result2 = null;
                                      pos = savedPos1;
                                    }
                                  } else {
                                    var result2 = null;
                                    pos = savedPos1;
                                  }
                                } else {
                                  var result2 = null;
                                  pos = savedPos1;
                                }
                              } else {
                                var result2 = null;
                                pos = savedPos1;
                              }
                            } else {
                              var result2 = null;
                              pos = savedPos1;
                            }
                          } else {
                            var result2 = null;
                            pos = savedPos1;
                          }
                        } else {
                          var result2 = null;
                          pos = savedPos1;
                        }
                      } else {
                        var result2 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result2 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result2 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result2 = null;
                  pos = savedPos1;
                }
                var result3 = result2 !== null
                  ? (function(d, e) {
                        exp = {};
                        exp.token = 'expression'
                        exp.expressionType = 'aggregate'
                        exp.aggregateType = 'avg'
                        exp.distinct = (d != "" ? 'DISTINCT' : d);
                        exp.expression = e
                  
                        return exp
                  
                    })(result2[6], result2[8])
                  : null;
                if (result3 !== null) {
                  var result1 = result3;
                } else {
                  var result1 = null;
                  pos = savedPos0;
                }
                if (result1 !== null) {
                  var result0 = result1;
                } else {
                  var result0 = null;;
                };
              };
            };
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[110] Aggregate");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_IRIrefOrFunction() {
        var cacheKey = 'IRIrefOrFunction@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = parse_IRIref();
        if (result3 !== null) {
          var result5 = parse_ArgList();
          var result4 = result5 !== null ? result5 : '';
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(i, args) {
                var fcall = {};
                fcall.token = "expression";
                fcall.expressionType = 'irireforfunction';
                fcall.iriref = i;
                fcall.args = args.value;
          
                return fcall;
          })(result1[0], result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[117] IRIrefOrFunction");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_RDFLiteral() {
        var cacheKey = 'RDFLiteral@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = parse_String();
        if (result3 !== null) {
          var result9 = parse_LANGTAG();
          if (result9 !== null) {
            var result5 = result9;
          } else {
            var savedPos2 = pos;
            if (input.substr(pos, 2) === "^^") {
              var result7 = "^^";
              pos += 2;
            } else {
              var result7 = null;
              if (reportMatchFailures) {
                matchFailed("\"^^\"");
              }
            }
            if (result7 !== null) {
              var result8 = parse_IRIref();
              if (result8 !== null) {
                var result6 = [result7, result8];
              } else {
                var result6 = null;
                pos = savedPos2;
              }
            } else {
              var result6 = null;
              pos = savedPos2;
            }
            if (result6 !== null) {
              var result5 = result6;
            } else {
              var result5 = null;;
            };
          }
          var result4 = result5 !== null ? result5 : '';
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(s, e) {
                if(typeof(e) === "string" && e.length > 0) {
                    return {token:'literal', value:s.value, lang:e.slice(1), type:null}
                } else {
                    if(typeof(e) === "object") {
                        e.shift(); // remove the '^^' char
                        return {token:'literal', value:s.value, lang:null, type:e[0] }
                    } else {
                        return { token:'literal', value:s.value, lang:null, type:null }
                    }
                }
          })(result1[0], result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[112] RDFLiteral");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_NumericLiteral() {
        var cacheKey = 'NumericLiteral@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var result3 = parse_NumericLiteralUnsigned();
        if (result3 !== null) {
          var result0 = result3;
        } else {
          var result2 = parse_NumericLiteralPositive();
          if (result2 !== null) {
            var result0 = result2;
          } else {
            var result1 = parse_NumericLiteralNegative();
            if (result1 !== null) {
              var result0 = result1;
            } else {
              var result0 = null;;
            };
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[113] NumericLiteral");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_NumericLiteralUnsigned() {
        var cacheKey = 'NumericLiteralUnsigned@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var result3 = parse_DOUBLE();
        if (result3 !== null) {
          var result0 = result3;
        } else {
          var result2 = parse_DECIMAL();
          if (result2 !== null) {
            var result0 = result2;
          } else {
            var result1 = parse_INTEGER();
            if (result1 !== null) {
              var result0 = result1;
            } else {
              var result0 = null;;
            };
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[114] NumericLiteralUnsigned");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_NumericLiteralPositive() {
        var cacheKey = 'NumericLiteralPositive@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var result3 = parse_DOUBLE_POSITIVE();
        if (result3 !== null) {
          var result0 = result3;
        } else {
          var result2 = parse_DECIMAL_POSITIVE();
          if (result2 !== null) {
            var result0 = result2;
          } else {
            var result1 = parse_INTEGER_POSITIVE();
            if (result1 !== null) {
              var result0 = result1;
            } else {
              var result0 = null;;
            };
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[115] NumericLiteralPositive");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_NumericLiteralNegative() {
        var cacheKey = 'NumericLiteralNegative@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var result3 = parse_DOUBLE_NEGATIVE();
        if (result3 !== null) {
          var result0 = result3;
        } else {
          var result2 = parse_DECIMAL_NEGATIVE();
          if (result2 !== null) {
            var result0 = result2;
          } else {
            var result1 = parse_INTEGER_NEGATIVE();
            if (result1 !== null) {
              var result0 = result1;
            } else {
              var result0 = null;;
            };
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[116] NumericLiteralNegative");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_BooleanLiteral() {
        var cacheKey = 'BooleanLiteral@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos2 = pos;
        var savedPos3 = pos;
        if (input.substr(pos, 1) === "T") {
          var result33 = "T";
          pos += 1;
        } else {
          var result33 = null;
          if (reportMatchFailures) {
            matchFailed("\"T\"");
          }
        }
        if (result33 !== null) {
          var result22 = result33;
        } else {
          if (input.substr(pos, 1) === "t") {
            var result32 = "t";
            pos += 1;
          } else {
            var result32 = null;
            if (reportMatchFailures) {
              matchFailed("\"t\"");
            }
          }
          if (result32 !== null) {
            var result22 = result32;
          } else {
            var result22 = null;;
          };
        }
        if (result22 !== null) {
          if (input.substr(pos, 1) === "R") {
            var result31 = "R";
            pos += 1;
          } else {
            var result31 = null;
            if (reportMatchFailures) {
              matchFailed("\"R\"");
            }
          }
          if (result31 !== null) {
            var result23 = result31;
          } else {
            if (input.substr(pos, 1) === "r") {
              var result30 = "r";
              pos += 1;
            } else {
              var result30 = null;
              if (reportMatchFailures) {
                matchFailed("\"r\"");
              }
            }
            if (result30 !== null) {
              var result23 = result30;
            } else {
              var result23 = null;;
            };
          }
          if (result23 !== null) {
            if (input.substr(pos, 1) === "U") {
              var result29 = "U";
              pos += 1;
            } else {
              var result29 = null;
              if (reportMatchFailures) {
                matchFailed("\"U\"");
              }
            }
            if (result29 !== null) {
              var result24 = result29;
            } else {
              if (input.substr(pos, 1) === "u") {
                var result28 = "u";
                pos += 1;
              } else {
                var result28 = null;
                if (reportMatchFailures) {
                  matchFailed("\"u\"");
                }
              }
              if (result28 !== null) {
                var result24 = result28;
              } else {
                var result24 = null;;
              };
            }
            if (result24 !== null) {
              if (input.substr(pos, 1) === "E") {
                var result27 = "E";
                pos += 1;
              } else {
                var result27 = null;
                if (reportMatchFailures) {
                  matchFailed("\"E\"");
                }
              }
              if (result27 !== null) {
                var result25 = result27;
              } else {
                if (input.substr(pos, 1) === "e") {
                  var result26 = "e";
                  pos += 1;
                } else {
                  var result26 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"e\"");
                  }
                }
                if (result26 !== null) {
                  var result25 = result26;
                } else {
                  var result25 = null;;
                };
              }
              if (result25 !== null) {
                var result20 = [result22, result23, result24, result25];
              } else {
                var result20 = null;
                pos = savedPos3;
              }
            } else {
              var result20 = null;
              pos = savedPos3;
            }
          } else {
            var result20 = null;
            pos = savedPos3;
          }
        } else {
          var result20 = null;
          pos = savedPos3;
        }
        var result21 = result20 !== null
          ? (function() {
                lit = {};
                lit.token = "literal";
                lit.lang = null;
                lit.type = "http://www.w3.org/2001/XMLSchema#boolean";
                lit.value = true;
                return lit;
           })()
          : null;
        if (result21 !== null) {
          var result19 = result21;
        } else {
          var result19 = null;
          pos = savedPos2;
        }
        if (result19 !== null) {
          var result0 = result19;
        } else {
          var savedPos0 = pos;
          var savedPos1 = pos;
          if (input.substr(pos, 1) === "F") {
            var result18 = "F";
            pos += 1;
          } else {
            var result18 = null;
            if (reportMatchFailures) {
              matchFailed("\"F\"");
            }
          }
          if (result18 !== null) {
            var result4 = result18;
          } else {
            if (input.substr(pos, 1) === "f") {
              var result17 = "f";
              pos += 1;
            } else {
              var result17 = null;
              if (reportMatchFailures) {
                matchFailed("\"f\"");
              }
            }
            if (result17 !== null) {
              var result4 = result17;
            } else {
              var result4 = null;;
            };
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === "A") {
              var result16 = "A";
              pos += 1;
            } else {
              var result16 = null;
              if (reportMatchFailures) {
                matchFailed("\"A\"");
              }
            }
            if (result16 !== null) {
              var result5 = result16;
            } else {
              if (input.substr(pos, 1) === "a") {
                var result15 = "a";
                pos += 1;
              } else {
                var result15 = null;
                if (reportMatchFailures) {
                  matchFailed("\"a\"");
                }
              }
              if (result15 !== null) {
                var result5 = result15;
              } else {
                var result5 = null;;
              };
            }
            if (result5 !== null) {
              if (input.substr(pos, 1) === "L") {
                var result14 = "L";
                pos += 1;
              } else {
                var result14 = null;
                if (reportMatchFailures) {
                  matchFailed("\"L\"");
                }
              }
              if (result14 !== null) {
                var result6 = result14;
              } else {
                if (input.substr(pos, 1) === "l") {
                  var result13 = "l";
                  pos += 1;
                } else {
                  var result13 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"l\"");
                  }
                }
                if (result13 !== null) {
                  var result6 = result13;
                } else {
                  var result6 = null;;
                };
              }
              if (result6 !== null) {
                if (input.substr(pos, 1) === "S") {
                  var result12 = "S";
                  pos += 1;
                } else {
                  var result12 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"S\"");
                  }
                }
                if (result12 !== null) {
                  var result7 = result12;
                } else {
                  if (input.substr(pos, 1) === "s") {
                    var result11 = "s";
                    pos += 1;
                  } else {
                    var result11 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"s\"");
                    }
                  }
                  if (result11 !== null) {
                    var result7 = result11;
                  } else {
                    var result7 = null;;
                  };
                }
                if (result7 !== null) {
                  if (input.substr(pos, 1) === "E") {
                    var result10 = "E";
                    pos += 1;
                  } else {
                    var result10 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"E\"");
                    }
                  }
                  if (result10 !== null) {
                    var result8 = result10;
                  } else {
                    if (input.substr(pos, 1) === "e") {
                      var result9 = "e";
                      pos += 1;
                    } else {
                      var result9 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"e\"");
                      }
                    }
                    if (result9 !== null) {
                      var result8 = result9;
                    } else {
                      var result8 = null;;
                    };
                  }
                  if (result8 !== null) {
                    var result2 = [result4, result5, result6, result7, result8];
                  } else {
                    var result2 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result2 = null;
                  pos = savedPos1;
                }
              } else {
                var result2 = null;
                pos = savedPos1;
              }
            } else {
              var result2 = null;
              pos = savedPos1;
            }
          } else {
            var result2 = null;
            pos = savedPos1;
          }
          var result3 = result2 !== null
            ? (function() {
                  lit = {};
                  lit.token = "literal";
                  lit.lang = null;
                  lit.type = "http://www.w3.org/2001/XMLSchema#boolean";
                  lit.value = false;
                  return lit;
            })()
            : null;
          if (result3 !== null) {
            var result1 = result3;
          } else {
            var result1 = null;
            pos = savedPos0;
          }
          if (result1 !== null) {
            var result0 = result1;
          } else {
            var result0 = null;;
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[117] BooleanLiteral");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_String() {
        var cacheKey = 'String@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos3 = pos;
        var result11 = parse_STRING_LITERAL_LONG1();
        var result12 = result11 !== null
          ? (function(s) { return {token:'string', value:s} })(result11)
          : null;
        if (result12 !== null) {
          var result10 = result12;
        } else {
          var result10 = null;
          pos = savedPos3;
        }
        if (result10 !== null) {
          var result0 = result10;
        } else {
          var savedPos2 = pos;
          var result8 = parse_STRING_LITERAL_LONG2();
          var result9 = result8 !== null
            ? (function(s) { return {token:'string', value:s} })(result8)
            : null;
          if (result9 !== null) {
            var result7 = result9;
          } else {
            var result7 = null;
            pos = savedPos2;
          }
          if (result7 !== null) {
            var result0 = result7;
          } else {
            var savedPos1 = pos;
            var result5 = parse_STRING_LITERAL1();
            var result6 = result5 !== null
              ? (function(s) { return {token:'string', value:s} })(result5)
              : null;
            if (result6 !== null) {
              var result4 = result6;
            } else {
              var result4 = null;
              pos = savedPos1;
            }
            if (result4 !== null) {
              var result0 = result4;
            } else {
              var savedPos0 = pos;
              var result2 = parse_STRING_LITERAL2();
              var result3 = result2 !== null
                ? (function(s) { return {token:'string', value:s} })(result2)
                : null;
              if (result3 !== null) {
                var result1 = result3;
              } else {
                var result1 = null;
                pos = savedPos0;
              }
              if (result1 !== null) {
                var result0 = result1;
              } else {
                var result0 = null;;
              };
            };
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[118] String");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_IRIref() {
        var cacheKey = 'IRIref@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos1 = pos;
        var result5 = parse_IRI_REF();
        var result6 = result5 !== null
          ? (function(iri) { return {token: 'uri', prefix:null, suffix:null, value:iri} })(result5)
          : null;
        if (result6 !== null) {
          var result4 = result6;
        } else {
          var result4 = null;
          pos = savedPos1;
        }
        if (result4 !== null) {
          var result0 = result4;
        } else {
          var savedPos0 = pos;
          var result2 = parse_PrefixedName();
          var result3 = result2 !== null
            ? (function(p) { return p })(result2)
            : null;
          if (result3 !== null) {
            var result1 = result3;
          } else {
            var result1 = null;
            pos = savedPos0;
          }
          if (result1 !== null) {
            var result0 = result1;
          } else {
            var result0 = null;;
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[119] IRIref");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_PrefixedName() {
        var cacheKey = 'PrefixedName@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos1 = pos;
        var result5 = parse_PNAME_LN();
        var result6 = result5 !== null
          ? (function(p) { return {token: 'uri', prefix:p[0], suffix:p[1], value:null } })(result5)
          : null;
        if (result6 !== null) {
          var result4 = result6;
        } else {
          var result4 = null;
          pos = savedPos1;
        }
        if (result4 !== null) {
          var result0 = result4;
        } else {
          var savedPos0 = pos;
          var result2 = parse_PNAME_NS();
          var result3 = result2 !== null
            ? (function(p) { return {token: 'uri', prefix:p, suffix:'', value:null } })(result2)
            : null;
          if (result3 !== null) {
            var result1 = result3;
          } else {
            var result1 = null;
            pos = savedPos0;
          }
          if (result1 !== null) {
            var result0 = result1;
          } else {
            var result0 = null;;
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[120] PrefixedName");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_BlankNode() {
        var cacheKey = 'BlankNode@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos1 = pos;
        var result5 = parse_BLANK_NODE_LABEL();
        var result6 = result5 !== null
          ? (function(l) { return {token:'blank', label:l}})(result5)
          : null;
        if (result6 !== null) {
          var result4 = result6;
        } else {
          var result4 = null;
          pos = savedPos1;
        }
        if (result4 !== null) {
          var result0 = result4;
        } else {
          var savedPos0 = pos;
          var result2 = parse_ANON();
          var result3 = result2 !== null
            ? (function() { GlobalBlankNodeCounter++; return {token:'blank', label:''+GlobalBlankNodeCounter} })()
            : null;
          if (result3 !== null) {
            var result1 = result3;
          } else {
            var result1 = null;
            pos = savedPos0;
          }
          if (result1 !== null) {
            var result0 = result1;
          } else {
            var result0 = null;;
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[121] BlankNode");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_IRI_REF() {
        var cacheKey = 'IRI_REF@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "<") {
          var result3 = "<";
          pos += 1;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("\"<\"");
          }
        }
        if (result3 !== null) {
          var result4 = [];
          if (input.substr(pos).match(/^[^<>"{} | ^\\]/) !== null) {
            var result6 = input.charAt(pos);
            pos++;
          } else {
            var result6 = null;
            if (reportMatchFailures) {
              matchFailed("[^<>\"{} | ^\\\\]");
            }
          }
          while (result6 !== null) {
            result4.push(result6);
            if (input.substr(pos).match(/^[^<>"{} | ^\\]/) !== null) {
              var result6 = input.charAt(pos);
              pos++;
            } else {
              var result6 = null;
              if (reportMatchFailures) {
                matchFailed("[^<>\"{} | ^\\\\]");
              }
            }
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === ">") {
              var result5 = ">";
              pos += 1;
            } else {
              var result5 = null;
              if (reportMatchFailures) {
                matchFailed("\">\"");
              }
            }
            if (result5 !== null) {
              var result1 = [result3, result4, result5];
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(iri_ref) { return iri_ref.join('') })(result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[122] IRI_REF");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_PNAME_NS() {
        var cacheKey = 'PNAME_NS@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result5 = parse_PN_PREFIX();
        var result3 = result5 !== null ? result5 : '';
        if (result3 !== null) {
          if (input.substr(pos, 1) === ":") {
            var result4 = ":";
            pos += 1;
          } else {
            var result4 = null;
            if (reportMatchFailures) {
              matchFailed("\":\"");
            }
          }
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(p) { return p })(result1[0])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[123] PNAME_NS");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_PNAME_LN() {
        var cacheKey = 'PNAME_LN@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = parse_PNAME_NS();
        if (result3 !== null) {
          var result4 = parse_PN_LOCAL();
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(p, s) { return [p, s] })(result1[0], result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[124] PNAME_LN");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_BLANK_NODE_LABEL() {
        var cacheKey = 'BLANK_NODE_LABEL@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 2) === "_:") {
          var result3 = "_:";
          pos += 2;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("\"_:\"");
          }
        }
        if (result3 !== null) {
          var result4 = parse_PN_LOCAL();
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(l) { return l })(result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[125] BLANK_NODE_LABEL");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_VAR1() {
        var cacheKey = 'VAR1@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "?") {
          var result3 = "?";
          pos += 1;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("\"?\"");
          }
        }
        if (result3 !== null) {
          var result4 = parse_VARNAME();
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(v) { return v })(result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[126] VAR1");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_VAR2() {
        var cacheKey = 'VAR2@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "$") {
          var result3 = "$";
          pos += 1;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("\"$\"");
          }
        }
        if (result3 !== null) {
          var result4 = parse_VARNAME();
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(v) { return v })(result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[127] VAR2");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_LANGTAG() {
        var cacheKey = 'LANGTAG@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "@") {
          var result3 = "@";
          pos += 1;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("\"@\"");
          }
        }
        if (result3 !== null) {
          if (input.substr(pos).match(/^[a-zA-Z]/) !== null) {
            var result10 = input.charAt(pos);
            pos++;
          } else {
            var result10 = null;
            if (reportMatchFailures) {
              matchFailed("[a-zA-Z]");
            }
          }
          if (result10 !== null) {
            var result4 = [];
            while (result10 !== null) {
              result4.push(result10);
              if (input.substr(pos).match(/^[a-zA-Z]/) !== null) {
                var result10 = input.charAt(pos);
                pos++;
              } else {
                var result10 = null;
                if (reportMatchFailures) {
                  matchFailed("[a-zA-Z]");
                }
              }
            }
          } else {
            var result4 = null;
          }
          if (result4 !== null) {
            var result5 = [];
            var savedPos2 = pos;
            if (input.substr(pos, 1) === "-") {
              var result7 = "-";
              pos += 1;
            } else {
              var result7 = null;
              if (reportMatchFailures) {
                matchFailed("\"-\"");
              }
            }
            if (result7 !== null) {
              if (input.substr(pos).match(/^[a-zA-Z0-9]/) !== null) {
                var result9 = input.charAt(pos);
                pos++;
              } else {
                var result9 = null;
                if (reportMatchFailures) {
                  matchFailed("[a-zA-Z0-9]");
                }
              }
              if (result9 !== null) {
                var result8 = [];
                while (result9 !== null) {
                  result8.push(result9);
                  if (input.substr(pos).match(/^[a-zA-Z0-9]/) !== null) {
                    var result9 = input.charAt(pos);
                    pos++;
                  } else {
                    var result9 = null;
                    if (reportMatchFailures) {
                      matchFailed("[a-zA-Z0-9]");
                    }
                  }
                }
              } else {
                var result8 = null;
              }
              if (result8 !== null) {
                var result6 = [result7, result8];
              } else {
                var result6 = null;
                pos = savedPos2;
              }
            } else {
              var result6 = null;
              pos = savedPos2;
            }
            while (result6 !== null) {
              result5.push(result6);
              var savedPos2 = pos;
              if (input.substr(pos, 1) === "-") {
                var result7 = "-";
                pos += 1;
              } else {
                var result7 = null;
                if (reportMatchFailures) {
                  matchFailed("\"-\"");
                }
              }
              if (result7 !== null) {
                if (input.substr(pos).match(/^[a-zA-Z0-9]/) !== null) {
                  var result9 = input.charAt(pos);
                  pos++;
                } else {
                  var result9 = null;
                  if (reportMatchFailures) {
                    matchFailed("[a-zA-Z0-9]");
                  }
                }
                if (result9 !== null) {
                  var result8 = [];
                  while (result9 !== null) {
                    result8.push(result9);
                    if (input.substr(pos).match(/^[a-zA-Z0-9]/) !== null) {
                      var result9 = input.charAt(pos);
                      pos++;
                    } else {
                      var result9 = null;
                      if (reportMatchFailures) {
                        matchFailed("[a-zA-Z0-9]");
                      }
                    }
                  }
                } else {
                  var result8 = null;
                }
                if (result8 !== null) {
                  var result6 = [result7, result8];
                } else {
                  var result6 = null;
                  pos = savedPos2;
                }
              } else {
                var result6 = null;
                pos = savedPos2;
              }
            }
            if (result5 !== null) {
              var result1 = [result3, result4, result5];
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(a, b) {
          
                if(b.length===0) {
                    return ("@"+a.join('')).toLowerCase();
                } else {
                    return ("@"+a.join('')+"-"+b[0][1].join('')).toLowerCase();
                }
          })(result1[1], result1[2])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[128] LANGTAG");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_INTEGER() {
        var cacheKey = 'INTEGER@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        if (input.substr(pos).match(/^[0-9]/) !== null) {
          var result3 = input.charAt(pos);
          pos++;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("[0-9]");
          }
        }
        if (result3 !== null) {
          var result1 = [];
          while (result3 !== null) {
            result1.push(result3);
            if (input.substr(pos).match(/^[0-9]/) !== null) {
              var result3 = input.charAt(pos);
              pos++;
            } else {
              var result3 = null;
              if (reportMatchFailures) {
                matchFailed("[0-9]");
              }
            }
          }
        } else {
          var result1 = null;
        }
        var result2 = result1 !== null
          ? (function(d) {
                lit = {};
                lit.token = "literal";
                lit.lang = null;
                lit.type = "http://www.w3.org/2001/XMLSchema#integer";
                lit.value = flattenString(d);
                return lit;
          })(result1)
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[129] INTEGER");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_DECIMAL() {
        var cacheKey = 'DECIMAL@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos2 = pos;
        var savedPos3 = pos;
        if (input.substr(pos).match(/^[0-9]/) !== null) {
          var result14 = input.charAt(pos);
          pos++;
        } else {
          var result14 = null;
          if (reportMatchFailures) {
            matchFailed("[0-9]");
          }
        }
        if (result14 !== null) {
          var result10 = [];
          while (result14 !== null) {
            result10.push(result14);
            if (input.substr(pos).match(/^[0-9]/) !== null) {
              var result14 = input.charAt(pos);
              pos++;
            } else {
              var result14 = null;
              if (reportMatchFailures) {
                matchFailed("[0-9]");
              }
            }
          }
        } else {
          var result10 = null;
        }
        if (result10 !== null) {
          if (input.substr(pos, 1) === ".") {
            var result11 = ".";
            pos += 1;
          } else {
            var result11 = null;
            if (reportMatchFailures) {
              matchFailed("\".\"");
            }
          }
          if (result11 !== null) {
            var result12 = [];
            if (input.substr(pos).match(/^[0-9]/) !== null) {
              var result13 = input.charAt(pos);
              pos++;
            } else {
              var result13 = null;
              if (reportMatchFailures) {
                matchFailed("[0-9]");
              }
            }
            while (result13 !== null) {
              result12.push(result13);
              if (input.substr(pos).match(/^[0-9]/) !== null) {
                var result13 = input.charAt(pos);
                pos++;
              } else {
                var result13 = null;
                if (reportMatchFailures) {
                  matchFailed("[0-9]");
                }
              }
            }
            if (result12 !== null) {
              var result8 = [result10, result11, result12];
            } else {
              var result8 = null;
              pos = savedPos3;
            }
          } else {
            var result8 = null;
            pos = savedPos3;
          }
        } else {
          var result8 = null;
          pos = savedPos3;
        }
        var result9 = result8 !== null
          ? (function(a, b, c) {
          
                lit = {};
                lit.token = "literal";
                lit.lang = null;
                lit.type = "http://www.w3.org/2001/XMLSchema#decimal";
                lit.value = flattenString([a,b,c]);
                return lit;
          })(result8[0], result8[1], result8[2])
          : null;
        if (result9 !== null) {
          var result7 = result9;
        } else {
          var result7 = null;
          pos = savedPos2;
        }
        if (result7 !== null) {
          var result0 = result7;
        } else {
          var savedPos0 = pos;
          var savedPos1 = pos;
          if (input.substr(pos, 1) === ".") {
            var result4 = ".";
            pos += 1;
          } else {
            var result4 = null;
            if (reportMatchFailures) {
              matchFailed("\".\"");
            }
          }
          if (result4 !== null) {
            if (input.substr(pos).match(/^[0-9]/) !== null) {
              var result6 = input.charAt(pos);
              pos++;
            } else {
              var result6 = null;
              if (reportMatchFailures) {
                matchFailed("[0-9]");
              }
            }
            if (result6 !== null) {
              var result5 = [];
              while (result6 !== null) {
                result5.push(result6);
                if (input.substr(pos).match(/^[0-9]/) !== null) {
                  var result6 = input.charAt(pos);
                  pos++;
                } else {
                  var result6 = null;
                  if (reportMatchFailures) {
                    matchFailed("[0-9]");
                  }
                }
              }
            } else {
              var result5 = null;
            }
            if (result5 !== null) {
              var result2 = [result4, result5];
            } else {
              var result2 = null;
              pos = savedPos1;
            }
          } else {
            var result2 = null;
            pos = savedPos1;
          }
          var result3 = result2 !== null
            ? (function(a, b) {
                  lit = {};
                  lit.token = "literal";
                  lit.lang = null;
                  lit.type = "http://www.w3.org/2001/XMLSchema#decimal";
                  lit.value = flattenString([a,b]);
                  return lit;
             })(result2[0], result2[1])
            : null;
          if (result3 !== null) {
            var result1 = result3;
          } else {
            var result1 = null;
            pos = savedPos0;
          }
          if (result1 !== null) {
            var result0 = result1;
          } else {
            var result0 = null;;
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[130] DECIMAL");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_DOUBLE() {
        var cacheKey = 'DOUBLE@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos4 = pos;
        var savedPos5 = pos;
        if (input.substr(pos).match(/^[0-9]/) !== null) {
          var result22 = input.charAt(pos);
          pos++;
        } else {
          var result22 = null;
          if (reportMatchFailures) {
            matchFailed("[0-9]");
          }
        }
        if (result22 !== null) {
          var result17 = [];
          while (result22 !== null) {
            result17.push(result22);
            if (input.substr(pos).match(/^[0-9]/) !== null) {
              var result22 = input.charAt(pos);
              pos++;
            } else {
              var result22 = null;
              if (reportMatchFailures) {
                matchFailed("[0-9]");
              }
            }
          }
        } else {
          var result17 = null;
        }
        if (result17 !== null) {
          if (input.substr(pos, 1) === ".") {
            var result18 = ".";
            pos += 1;
          } else {
            var result18 = null;
            if (reportMatchFailures) {
              matchFailed("\".\"");
            }
          }
          if (result18 !== null) {
            var result19 = [];
            if (input.substr(pos).match(/^[0-9]/) !== null) {
              var result21 = input.charAt(pos);
              pos++;
            } else {
              var result21 = null;
              if (reportMatchFailures) {
                matchFailed("[0-9]");
              }
            }
            while (result21 !== null) {
              result19.push(result21);
              if (input.substr(pos).match(/^[0-9]/) !== null) {
                var result21 = input.charAt(pos);
                pos++;
              } else {
                var result21 = null;
                if (reportMatchFailures) {
                  matchFailed("[0-9]");
                }
              }
            }
            if (result19 !== null) {
              var result20 = parse_EXPONENT();
              if (result20 !== null) {
                var result15 = [result17, result18, result19, result20];
              } else {
                var result15 = null;
                pos = savedPos5;
              }
            } else {
              var result15 = null;
              pos = savedPos5;
            }
          } else {
            var result15 = null;
            pos = savedPos5;
          }
        } else {
          var result15 = null;
          pos = savedPos5;
        }
        var result16 = result15 !== null
          ? (function(a, b, c, e) {
                lit = {};
                lit.token = "literal";
                lit.lang = null;
                lit.type = "http://www.w3.org/2001/XMLSchema#double";
                lit.value = flattenString([a,b,c,e]);
                return lit;
          })(result15[0], result15[1], result15[2], result15[3])
          : null;
        if (result16 !== null) {
          var result14 = result16;
        } else {
          var result14 = null;
          pos = savedPos4;
        }
        if (result14 !== null) {
          var result0 = result14;
        } else {
          var savedPos2 = pos;
          var savedPos3 = pos;
          if (input.substr(pos, 1) === ".") {
            var result10 = ".";
            pos += 1;
          } else {
            var result10 = null;
            if (reportMatchFailures) {
              matchFailed("\".\"");
            }
          }
          if (result10 !== null) {
            if (input.substr(pos).match(/^[0-9]/) !== null) {
              var result13 = input.charAt(pos);
              pos++;
            } else {
              var result13 = null;
              if (reportMatchFailures) {
                matchFailed("[0-9]");
              }
            }
            if (result13 !== null) {
              var result11 = [];
              while (result13 !== null) {
                result11.push(result13);
                if (input.substr(pos).match(/^[0-9]/) !== null) {
                  var result13 = input.charAt(pos);
                  pos++;
                } else {
                  var result13 = null;
                  if (reportMatchFailures) {
                    matchFailed("[0-9]");
                  }
                }
              }
            } else {
              var result11 = null;
            }
            if (result11 !== null) {
              var result12 = parse_EXPONENT();
              if (result12 !== null) {
                var result8 = [result10, result11, result12];
              } else {
                var result8 = null;
                pos = savedPos3;
              }
            } else {
              var result8 = null;
              pos = savedPos3;
            }
          } else {
            var result8 = null;
            pos = savedPos3;
          }
          var result9 = result8 !== null
            ? (function(a, b, c) {
                  lit = {};
                  lit.token = "literal";
                  lit.lang = null;
                  lit.type = "http://www.w3.org/2001/XMLSchema#double";
                  lit.value = flattenString([a,b,c]);
                  return lit;
            })(result8[0], result8[1], result8[2])
            : null;
          if (result9 !== null) {
            var result7 = result9;
          } else {
            var result7 = null;
            pos = savedPos2;
          }
          if (result7 !== null) {
            var result0 = result7;
          } else {
            var savedPos0 = pos;
            var savedPos1 = pos;
            if (input.substr(pos).match(/^[0-9]/) !== null) {
              var result6 = input.charAt(pos);
              pos++;
            } else {
              var result6 = null;
              if (reportMatchFailures) {
                matchFailed("[0-9]");
              }
            }
            if (result6 !== null) {
              var result4 = [];
              while (result6 !== null) {
                result4.push(result6);
                if (input.substr(pos).match(/^[0-9]/) !== null) {
                  var result6 = input.charAt(pos);
                  pos++;
                } else {
                  var result6 = null;
                  if (reportMatchFailures) {
                    matchFailed("[0-9]");
                  }
                }
              }
            } else {
              var result4 = null;
            }
            if (result4 !== null) {
              var result5 = parse_EXPONENT();
              if (result5 !== null) {
                var result2 = [result4, result5];
              } else {
                var result2 = null;
                pos = savedPos1;
              }
            } else {
              var result2 = null;
              pos = savedPos1;
            }
            var result3 = result2 !== null
              ? (function(a, b) {
                    lit = {};
                    lit.token = "literal";
                    lit.lang = null;
                    lit.type = "http://www.w3.org/2001/XMLSchema#double";
                    lit.value = flattenString([a,b]);
                    return lit;
              })(result2[0], result2[1])
              : null;
            if (result3 !== null) {
              var result1 = result3;
            } else {
              var result1 = null;
              pos = savedPos0;
            }
            if (result1 !== null) {
              var result0 = result1;
            } else {
              var result0 = null;;
            };
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[131] DOUBLE");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_INTEGER_POSITIVE() {
        var cacheKey = 'INTEGER_POSITIVE@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "+") {
          var result3 = "+";
          pos += 1;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("\"+\"");
          }
        }
        if (result3 !== null) {
          var result4 = parse_INTEGER();
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(d) { d.value = "+"+d.value; return d; })(result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[132] INTEGER_POSITIVE");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_DECIMAL_POSITIVE() {
        var cacheKey = 'DECIMAL_POSITIVE@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "+") {
          var result3 = "+";
          pos += 1;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("\"+\"");
          }
        }
        if (result3 !== null) {
          var result4 = parse_DECIMAL();
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(d) { d.value = "+"+d.value; return d })(result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[133] DECIMAL_POSITIVE");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_DOUBLE_POSITIVE() {
        var cacheKey = 'DOUBLE_POSITIVE@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "+") {
          var result3 = "+";
          pos += 1;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("\"+\"");
          }
        }
        if (result3 !== null) {
          var result4 = parse_DOUBLE();
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(d) { d.value = "+"+d.value; return d })(result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[134] DOUBLE_POSITIVE");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_INTEGER_NEGATIVE() {
        var cacheKey = 'INTEGER_NEGATIVE@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "-") {
          var result3 = "-";
          pos += 1;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("\"-\"");
          }
        }
        if (result3 !== null) {
          var result4 = parse_INTEGER();
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(d) { d.value = "-"+d.value; return d; })(result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[135] INTEGER_NEGATIVE");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_DECIMAL_NEGATIVE() {
        var cacheKey = 'DECIMAL_NEGATIVE@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "-") {
          var result3 = "-";
          pos += 1;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("\"-\"");
          }
        }
        if (result3 !== null) {
          var result4 = parse_DECIMAL();
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(d) { d.value = "-"+d.value; return d; })(result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[136] DECIMAL_NEGATIVE");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_DOUBLE_NEGATIVE() {
        var cacheKey = 'DOUBLE_NEGATIVE@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "-") {
          var result3 = "-";
          pos += 1;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("\"-\"");
          }
        }
        if (result3 !== null) {
          var result4 = parse_DOUBLE();
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(d) { d.value = "-"+d.value; return d; })(result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[137] DOUBLE_NEGATIVE");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_EXPONENT() {
        var cacheKey = 'EXPONENT@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos).match(/^[eE]/) !== null) {
          var result3 = input.charAt(pos);
          pos++;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("[eE]");
          }
        }
        if (result3 !== null) {
          if (input.substr(pos).match(/^[+\-]/) !== null) {
            var result7 = input.charAt(pos);
            pos++;
          } else {
            var result7 = null;
            if (reportMatchFailures) {
              matchFailed("[+\\-]");
            }
          }
          var result4 = result7 !== null ? result7 : '';
          if (result4 !== null) {
            if (input.substr(pos).match(/^[0-9]/) !== null) {
              var result6 = input.charAt(pos);
              pos++;
            } else {
              var result6 = null;
              if (reportMatchFailures) {
                matchFailed("[0-9]");
              }
            }
            if (result6 !== null) {
              var result5 = [];
              while (result6 !== null) {
                result5.push(result6);
                if (input.substr(pos).match(/^[0-9]/) !== null) {
                  var result6 = input.charAt(pos);
                  pos++;
                } else {
                  var result6 = null;
                  if (reportMatchFailures) {
                    matchFailed("[0-9]");
                  }
                }
              }
            } else {
              var result5 = null;
            }
            if (result5 !== null) {
              var result1 = [result3, result4, result5];
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(a, b, c) { return flattenString([a,b,c]) })(result1[0], result1[1], result1[2])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[138] EXPONENT");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_STRING_LITERAL1() {
        var cacheKey = 'STRING_LITERAL1@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "'") {
          var result3 = "'";
          pos += 1;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("\"'\"");
          }
        }
        if (result3 !== null) {
          var result4 = [];
          if (input.substr(pos).match(/^[^'\\\n\r]/) !== null) {
            var result8 = input.charAt(pos);
            pos++;
          } else {
            var result8 = null;
            if (reportMatchFailures) {
              matchFailed("[^'\\\\\\n\\r]");
            }
          }
          if (result8 !== null) {
            var result6 = result8;
          } else {
            var result7 = parse_ECHAR();
            if (result7 !== null) {
              var result6 = result7;
            } else {
              var result6 = null;;
            };
          }
          while (result6 !== null) {
            result4.push(result6);
            if (input.substr(pos).match(/^[^'\\\n\r]/) !== null) {
              var result8 = input.charAt(pos);
              pos++;
            } else {
              var result8 = null;
              if (reportMatchFailures) {
                matchFailed("[^'\\\\\\n\\r]");
              }
            }
            if (result8 !== null) {
              var result6 = result8;
            } else {
              var result7 = parse_ECHAR();
              if (result7 !== null) {
                var result6 = result7;
              } else {
                var result6 = null;;
              };
            }
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === "'") {
              var result5 = "'";
              pos += 1;
            } else {
              var result5 = null;
              if (reportMatchFailures) {
                matchFailed("\"'\"");
              }
            }
            if (result5 !== null) {
              var result1 = [result3, result4, result5];
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(content) { return flattenString(content) })(result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[139] STRING_LITERAL1");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_STRING_LITERAL2() {
        var cacheKey = 'STRING_LITERAL2@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "\"") {
          var result3 = "\"";
          pos += 1;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("\"\\\"\"");
          }
        }
        if (result3 !== null) {
          var result4 = [];
          if (input.substr(pos).match(/^[^"\\\n\r]/) !== null) {
            var result8 = input.charAt(pos);
            pos++;
          } else {
            var result8 = null;
            if (reportMatchFailures) {
              matchFailed("[^\"\\\\\\n\\r]");
            }
          }
          if (result8 !== null) {
            var result6 = result8;
          } else {
            var result7 = parse_ECHAR();
            if (result7 !== null) {
              var result6 = result7;
            } else {
              var result6 = null;;
            };
          }
          while (result6 !== null) {
            result4.push(result6);
            if (input.substr(pos).match(/^[^"\\\n\r]/) !== null) {
              var result8 = input.charAt(pos);
              pos++;
            } else {
              var result8 = null;
              if (reportMatchFailures) {
                matchFailed("[^\"\\\\\\n\\r]");
              }
            }
            if (result8 !== null) {
              var result6 = result8;
            } else {
              var result7 = parse_ECHAR();
              if (result7 !== null) {
                var result6 = result7;
              } else {
                var result6 = null;;
              };
            }
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === "\"") {
              var result5 = "\"";
              pos += 1;
            } else {
              var result5 = null;
              if (reportMatchFailures) {
                matchFailed("\"\\\"\"");
              }
            }
            if (result5 !== null) {
              var result1 = [result3, result4, result5];
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(content) { return flattenString(content) })(result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[140] STRING_LITERAL2");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_STRING_LITERAL_LONG1() {
        var cacheKey = 'STRING_LITERAL_LONG1@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 3) === "'''") {
          var result3 = "'''";
          pos += 3;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("\"'''\"");
          }
        }
        if (result3 !== null) {
          var result4 = [];
          if (input.substr(pos).match(/^[^'\\]/) !== null) {
            var result8 = input.charAt(pos);
            pos++;
          } else {
            var result8 = null;
            if (reportMatchFailures) {
              matchFailed("[^'\\\\]");
            }
          }
          if (result8 !== null) {
            var result6 = result8;
          } else {
            var result7 = parse_ECHAR();
            if (result7 !== null) {
              var result6 = result7;
            } else {
              var result6 = null;;
            };
          }
          while (result6 !== null) {
            result4.push(result6);
            if (input.substr(pos).match(/^[^'\\]/) !== null) {
              var result8 = input.charAt(pos);
              pos++;
            } else {
              var result8 = null;
              if (reportMatchFailures) {
                matchFailed("[^'\\\\]");
              }
            }
            if (result8 !== null) {
              var result6 = result8;
            } else {
              var result7 = parse_ECHAR();
              if (result7 !== null) {
                var result6 = result7;
              } else {
                var result6 = null;;
              };
            }
          }
          if (result4 !== null) {
            if (input.substr(pos, 3) === "'''") {
              var result5 = "'''";
              pos += 3;
            } else {
              var result5 = null;
              if (reportMatchFailures) {
                matchFailed("\"'''\"");
              }
            }
            if (result5 !== null) {
              var result1 = [result3, result4, result5];
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(content) { return flattenString(content) })(result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[141] STRING_LITERAL_LONG1");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_STRING_LITERAL_LONG2() {
        var cacheKey = 'STRING_LITERAL_LONG2@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 3) === "\"\"\"") {
          var result3 = "\"\"\"";
          pos += 3;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("\"\\\"\\\"\\\"\"");
          }
        }
        if (result3 !== null) {
          var result4 = [];
          if (input.substr(pos).match(/^[^"\\]/) !== null) {
            var result8 = input.charAt(pos);
            pos++;
          } else {
            var result8 = null;
            if (reportMatchFailures) {
              matchFailed("[^\"\\\\]");
            }
          }
          if (result8 !== null) {
            var result6 = result8;
          } else {
            var result7 = parse_ECHAR();
            if (result7 !== null) {
              var result6 = result7;
            } else {
              var result6 = null;;
            };
          }
          while (result6 !== null) {
            result4.push(result6);
            if (input.substr(pos).match(/^[^"\\]/) !== null) {
              var result8 = input.charAt(pos);
              pos++;
            } else {
              var result8 = null;
              if (reportMatchFailures) {
                matchFailed("[^\"\\\\]");
              }
            }
            if (result8 !== null) {
              var result6 = result8;
            } else {
              var result7 = parse_ECHAR();
              if (result7 !== null) {
                var result6 = result7;
              } else {
                var result6 = null;;
              };
            }
          }
          if (result4 !== null) {
            if (input.substr(pos, 3) === "\"\"\"") {
              var result5 = "\"\"\"";
              pos += 3;
            } else {
              var result5 = null;
              if (reportMatchFailures) {
                matchFailed("\"\\\"\\\"\\\"\"");
              }
            }
            if (result5 !== null) {
              var result1 = [result3, result4, result5];
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(content) { return flattenString(content) })(result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[142] STRING_LITERAL_LONG2");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_ECHAR() {
        var cacheKey = 'ECHAR@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        if (input.substr(pos, 1) === "\\") {
          var result1 = "\\";
          pos += 1;
        } else {
          var result1 = null;
          if (reportMatchFailures) {
            matchFailed("\"\\\\\"");
          }
        }
        if (result1 !== null) {
          if (input.substr(pos).match(/^[tbnrf"']/) !== null) {
            var result2 = input.charAt(pos);
            pos++;
          } else {
            var result2 = null;
            if (reportMatchFailures) {
              matchFailed("[tbnrf\"']");
            }
          }
          if (result2 !== null) {
            var result0 = [result1, result2];
          } else {
            var result0 = null;
            pos = savedPos0;
          }
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[143] ECHAR");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_NIL() {
        var cacheKey = 'NIL@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "(") {
          var result3 = "(";
          pos += 1;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("\"(\"");
          }
        }
        if (result3 !== null) {
          var result4 = [];
          var result6 = parse_WS();
          while (result6 !== null) {
            result4.push(result6);
            var result6 = parse_WS();
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === ")") {
              var result5 = ")";
              pos += 1;
            } else {
              var result5 = null;
              if (reportMatchFailures) {
                matchFailed("\")\"");
              }
            }
            if (result5 !== null) {
              var result1 = [result3, result4, result5];
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function() {
          
                return  {token: "triplesnodecollection", 
                         triplesContext:[], 
                         chainSubject:[{token:'uri', value:"http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"}]};
          })()
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[144] NIL");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_WS() {
        var cacheKey = 'WS@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        if (input.substr(pos).match(/^[ ]/) !== null) {
          var result5 = input.charAt(pos);
          pos++;
        } else {
          var result5 = null;
          if (reportMatchFailures) {
            matchFailed("[ ]");
          }
        }
        if (result5 !== null) {
          var result0 = result5;
        } else {
          if (input.substr(pos).match(/^[	]/) !== null) {
            var result4 = input.charAt(pos);
            pos++;
          } else {
            var result4 = null;
            if (reportMatchFailures) {
              matchFailed("[	]");
            }
          }
          if (result4 !== null) {
            var result0 = result4;
          } else {
            if (input.substr(pos).match(/^[\r]/) !== null) {
              var result3 = input.charAt(pos);
              pos++;
            } else {
              var result3 = null;
              if (reportMatchFailures) {
                matchFailed("[\\r]");
              }
            }
            if (result3 !== null) {
              var result0 = result3;
            } else {
              if (input.substr(pos).match(/^[\n]/) !== null) {
                var result2 = input.charAt(pos);
                pos++;
              } else {
                var result2 = null;
                if (reportMatchFailures) {
                  matchFailed("[\\n]");
                }
              }
              if (result2 !== null) {
                var result0 = result2;
              } else {
                var result1 = parse_COMMENT();
                if (result1 !== null) {
                  var result0 = result1;
                } else {
                  var result0 = null;;
                };
              };
            };
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[145] WS");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_COMMENT() {
        var cacheKey = 'COMMENT@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        if (input.substr(pos, 1) === "#") {
          var result1 = "#";
          pos += 1;
        } else {
          var result1 = null;
          if (reportMatchFailures) {
            matchFailed("\"#\"");
          }
        }
        if (result1 !== null) {
          var result2 = [];
          if (input.substr(pos).match(/^[^\n\r]/) !== null) {
            var result3 = input.charAt(pos);
            pos++;
          } else {
            var result3 = null;
            if (reportMatchFailures) {
              matchFailed("[^\\n\\r]");
            }
          }
          while (result3 !== null) {
            result2.push(result3);
            if (input.substr(pos).match(/^[^\n\r]/) !== null) {
              var result3 = input.charAt(pos);
              pos++;
            } else {
              var result3 = null;
              if (reportMatchFailures) {
                matchFailed("[^\\n\\r]");
              }
            }
          }
          if (result2 !== null) {
            var result0 = [result1, result2];
          } else {
            var result0 = null;
            pos = savedPos0;
          }
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed(" COMMENT");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_ANON() {
        var cacheKey = 'ANON@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        if (input.substr(pos, 1) === "[") {
          var result1 = "[";
          pos += 1;
        } else {
          var result1 = null;
          if (reportMatchFailures) {
            matchFailed("\"[\"");
          }
        }
        if (result1 !== null) {
          var result2 = [];
          var result4 = parse_WS();
          while (result4 !== null) {
            result2.push(result4);
            var result4 = parse_WS();
          }
          if (result2 !== null) {
            if (input.substr(pos, 1) === "]") {
              var result3 = "]";
              pos += 1;
            } else {
              var result3 = null;
              if (reportMatchFailures) {
                matchFailed("\"]\"");
              }
            }
            if (result3 !== null) {
              var result0 = [result1, result2, result3];
            } else {
              var result0 = null;
              pos = savedPos0;
            }
          } else {
            var result0 = null;
            pos = savedPos0;
          }
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[146] ANON");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_PN_CHARS_BASE() {
        var cacheKey = 'PN_CHARS_BASE@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        if (input.substr(pos).match(/^[A-Z]/) !== null) {
          var result14 = input.charAt(pos);
          pos++;
        } else {
          var result14 = null;
          if (reportMatchFailures) {
            matchFailed("[A-Z]");
          }
        }
        if (result14 !== null) {
          var result0 = result14;
        } else {
          if (input.substr(pos).match(/^[a-z]/) !== null) {
            var result13 = input.charAt(pos);
            pos++;
          } else {
            var result13 = null;
            if (reportMatchFailures) {
              matchFailed("[a-z]");
            }
          }
          if (result13 !== null) {
            var result0 = result13;
          } else {
            if (input.substr(pos).match(/^[\xC0-\xD6]/) !== null) {
              var result12 = input.charAt(pos);
              pos++;
            } else {
              var result12 = null;
              if (reportMatchFailures) {
                matchFailed("[\\xC0-\\xD6]");
              }
            }
            if (result12 !== null) {
              var result0 = result12;
            } else {
              if (input.substr(pos).match(/^[\xD8-\xF6]/) !== null) {
                var result11 = input.charAt(pos);
                pos++;
              } else {
                var result11 = null;
                if (reportMatchFailures) {
                  matchFailed("[\\xD8-\\xF6]");
                }
              }
              if (result11 !== null) {
                var result0 = result11;
              } else {
                if (input.substr(pos).match(/^[\xF8-\u02FF]/) !== null) {
                  var result10 = input.charAt(pos);
                  pos++;
                } else {
                  var result10 = null;
                  if (reportMatchFailures) {
                    matchFailed("[\\xF8-\\u02FF]");
                  }
                }
                if (result10 !== null) {
                  var result0 = result10;
                } else {
                  if (input.substr(pos).match(/^[\u0370-\u037D]/) !== null) {
                    var result9 = input.charAt(pos);
                    pos++;
                  } else {
                    var result9 = null;
                    if (reportMatchFailures) {
                      matchFailed("[\\u0370-\\u037D]");
                    }
                  }
                  if (result9 !== null) {
                    var result0 = result9;
                  } else {
                    if (input.substr(pos).match(/^[\u037F-\u1FFF]/) !== null) {
                      var result8 = input.charAt(pos);
                      pos++;
                    } else {
                      var result8 = null;
                      if (reportMatchFailures) {
                        matchFailed("[\\u037F-\\u1FFF]");
                      }
                    }
                    if (result8 !== null) {
                      var result0 = result8;
                    } else {
                      if (input.substr(pos).match(/^[\u200C-\u200D]/) !== null) {
                        var result7 = input.charAt(pos);
                        pos++;
                      } else {
                        var result7 = null;
                        if (reportMatchFailures) {
                          matchFailed("[\\u200C-\\u200D]");
                        }
                      }
                      if (result7 !== null) {
                        var result0 = result7;
                      } else {
                        if (input.substr(pos).match(/^[\u2070-\u218F]/) !== null) {
                          var result6 = input.charAt(pos);
                          pos++;
                        } else {
                          var result6 = null;
                          if (reportMatchFailures) {
                            matchFailed("[\\u2070-\\u218F]");
                          }
                        }
                        if (result6 !== null) {
                          var result0 = result6;
                        } else {
                          if (input.substr(pos).match(/^[\u2C00-\u2FEF]/) !== null) {
                            var result5 = input.charAt(pos);
                            pos++;
                          } else {
                            var result5 = null;
                            if (reportMatchFailures) {
                              matchFailed("[\\u2C00-\\u2FEF]");
                            }
                          }
                          if (result5 !== null) {
                            var result0 = result5;
                          } else {
                            if (input.substr(pos).match(/^[\u3001-\uD7FF]/) !== null) {
                              var result4 = input.charAt(pos);
                              pos++;
                            } else {
                              var result4 = null;
                              if (reportMatchFailures) {
                                matchFailed("[\\u3001-\\uD7FF]");
                              }
                            }
                            if (result4 !== null) {
                              var result0 = result4;
                            } else {
                              if (input.substr(pos).match(/^[\uF900-\uFDCF]/) !== null) {
                                var result3 = input.charAt(pos);
                                pos++;
                              } else {
                                var result3 = null;
                                if (reportMatchFailures) {
                                  matchFailed("[\\uF900-\\uFDCF]");
                                }
                              }
                              if (result3 !== null) {
                                var result0 = result3;
                              } else {
                                if (input.substr(pos).match(/^[\uFDF0-\uFFFD]/) !== null) {
                                  var result2 = input.charAt(pos);
                                  pos++;
                                } else {
                                  var result2 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("[\\uFDF0-\\uFFFD]");
                                  }
                                }
                                if (result2 !== null) {
                                  var result0 = result2;
                                } else {
                                  if (input.substr(pos).match(/^[\u1000-\uEFFF]/) !== null) {
                                    var result1 = input.charAt(pos);
                                    pos++;
                                  } else {
                                    var result1 = null;
                                    if (reportMatchFailures) {
                                      matchFailed("[\\u1000-\\uEFFF]");
                                    }
                                  }
                                  if (result1 !== null) {
                                    var result0 = result1;
                                  } else {
                                    var result0 = null;;
                                  };
                                };
                              };
                            };
                          };
                        };
                      };
                    };
                  };
                };
              };
            };
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[147] PN_CHARS_BASE");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_PN_CHARS_U() {
        var cacheKey = 'PN_CHARS_U@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var result2 = parse_PN_CHARS_BASE();
        if (result2 !== null) {
          var result0 = result2;
        } else {
          if (input.substr(pos, 1) === "_") {
            var result1 = "_";
            pos += 1;
          } else {
            var result1 = null;
            if (reportMatchFailures) {
              matchFailed("\"_\"");
            }
          }
          if (result1 !== null) {
            var result0 = result1;
          } else {
            var result0 = null;;
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[148] PN_CHARS_U");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_VARNAME() {
        var cacheKey = 'VARNAME@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result12 = parse_PN_CHARS_U();
        if (result12 !== null) {
          var result3 = result12;
        } else {
          if (input.substr(pos).match(/^[0-9]/) !== null) {
            var result11 = input.charAt(pos);
            pos++;
          } else {
            var result11 = null;
            if (reportMatchFailures) {
              matchFailed("[0-9]");
            }
          }
          if (result11 !== null) {
            var result3 = result11;
          } else {
            var result3 = null;;
          };
        }
        if (result3 !== null) {
          var result4 = [];
          var result10 = parse_PN_CHARS_U();
          if (result10 !== null) {
            var result5 = result10;
          } else {
            if (input.substr(pos).match(/^[0-9]/) !== null) {
              var result9 = input.charAt(pos);
              pos++;
            } else {
              var result9 = null;
              if (reportMatchFailures) {
                matchFailed("[0-9]");
              }
            }
            if (result9 !== null) {
              var result5 = result9;
            } else {
              if (input.substr(pos).match(/^[\xB7]/) !== null) {
                var result8 = input.charAt(pos);
                pos++;
              } else {
                var result8 = null;
                if (reportMatchFailures) {
                  matchFailed("[\\xB7]");
                }
              }
              if (result8 !== null) {
                var result5 = result8;
              } else {
                if (input.substr(pos).match(/^[\u0300-\u036F]/) !== null) {
                  var result7 = input.charAt(pos);
                  pos++;
                } else {
                  var result7 = null;
                  if (reportMatchFailures) {
                    matchFailed("[\\u0300-\\u036F]");
                  }
                }
                if (result7 !== null) {
                  var result5 = result7;
                } else {
                  if (input.substr(pos).match(/^[\u203F-\u2040]/) !== null) {
                    var result6 = input.charAt(pos);
                    pos++;
                  } else {
                    var result6 = null;
                    if (reportMatchFailures) {
                      matchFailed("[\\u203F-\\u2040]");
                    }
                  }
                  if (result6 !== null) {
                    var result5 = result6;
                  } else {
                    var result5 = null;;
                  };
                };
              };
            };
          }
          while (result5 !== null) {
            result4.push(result5);
            var result10 = parse_PN_CHARS_U();
            if (result10 !== null) {
              var result5 = result10;
            } else {
              if (input.substr(pos).match(/^[0-9]/) !== null) {
                var result9 = input.charAt(pos);
                pos++;
              } else {
                var result9 = null;
                if (reportMatchFailures) {
                  matchFailed("[0-9]");
                }
              }
              if (result9 !== null) {
                var result5 = result9;
              } else {
                if (input.substr(pos).match(/^[\xB7]/) !== null) {
                  var result8 = input.charAt(pos);
                  pos++;
                } else {
                  var result8 = null;
                  if (reportMatchFailures) {
                    matchFailed("[\\xB7]");
                  }
                }
                if (result8 !== null) {
                  var result5 = result8;
                } else {
                  if (input.substr(pos).match(/^[\u0300-\u036F]/) !== null) {
                    var result7 = input.charAt(pos);
                    pos++;
                  } else {
                    var result7 = null;
                    if (reportMatchFailures) {
                      matchFailed("[\\u0300-\\u036F]");
                    }
                  }
                  if (result7 !== null) {
                    var result5 = result7;
                  } else {
                    if (input.substr(pos).match(/^[\u203F-\u2040]/) !== null) {
                      var result6 = input.charAt(pos);
                      pos++;
                    } else {
                      var result6 = null;
                      if (reportMatchFailures) {
                        matchFailed("[\\u203F-\\u2040]");
                      }
                    }
                    if (result6 !== null) {
                      var result5 = result6;
                    } else {
                      var result5 = null;;
                    };
                  };
                };
              };
            }
          }
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(init, rpart) { return init+rpart.join('') })(result1[0], result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[149] VARNAME");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_PN_CHARS() {
        var cacheKey = 'PN_CHARS@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var result6 = parse_PN_CHARS_U();
        if (result6 !== null) {
          var result0 = result6;
        } else {
          if (input.substr(pos, 1) === "-") {
            var result5 = "-";
            pos += 1;
          } else {
            var result5 = null;
            if (reportMatchFailures) {
              matchFailed("\"-\"");
            }
          }
          if (result5 !== null) {
            var result0 = result5;
          } else {
            if (input.substr(pos).match(/^[0-9]/) !== null) {
              var result4 = input.charAt(pos);
              pos++;
            } else {
              var result4 = null;
              if (reportMatchFailures) {
                matchFailed("[0-9]");
              }
            }
            if (result4 !== null) {
              var result0 = result4;
            } else {
              if (input.substr(pos).match(/^[\xB7]/) !== null) {
                var result3 = input.charAt(pos);
                pos++;
              } else {
                var result3 = null;
                if (reportMatchFailures) {
                  matchFailed("[\\xB7]");
                }
              }
              if (result3 !== null) {
                var result0 = result3;
              } else {
                if (input.substr(pos).match(/^[\u0300-\u036F]/) !== null) {
                  var result2 = input.charAt(pos);
                  pos++;
                } else {
                  var result2 = null;
                  if (reportMatchFailures) {
                    matchFailed("[\\u0300-\\u036F]");
                  }
                }
                if (result2 !== null) {
                  var result0 = result2;
                } else {
                  if (input.substr(pos).match(/^[\u203F-\u2040]/) !== null) {
                    var result1 = input.charAt(pos);
                    pos++;
                  } else {
                    var result1 = null;
                    if (reportMatchFailures) {
                      matchFailed("[\\u203F-\\u2040]");
                    }
                  }
                  if (result1 !== null) {
                    var result0 = result1;
                  } else {
                    var result0 = null;;
                  };
                };
              };
            };
          };
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[150] PN_CHARS");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_PN_PREFIX() {
        var cacheKey = 'PN_PREFIX@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = parse_PN_CHARS_BASE();
        if (result3 !== null) {
          var result4 = [];
          var result7 = parse_PN_CHARS();
          if (result7 !== null) {
            var result5 = result7;
          } else {
            if (input.substr(pos, 1) === ".") {
              var result6 = ".";
              pos += 1;
            } else {
              var result6 = null;
              if (reportMatchFailures) {
                matchFailed("\".\"");
              }
            }
            if (result6 !== null) {
              var result5 = result6;
            } else {
              var result5 = null;;
            };
          }
          while (result5 !== null) {
            result4.push(result5);
            var result7 = parse_PN_CHARS();
            if (result7 !== null) {
              var result5 = result7;
            } else {
              if (input.substr(pos, 1) === ".") {
                var result6 = ".";
                pos += 1;
              } else {
                var result6 = null;
                if (reportMatchFailures) {
                  matchFailed("\".\"");
                }
              }
              if (result6 !== null) {
                var result5 = result6;
              } else {
                var result5 = null;;
              };
            }
          }
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(base, rest) { if(rest[rest.length-1] == '.'){
                                                        	throw new Error("Wrong PN_PREFIX, cannot finish with '.'")
          					      } else {
          						  return base + rest.join('');
          					      }})(result1[0], result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[151] PN_PREFIX");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_PN_LOCAL() {
        var cacheKey = 'PN_LOCAL@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result7 = parse_PN_CHARS_U();
        if (result7 !== null) {
          var result3 = result7;
        } else {
          if (input.substr(pos).match(/^[0-9]/) !== null) {
            var result6 = input.charAt(pos);
            pos++;
          } else {
            var result6 = null;
            if (reportMatchFailures) {
              matchFailed("[0-9]");
            }
          }
          if (result6 !== null) {
            var result3 = result6;
          } else {
            var result3 = null;;
          };
        }
        if (result3 !== null) {
          var result4 = [];
          var result5 = parse_PN_CHARS();
          while (result5 !== null) {
            result4.push(result5);
            var result5 = parse_PN_CHARS();
          }
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(base, rest) { 
                                                                 return base + rest.join('');
                                                               })(result1[0], result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("[152] PN_LOCAL");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function buildErrorMessage() {
        function buildExpected(failuresExpected) {
          failuresExpected.sort();
          
          var lastFailure = null;
          var failuresExpectedUnique = [];
          for (var i = 0; i < failuresExpected.length; i++) {
            if (failuresExpected[i] !== lastFailure) {
              failuresExpectedUnique.push(failuresExpected[i]);
              lastFailure = failuresExpected[i];
            }
          }
          
          switch (failuresExpectedUnique.length) {
            case 0:
              return 'end of input';
            case 1:
              return failuresExpectedUnique[0];
            default:
              return failuresExpectedUnique.slice(0, failuresExpectedUnique.length - 1).join(', ')
                + ' or '
                + failuresExpectedUnique[failuresExpectedUnique.length - 1];
          }
        }
        
        var expected = buildExpected(rightmostMatchFailuresExpected);
        var actualPos = Math.max(pos, rightmostMatchFailuresPos);
        var actual = actualPos < input.length
          ? quote(input.charAt(actualPos))
          : 'end of input';
        
        return 'Expected ' + expected + ' but ' + actual + ' found.';
      }
      
      function computeErrorPosition() {
        /*
         * The first idea was to use |String.split| to break the input up to the
         * error position along newlines and derive the line and column from
         * there. However IE's |split| implementation is so broken that it was
         * enough to prevent it.
         */
        
        var line = 1;
        var column = 1;
        var seenCR = false;
        
        for (var i = 0; i <  rightmostMatchFailuresPos; i++) {
          var ch = input.charAt(i);
          if (ch === '\n') {
            if (!seenCR) { line++; }
            column = 1;
            seenCR = false;
          } else if (ch === '\r' | ch === '\u2028' || ch === '\u2029') {
            line++;
            column = 1;
            seenCR = true;
          } else {
            column++;
            seenCR = false;
          }
        }
        
        return { line: line, column: column };
      }
      
      
      
        var flattenString = function(arrs) {
      
            var acum ="";
      
            for(var i=0; i< arrs.length; i++) {
      
              if(typeof(arrs[i])==='string') {
      
                acum = acum + arrs[i];
      
              } else {
      
                acum = acum + arrs[i].join('');
      
              }
      
            }
      
    
      
            return acum;
      
        }
      
    
      
    
      
        var GlobalBlankNodeCounter = 0;
      
    
      
        var prefixes = {};
      
    
      
        var registerPrefix = function(prefix, uri) {
      
            prefixes[prefix] = uri;
      
        }
      
    
      
        var registerDefaultPrefix = function(uri) {
      
            prefixes[null] = uri;
      
        }
      
    
      
        var arrayToString = function(array) {
      
            var tmp = "";
      
            for(var i=0; i<array.length; i++) {
      
                tmp = tmp + array[i];            
      
            }
      
    
      
            return tmp.toUpperCase();
      
        }
      
    
      
      var result = parseFunctions[startRule]();
      
      /*
       * The parser is now in one of the following three states:
       *
       * 1. The parser successfully parsed the whole input.
       *
       *    - |result !== null|
       *    - |pos === input.length|
       *    - |rightmostMatchFailuresExpected| may or may not contain something
       *
       * 2. The parser successfully parsed only a part of the input.
       *
       *    - |result !== null|
       *    - |pos < input.length|
       *    - |rightmostMatchFailuresExpected| may or may not contain something
       *
       * 3. The parser did not successfully parse any part of the input.
       *
       *   - |result === null|
       *   - |pos === 0|
       *   - |rightmostMatchFailuresExpected| contains at least one failure
       *
       * All code following this comment (including called functions) must
       * handle these states.
       */
      if (result === null || pos !== input.length) {
        var errorPosition = computeErrorPosition();
        throw new this.SyntaxError(
          buildErrorMessage(),
          errorPosition.line,
          errorPosition.column
        );
      }
      
      return result;
    },
    
    /* Returns the parser source code. */
    toSource: function() { return this._source; }
  };
  
  /* Thrown when a parser encounters a syntax error. */
  
  result.SyntaxError = function(message, line, column) {
    this.name = 'SyntaxError';
    this.message = message;
    this.line = line;
    this.column = column;
  };
  
  result.SyntaxError.prototype = Error.prototype;
  
  return result;
})();

